|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class C_DOTA_Item_Eternal_Shroud (size: 0x678 bytes, project "client", binding @ client.dll + 0x47f1530, scope "client.dll") extends C_DOTA_Item
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class C_DOTA_Item (size: 0x678 bytes, project "client", binding @ client.dll + 0x4873780, scope "client.dll") extends C_DOTABaseAbility
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_IS_ABSTRACT
	| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
	| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
	| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
	^MNetworkVarNames "m_bCombinable bool"
	^MNetworkVarNames "m_bPermanent bool"
	^MNetworkVarNames "m_bStackable bool"
	^MNetworkVarNames "m_iStackableMax int"
	^MNetworkVarNames "m_bRecipe bool"
	^MNetworkVarNames "m_bRecipeConsumesCharges bool"
	^MNetworkVarNames "m_iSharability int"
	^MNetworkVarNames "m_bDroppable bool"
	^MNetworkVarNames "m_bPurchasable bool"
	^MNetworkVarNames "m_bSellable bool"
	^MNetworkVarNames "m_bInitiallySellable bool"
	^MNetworkVarNames "m_bForceUnsellable bool"
	^MNetworkVarNames "m_bRequiresCharges bool"
	^MNetworkVarNames "m_bKillable bool"
	^MNetworkVarNames "m_bGloballyCombinable bool"
	^MNetworkVarNames "m_bDisassemblable bool"
	^MNetworkVarNames "m_bNeverDisassemble bool"
	^MNetworkVarNames "m_bIsNeutralDrop bool"
	^MNetworkVarNames "m_nNeutralDropTeam int"
	^MNetworkVarNames "m_bAlertable bool"
	^MNetworkVarNames "m_iInitialCharges int"
	^MNetworkVarNames "m_bCastOnPickup bool"
	^MNetworkVarNames "m_bOnlyPlayerHeroPickup bool"
	^MNetworkVarNames "m_bCreepHeroPickup bool"
	^MNetworkVarNames "m_bCanBeConsumed bool"
	^MNetworkVarNames "m_iValuelessCharges int"
	^MNetworkVarNames "m_iCurrentCharges int"
	^MNetworkVarNames "m_iSecondaryCharges int"
	^MNetworkVarNames "m_iMaxCharges int"
	^MNetworkVarNames "m_bCombineLocked bool"
	^MNetworkVarNames "m_flPurchaseTime GameTime_t"
	^MNetworkVarNames "m_flAssembledTime GameTime_t"
	^MNetworkVarNames "m_bPurchasedWhileDead bool"
	^MNetworkVarNames "m_bCanBeUsedOutOfInventory bool"
	^MNetworkVarNames "m_bItemEnabled bool"
	^MNetworkVarNames "m_flEnableTime GameTime_t"
	^MNetworkVarNames "m_flReclaimTime GameTime_t"
	^MNetworkVarNames "m_bDisplayOwnership bool"
	^MNetworkVarNames "m_bShowOnMinimap bool"
	^MNetworkVarNames "m_flMinimapIconSize float"
	^MNetworkVarNames "m_bIsUpgradeable bool"
	^MNetworkVarNames "m_nUpgradeProgress int"
	^MNetworkVarNames "m_nUpgradeGoal int"
	^MNetworkVarNames "m_iPlayerOwnerID PlayerID_t"
	^MNetworkVarNames "m_vecPreGameTransferPlayerIDs uint8"
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class C_DOTABaseAbility (size: 0x5d8 bytes, project "client", binding @ client.dll + 0x48740a0, scope "client.dll") extends C_BaseEntity
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_IS_ABSTRACT
		| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
		| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
		| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
		^MNetworkExcludeByName "m_angRotation"
		^MNetworkExcludeByName "m_blinktoggle"
		^MNetworkExcludeByName "m_cellX"
		^MNetworkExcludeByName "m_cellY"
		^MNetworkExcludeByName "m_cellZ"
		^MNetworkExcludeByName "m_flAnimTime"
		^MNetworkExcludeByUserGroup "m_flCycle"
		^MNetworkExcludeByName "m_flEncodedController"
		^MNetworkExcludeByName "m_flPoseParameter"
		^MNetworkExcludeByName "m_flSimulationTime"
		^MNetworkExcludeByName "m_flexWeight"
		^MNetworkExcludeByName "m_nForceBone"
		^MNetworkExcludeByName "m_nHitboxSet"
		^MNetworkExcludeByName "m_baseLayer.m_hSequence"
		^MNetworkExcludeByName "m_vecForce"
		^MNetworkExcludeByName "m_vecMaxs"
		^MNetworkExcludeByName "m_vecMins"
		^MNetworkExcludeByName "m_vecOrigin"
		^MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
		^MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
		^MNetworkExcludeByName "m_vLookTargetPosition"
		^MNetworkExcludeByUserGroup "overlay_vars"
		^MNetworkVarNames "m_bRefCountsModifiers bool"
		^MNetworkVarNames "m_bHidden bool"
		^MNetworkVarNames "m_bActivated bool"
		^MNetworkVarNames "m_nAbilityBarType AbilityBarType_t"
		^MNetworkVarNames "m_iDirtyButtons int"
		^MNetworkVarNames "m_iLevel int"
		^MNetworkVarNames "m_bToggleState bool"
		^MNetworkVarNames "m_flAbilityMuteDuration float"
		^MNetworkVarNames "m_bInAbilityPhase bool"
		^MNetworkVarNames "m_fCooldown float"
		^MNetworkVarNames "m_flCooldownLength float"
		^MNetworkVarNames "m_iManaCost int"
		^MNetworkVarNames "m_bAutoCastState bool"
		^MNetworkVarNames "m_bAltCastState bool"
		^MNetworkVarNames "m_flChannelStartTime GameTime_t"
		^MNetworkVarNames "m_flCastStartTime GameTime_t"
		^MNetworkVarNames "m_bInIndefiniteCooldown bool"
		^MNetworkVarNames "m_bFrozenCooldown bool"
		^MNetworkVarNames "m_flOverrideCastPoint float"
		^MNetworkVarNames "m_bStolen bool"
		^MNetworkVarNames "m_bStealable bool"
		^MNetworkVarNames "m_bReplicated bool"
		^MNetworkVarNames "m_nAbilityCurrentCharges int"
		^MNetworkVarNames "m_fAbilityChargeRestoreTimeRemaining float"
		^MNetworkVarNames "m_bUpgradeRecommended bool"
		^MNetworkVarNames "m_nMaxLevelOverride int"
		^MNetworkVarNames "m_nRequiredLevelOverride int"
		^MNetworkVarNames "m_nLevelsBetweenUpgradesOverride int"
		^MNetworkVarNames "m_nHeroFacetKey HeroFacetKey_t"
		^MNetworkVarNames "m_flTotalExtendedChannelTime float"
		^MNetworkVarNames "m_bGrantedByFacet bool"
		
			|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class C_BaseEntity (size: 0x538 bytes, project "client", binding @ client.dll + 0x46e2fc0, scope "client.dll") extends CEntityInstance
			| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
			| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
			| SCHEMA_CF1_CONSTRUCT_ALLOWED
			| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
			| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
			^MNetworkExcludeByName "m_bClientSideRagdoll"
			^MNetworkExcludeByName "m_iMaxHealth"
			^MNetworkExcludeByUserGroup "Player"
			^MNetworkExcludeByUserGroup "Water"
			^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
			^MNetworkExcludeByName "m_spawnflags"
			^MNetworkExcludeByName "m_bTakesDamage"
			^MNetworkExcludeByName "m_nTakeDamageFlags"
			^MNetworkExcludeByName "m_vecAbsVelocity"
			^MNetworkExcludeByName "m_flSpeed"
			^MNetworkVarNames "m_CBodyComponent CBodyComponent::Storage_t"
			^MNetworkVarNames "m_iMaxHealth int32"
			^MNetworkVarNames "m_iHealth int32"
			^MNetworkVarNames "m_lifeState uint8"
			^MNetworkVarNames "m_takedamage DamageOptions_t"
			^MNetworkVarNames "m_bTakesDamage bool"
			^MNetworkVarNames "m_nTakeDamageFlags TakeDamageFlags_t"
			^MNetworkVarNames "m_nPlatformType EntityPlatformTypes_t"
			^MNetworkVarNames "m_ubInterpolationFrame uint8"
			^MNetworkVarNames "m_nSubclassID EntitySubclassID_t"
			^MNetworkVarNames "m_flAnimTime float32"
			^MNetworkVarNames "m_flSimulationTime float32"
			^MNetworkVarNames "m_flCreateTime GameTime_t"
			^MNetworkVarNames "m_flSpeed float"
			^MNetworkVarNames "m_bClientSideRagdoll bool"
			^MNetworkVarNames "m_iTeamNum uint8"
			^MNetworkVarNames "m_spawnflags uint32"
			^MNetworkVarNames "m_nNextThinkTick GameTick_t"
			^MNetworkVarNames "m_fFlags uint32"
			^MNetworkVarNames "m_hEffectEntity CHandle< CBaseEntity>"
			^MNetworkVarNames "m_hOwnerEntity CHandle< CBaseEntity>"
			^MNetworkVarNames "m_MoveCollide MoveCollide_t"
			^MNetworkVarNames "m_MoveType MoveType_t"
			^MNetworkVarNames "m_flWaterLevel float32"
			^MNetworkVarNames "m_fEffects uint32"
			^MNetworkVarNames "m_hGroundEntity CHandle< CBaseEntity>"
			^MNetworkVarNames "m_nGroundBodyIndex int"
			^MNetworkVarNames "m_flFriction float32"
			^MNetworkVarNames "m_flElasticity float32"
			^MNetworkVarNames "m_flGravityScale float32"
			^MNetworkVarNames "m_flTimeScale float32"
			^MNetworkVarNames "m_bAnimatedEveryTick bool"
			^MNetworkVarNames "m_flNavIgnoreUntilTime GameTime_t"
			^MNetworkVarNames "m_nBloodType BloodType"
			
				|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CEntityInstance (size: 0x38 bytes, project "entity2", binding @ client.dll + 0x48fae50, scope "client.dll")
				| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
				| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
				| SCHEMA_CF1_CONSTRUCT_DISALLOWED
				| SCHEMA_CLASS_UNIDENTIFIED17
				^MNetworkVarNames "m_pEntity CEntityIdentity *"
				^MNetworkVarNames "m_CScriptComponent CScriptComponent::Storage_t"
				
				-----members of class CEntityInstance-----
					uint8_t[8] unaccounted(offset 0x0)
					CUtlSymbolLarge m_iszPrivateVScripts(offset 0x8, size 0x8, align 0x8)
						^MNetworkDisable
					CEntityIdentity* m_pEntity(offset 0x10, size 0x8, align 0x8)
						^MNetworkEnable
						^MNetworkPriority "56"
					uint8_t[16] unaccounted(offset 0x18)
					CScriptComponent* m_CScriptComponent(offset 0x28, size 0x8, align 0x8)
						^MNetworkEnable
						^MNetworkDisable
					bool m_bVisibleinPVS(offset 0x30, size 0x1, align 0x1)
					uint8_t[7] unaccounted(offset 0x31)
				
			
			-----static members of class C_BaseEntity-----
				static bool sm_bDatadescValidating(client.dll + 0x4b1c4c4)
				static bool sm_bAccurateTriggerBboxChecks(client.dll + 0x46a6900)
				static bool sm_bDisableTouchFuncs(client.dll + 0x4d006b8)
				static bool m_bAllowPrecache(client.dll + 0x4b1c914)
				static LatchDirtyPermission_t s_nLatchPermissions(client.dll + 0x4d00818)
				static int32 m_nPredictionRandomSeed(client.dll + 0x46a7290)
				static CBasePlayerController* m_pPredictionPlayerController(client.dll + 0x4b1cab8)
				static bool s_bAbsQueriesValid(client.dll + 0x4852bf0)
				static bool s_bAbsRecomputationEnabled(client.dll + 0x4852bf1)
				static bool s_bComputingInterpolatedValues(client.dll + 0x4d00dd4)
				static bool s_bPreventingSetAnimRunAnimEvents(client.dll + 0x4d00dd5)
				static CUtlVector< C_BaseEntity* > gm_UsableObjects(client.dll + 0x4d00038)
			
			-----members of class C_BaseEntity-----
				CBodyComponent* m_CBodyComponent(offset 0x38, size 0x8, align 0x8)
					^MNetworkEnable
					^MNetworkUserGroup "CBodyComponent"
					^MNetworkAlias "CBodyComponent"
					^MNetworkTypeAlias "CBodyComponent"
					^MNetworkPriority "48"
				CNetworkTransmitComponent m_NetworkTransmitComponent(offset 0x40, size 0x1a0, align 0x0)
				uint8_t[288] unaccounted(offset 0x1e0)
				GameTick_t m_nLastThinkTick(offset 0x300, size 0x4, align 0x0)
				uint8_t[4] unaccounted(offset 0x304)
				CGameSceneNode* m_pGameSceneNode(offset 0x308, size 0x8, align 0x8)
				CRenderComponent* m_pRenderComponent(offset 0x310, size 0x8, align 0x8)
				CCollisionProperty* m_pCollision(offset 0x318, size 0x8, align 0x8)
				int32 m_iMaxHealth(offset 0x320, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				int32 m_iHealth(offset 0x324, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkSerializer "ClampHealth"
					^MNetworkUserGroup "Player"
					^MNetworkPriority "32"
				uint8 m_lifeState(offset 0x328, size 0x1, align 0x1)
					^MNetworkEnable
					^MNetworkUserGroup "Player"
					^MNetworkPriority "32"
				DamageOptions_t m_takedamage(offset 0x329, size 0x1, align 0x1)
					^MNetworkEnable
				bool m_bTakesDamage(offset 0x32a, size 0x1, align 0x1)
					^MNetworkEnable
				uint8_t[5] unaccounted(offset 0x32b)
				TakeDamageFlags_t m_nTakeDamageFlags(offset 0x330, size 0x8, align 0x8)
					^MNetworkEnable
				EntityPlatformTypes_t m_nPlatformType(offset 0x338, size 0x1, align 0x1)
					^MNetworkEnable
				uint8 m_ubInterpolationFrame(offset 0x339, size 0x1, align 0x1)
					^MNetworkEnable
					^MNetworkChangeCallback "OnInterpolationFrameChanged"
				uint8_t[2] unaccounted(offset 0x33a)
				CHandle< C_BaseEntity > m_hSceneObjectController(offset 0x33c, size 0x4, align 0x4)
				int32 m_nNoInterpolationTick(offset 0x340, size 0x4, align 0x4)
				int32 m_nVisibilityNoInterpolationTick(offset 0x344, size 0x4, align 0x4)
				float32 m_flProxyRandomValue(offset 0x348, size 0x4, align 0x4)
				int32 m_iEFlags(offset 0x34c, size 0x4, align 0x4)
				uint8 m_nWaterType(offset 0x350, size 0x1, align 0x1)
				bool m_bInterpolateEvenWithNoModel(offset 0x351, size 0x1, align 0x1)
				bool m_bPredictionEligible(offset 0x352, size 0x1, align 0x1)
				bool m_bApplyLayerMatchIDToModel(offset 0x353, size 0x1, align 0x1)
				CUtlStringToken m_tokLayerMatchID(offset 0x354, size 0x4, align 0x4)
				CUtlStringToken m_nSubclassID(offset 0x358, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkChangeCallback "OnSubclassIDChanged"
				uint8_t[12] unaccounted(offset 0x35c)
				int32 m_nSimulationTick(offset 0x368, size 0x4, align 0x4)
				int32 m_iCurrentThinkContext(offset 0x36c, size 0x4, align 0x4)
				CUtlVector< thinkfunc_t > m_aThinkFunctions(offset 0x370, size 0x18, align 0x8)
				bool m_bDisabledContextThinks(offset 0x388, size 0x1, align 0x1)
				uint8_t[3] unaccounted(offset 0x389)
				float32 m_flAnimTime(offset 0x38c, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "0"
					^MNetworkSerializer "animTimeSerializer"
				float32 m_flSimulationTime(offset 0x390, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "1"
					^MNetworkSerializer "simulationTimeSerializer"
					^MNetworkChangeCallback "OnSimulationTimeChanged"
				uint8 m_nSceneObjectOverrideFlags(offset 0x394, size 0x1, align 0x1)
				bool m_bHasSuccessfullyInterpolated(offset 0x395, size 0x1, align 0x1)
				bool m_bHasAddedVarsToInterpolation(offset 0x396, size 0x1, align 0x1)
				bool m_bRenderEvenWhenNotSuccessfullyInterpolated(offset 0x397, size 0x1, align 0x1)
				int32[2] m_nInterpolationLatchDirtyFlags(offset 0x398, size 0x8, align 0x4)
				uint16[11] m_ListEntry(offset 0x3a0, size 0x16, align 0x2)
				uint8_t[2] unaccounted(offset 0x3b6)
				GameTime_t m_flCreateTime(offset 0x3b8, size 0x4, align 0x0)
					^MNetworkEnable
				float32 m_flSpeed(offset 0x3bc, size 0x4, align 0x4)
					^MNetworkEnable
				uint16 m_EntClientFlags(offset 0x3c0, size 0x2, align 0x2)
				bool m_bClientSideRagdoll(offset 0x3c2, size 0x1, align 0x1)
					^MNetworkEnable
				uint8 m_iTeamNum(offset 0x3c3, size 0x1, align 0x1)
					^MNetworkEnable
					^MNetworkChangeCallback "OnNetVarTeamNumChanged"
				uint32 m_spawnflags(offset 0x3c4, size 0x4, align 0x4)
					^MNetworkEnable
				GameTick_t m_nNextThinkTick(offset 0x3c8, size 0x4, align 0x0)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				uint32 m_fFlags(offset 0x3cc, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
					^MNetworkUserGroup "Player"
					^MNetworkChangeCallback "OnFlagsChanged"
				Vector m_vecAbsVelocity(offset 0x3d0, size 0xc, align 0x4)
				uint8_t[4] unaccounted(offset 0x3dc)
				CNetworkVelocityVector m_vecVelocity(offset 0x3e0, size 0x28, align 0x0)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
					^MNetworkChangeCallback "OnLocalVelocityChanged"
					^MNetworkPriority "32"
				uint8_t[8] unaccounted(offset 0x408)
				CHandle< C_BaseEntity > m_hEffectEntity(offset 0x410, size 0x4, align 0x4)
					^MNetworkEnable
				CHandle< C_BaseEntity > m_hOwnerEntity(offset 0x414, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
				MoveCollide_t m_MoveCollide(offset 0x418, size 0x1, align 0x1)
					^MNetworkEnable
				MoveType_t m_MoveType(offset 0x419, size 0x1, align 0x1)
					^MNetworkEnable
					^MNetworkChangeCallback "OnMoveTypeChanged"
				MoveType_t m_nActualMoveType(offset 0x41a, size 0x1, align 0x1)
				uint8_t[1] unaccounted(offset 0x41b)
				float32 m_flWaterLevel(offset 0x41c, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "Water"
					^MNetworkChangeCallback "OnWaterLevelChangeNetworked"
					^MNetworkBitCount "8"
					^MNetworkMinValue "0"
					^MNetworkMaxValue "1"
					^MNetworkEncodeFlags "8"
				uint32 m_fEffects(offset 0x420, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkChangeCallback "OnEffectsChanged"
				CHandle< C_BaseEntity > m_hGroundEntity(offset 0x424, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
					^MNetworkUserGroup "Player"
				int32 m_nGroundBodyIndex(offset 0x428, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
					^MNetworkUserGroup "Player"
				float32 m_flFriction(offset 0x42c, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkBitCount "8"
					^MNetworkMinValue "0"
					^MNetworkMaxValue "4"
					^MNetworkEncodeFlags "1"
					^MNetworkUserGroup "LocalPlayerExclusive"
				float32 m_flElasticity(offset 0x430, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkEncoder "coord"
				float32 m_flGravityScale(offset 0x434, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				float32 m_flTimeScale(offset 0x438, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				bool m_bAnimatedEveryTick(offset 0x43c, size 0x1, align 0x1)
					^MNetworkEnable
					^MNetworkChangeCallback "OnInterpolationAmountChanged"
				uint8_t[3] unaccounted(offset 0x43d)
				GameTime_t m_flNavIgnoreUntilTime(offset 0x440, size 0x4, align 0x0)
					^MNetworkEnable
					^MNetworkChangeCallback "OnNavIgnoreChanged"
				uint16 m_hThink(offset 0x444, size 0x2, align 0x2)
				uint8_t[10] unaccounted(offset 0x446)
				uint8 m_fBBoxVisFlags(offset 0x450, size 0x1, align 0x1)
				bool m_bPredictable(offset 0x451, size 0x1, align 0x1)
				bool m_bRenderWithViewModels(offset 0x452, size 0x1, align 0x1)
				uint8_t[1] unaccounted(offset 0x453)
				CSplitScreenSlot m_nSplitUserPlayerPredictionSlot(offset 0x454, size 0x4, align 0x4)
				int32 m_nFirstPredictableCommand(offset 0x458, size 0x4, align 0x4)
				int32 m_nLastPredictableCommand(offset 0x45c, size 0x4, align 0x4)
				CHandle< C_BaseEntity > m_hOldMoveParent(offset 0x460, size 0x4, align 0x4)
				uint8_t[4] unaccounted(offset 0x464)
				CParticleProperty m_Particles(offset 0x468, size 0x28, align 0x0)
				CUtlVector< float32 > m_vecPredictedScriptFloats(offset 0x490, size 0x18, align 0x8)
				CUtlVector< int32 > m_vecPredictedScriptFloatIDs(offset 0x4a8, size 0x18, align 0x8)
				uint8_t[24] unaccounted(offset 0x4c0)
				int32 m_nNextScriptVarRecordID(offset 0x4d8, size 0x4, align 0x4)
				uint8_t[12] unaccounted(offset 0x4dc)
				QAngle m_vecAngVelocity(offset 0x4e8, size 0xc, align 0x4)
				int32 m_DataChangeEventRef(offset 0x4f4, size 0x4, align 0x4)
				CUtlVector< CEntityHandle > m_dependencies(offset 0x4f8, size 0x18, align 0x8)
				int32 m_nCreationTick(offset 0x510, size 0x4, align 0x4)
				uint8_t[9] unaccounted(offset 0x514)
				bool m_bAnimTimeChanged(offset 0x51d, size 0x1, align 0x1)
				bool m_bSimulationTimeChanged(offset 0x51e, size 0x1, align 0x1)
				uint8_t[9] unaccounted(offset 0x51f)
				CUtlString m_sUniqueHammerID(offset 0x528, size 0x8, align 0x8)
				BloodType m_nBloodType(offset 0x530, size 0x4, align 0x4)
					^MNetworkEnable
				uint8_t[4] unaccounted(offset 0x534)
			
		
		-----members of class C_DOTABaseAbility-----
			uint8_t[8] unaccounted(offset 0x538)
			bool m_bAuxCastState(offset 0x540, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x541)
			int32 m_iEnemyLevel(offset 0x544, size 0x4, align 0x4)
			int32 m_iMaxLevel(offset 0x548, size 0x4, align 0x4)
			int32 m_iRequiredLevel(offset 0x54c, size 0x4, align 0x4)
			int32 m_iLevelsBetweenUpgrades(offset 0x550, size 0x4, align 0x4)
			bool m_bCanLearn(offset 0x554, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x555)
			float32 m_flUpgradeBlend(offset 0x558, size 0x4, align 0x4)
			bool m_bUpgradedDuringQuickcastPreview(offset 0x55c, size 0x1, align 0x1)
			bool m_bConsiderOvershootInGetCastRange(offset 0x55d, size 0x1, align 0x1)
			bool m_bRefCountsModifiers(offset 0x55e, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bHidden(offset 0x55f, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bOldHidden(offset 0x560, size 0x1, align 0x1)
			bool m_bActivated(offset 0x561, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bOldActivated(offset 0x562, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0x563)
			AbilityBarType_t m_nAbilityBarType(offset 0x564, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iDirtyButtons(offset 0x568, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkChangeCallback "OnDirtyButtonsChanged"
			bool m_bPerformDirtyParity(offset 0x56c, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x56d)
			int32 m_iLevel(offset 0x570, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkChangeCallback "OnLevelChanged"
				^MNetworkPriority "32"
			bool m_bAbilityLevelDirty(offset 0x574, size 0x1, align 0x1)
			bool m_bToggleState(offset 0x575, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[2] unaccounted(offset 0x576)
			float32 m_flAbilityMuteDuration(offset 0x578, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bInAbilityPhase(offset 0x57c, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkPriority "32"
			uint8_t[3] unaccounted(offset 0x57d)
			float32 m_fCooldown(offset 0x580, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			float32 m_flCooldownLength(offset 0x584, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "15"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "1024"
			int32 m_iManaCost(offset 0x588, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			bool m_bAutoCastState(offset 0x58c, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkPriority "32"
			bool m_bAltCastState(offset 0x58d, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkPriority "32"
			uint8_t[2] unaccounted(offset 0x58e)
			GameTime_t m_flChannelStartTime(offset 0x590, size 0x4, align 0x0)
				^MNetworkEnable
			GameTime_t m_flCastStartTime(offset 0x594, size 0x4, align 0x0)
				^MNetworkEnable
			bool m_bInIndefiniteCooldown(offset 0x598, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bFrozenCooldown(offset 0x599, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[2] unaccounted(offset 0x59a)
			float32 m_flOverrideCastPoint(offset 0x59c, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bStolen(offset 0x5a0, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bStealable(offset 0x5a1, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bReplicated(offset 0x5a2, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[1] unaccounted(offset 0x5a3)
			int32 m_nAbilityCurrentCharges(offset 0x5a4, size 0x4, align 0x4)
				^MNetworkEnable
			float32 m_fAbilityChargeRestoreTimeRemaining(offset 0x5a8, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			bool m_bUpgradeRecommended(offset 0x5ac, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[3] unaccounted(offset 0x5ad)
			int32 m_nMaxLevelOverride(offset 0x5b0, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_nRequiredLevelOverride(offset 0x5b4, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_nLevelsBetweenUpgradesOverride(offset 0x5b8, size 0x4, align 0x4)
				^MNetworkEnable
			uint8_t[4] unaccounted(offset 0x5bc)
			HeroFacetKey_t m_nHeroFacetKey(offset 0x5c0, size 0x8, align 0x0)
				^MNetworkEnable
			float32 m_flTotalExtendedChannelTime(offset 0x5c8, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bGrantedByFacet(offset 0x5cc, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[3] unaccounted(offset 0x5cd)
			float32 m_flLastCastClickTime(offset 0x5d0, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x5d4)
		
	
	-----members of class C_DOTA_Item-----
		int32 m_CastAnimation(offset 0x5d8, size 0x4, align 0x4)
		bool m_bCombinable(offset 0x5dc, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bPermanent(offset 0x5dd, size 0x1, align 0x1)
			^MNetworkEnable
			^MNetworkPriority "32"
		bool m_bStackable(offset 0x5de, size 0x1, align 0x1)
			^MNetworkEnable
			^MNetworkPriority "32"
		uint8_t[1] unaccounted(offset 0x5df)
		int32 m_iStackableMax(offset 0x5e0, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
		bool m_bRecipe(offset 0x5e4, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bRecipeConsumesCharges(offset 0x5e5, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[2] unaccounted(offset 0x5e6)
		int32 m_iSharability(offset 0x5e8, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
		bool m_bDroppable(offset 0x5ec, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bPurchasable(offset 0x5ed, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bSellable(offset 0x5ee, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bInitiallySellable(offset 0x5ef, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bForceUnsellable(offset 0x5f0, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bRequiresCharges(offset 0x5f1, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bDisplayCharges(offset 0x5f2, size 0x1, align 0x1)
		bool m_bHideCharges(offset 0x5f3, size 0x1, align 0x1)
		bool m_bKillable(offset 0x5f4, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bGloballyCombinable(offset 0x5f5, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bDisassemblable(offset 0x5f6, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bNeverDisassemble(offset 0x5f7, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bIsNeutralDrop(offset 0x5f8, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[3] unaccounted(offset 0x5f9)
		int32 m_nNeutralDropTeam(offset 0x5fc, size 0x4, align 0x4)
			^MNetworkEnable
		bool m_bAlertable(offset 0x600, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[3] unaccounted(offset 0x601)
		int32 m_iInitialCharges(offset 0x604, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
		bool m_bCastOnPickup(offset 0x608, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bOnlyPlayerHeroPickup(offset 0x609, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bCreepHeroPickup(offset 0x60a, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bCanBeConsumed(offset 0x60b, size 0x1, align 0x1)
			^MNetworkEnable
		int32 m_iValuelessCharges(offset 0x60c, size 0x4, align 0x4)
			^MNetworkEnable
		int32 m_iCurrentCharges(offset 0x610, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
		int32 m_iSecondaryCharges(offset 0x614, size 0x4, align 0x4)
			^MNetworkEnable
		int32 m_iMaxCharges(offset 0x618, size 0x4, align 0x4)
			^MNetworkEnable
		bool m_bCombineLocked(offset 0x61c, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[3] unaccounted(offset 0x61d)
		GameTime_t m_flPurchaseTime(offset 0x620, size 0x4, align 0x0)
			^MNetworkEnable
			^MNetworkPriority "32"
		GameTime_t m_flAssembledTime(offset 0x624, size 0x4, align 0x0)
			^MNetworkEnable
			^MNetworkPriority "32"
		bool m_bPurchasedWhileDead(offset 0x628, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bCanBeUsedOutOfInventory(offset 0x629, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bItemEnabled(offset 0x62a, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[1] unaccounted(offset 0x62b)
		GameTime_t m_flEnableTime(offset 0x62c, size 0x4, align 0x0)
			^MNetworkEnable
			^MNetworkPriority "32"
		GameTime_t m_flReclaimTime(offset 0x630, size 0x4, align 0x0)
			^MNetworkEnable
		bool m_bDisplayOwnership(offset 0x634, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bShowOnMinimap(offset 0x635, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[2] unaccounted(offset 0x636)
		float32 m_flMinimapIconSize(offset 0x638, size 0x4, align 0x4)
			^MNetworkEnable
		bool m_bIsUpgradeable(offset 0x63c, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[3] unaccounted(offset 0x63d)
		int32 m_nUpgradeProgress(offset 0x640, size 0x4, align 0x4)
			^MNetworkEnable
		int32 m_nUpgradeGoal(offset 0x644, size 0x4, align 0x4)
			^MNetworkEnable
		CHandle< C_BaseEntity > m_hOldOwnerEntity(offset 0x648, size 0x4, align 0x4)
		int32 m_iOldCharges(offset 0x64c, size 0x4, align 0x4)
		PlayerID_t m_iPlayerOwnerID(offset 0x650, size 0x4, align 0x0)
			^MNetworkEnable
		uint8_t[4] unaccounted(offset 0x654)
		C_NetworkUtlVectorBase< uint8 > m_vecPreGameTransferPlayerIDs(offset 0x658, size 0x18, align 0x8)
			^MNetworkEnable
		uint8_t[8] unaccounted(offset 0x670)
	

-----members of class C_DOTA_Item_Eternal_Shroud-----
	<no members>

