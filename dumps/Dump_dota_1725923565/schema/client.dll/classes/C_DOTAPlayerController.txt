|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class C_DOTAPlayerController (size: 0xdc8 bytes, project "client", binding @ client.dll + 0x487bdc0, scope "client.dll") extends CBasePlayerController
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
^MNetworkExcludeByName "m_angRotation"
^MNetworkExcludeByName "m_flAnimTime"
^MNetworkExcludeByUserGroup "m_flCycle"
^MNetworkExcludeByName "m_flPlaybackRate"
^MNetworkExcludeByName "m_flPoseParameter"
^MNetworkExcludeByName "m_flSimulationTime"
^MNetworkExcludeByName "m_baseLayer.m_hSequence"
^MNetworkExcludeByName "m_vecVelocity"
^MNetworkExcludeByName "m_flexWeight"
^MNetworkExcludeByUserGroup "overlay_vars"
^MNetworkExcludeByName "m_nTickBase"
^MNetworkVarNames "m_bUsingCameraMan bool"
^MNetworkVarNames "m_bUsingAssistedCameraOperator bool"
^MNetworkVarNames "m_nPlayerAssistFlags int"
^MNetworkVarNames "m_nPlayerID PlayerID_t"
^MNetworkVarNames "m_hAssignedHero CHandle< CBaseEntity>"
^MNetworkVarNames "m_hKillCamUnit CHandle< CBaseEntity>"
^MNetworkVarNames "m_nCachedCoachedTeam int"
^MNetworkVarNames "m_nServerOrderSequenceNumber int"
^MNetworkVarNames "m_iCursor int"
^MNetworkVarNames "m_iSpectatorClickBehavior int"
^MNetworkVarNames "m_flAspectRatio float"
^MNetworkVarNames "m_hSpectatorQueryUnit CHandle< CBaseEntity>"
^MNetworkVarNames "m_iStatsPanel int"
^MNetworkVarNames "m_iShopPanel int"
^MNetworkVarNames "m_iShopViewMode ShopItemViewMode_t"
^MNetworkVarNames "m_iStatsDropdownCategory int"
^MNetworkVarNames "m_iStatsDropdownSort int"
^MNetworkVarNames "m_szShopString char"
^MNetworkVarNames "m_vecClientQuickBuyState ClientQuickBuyItemState"
^MNetworkVarNames "m_bInShowCaseMode bool"
^MNetworkVarNames "m_flCameraZoomAmount float"
^MNetworkVarNames "m_iHighPriorityScore int"
^MNetworkVarNames "m_quickBuyItems AbilityID_t"
^MNetworkVarNames "m_quickBuyIsPurchasable bool"
^MNetworkVarNames "m_flFrameTime float"
^MNetworkVarNames "m_flFrameTimeStdDev float"
^MNetworkVarNames "m_flUnfilteredFrameTime float"
^MNetworkVarNames "m_iMusicStatus int"
^MNetworkVarNames "m_flMusicOperatorVals float"
^MNetworkVarNames "m_iMusicOperatorVals int"
^MNetworkReplayCompatField "m_iPlayerID OnPlayerIDChangedCompat"
^MNetworkReplayCompatField "m_audio\..* OnReplayCompat_ForwardAudioParamsCallback"

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBasePlayerController (size: 0x6d8 bytes, project "client", binding @ client.dll + 0x4835dc0, scope "client.dll") extends C_BaseEntity
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
	| SCHEMA_CF1_CONSTRUCT_ALLOWED
	| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
	| SCHEMA_CF1_INFO_TAG_MNetworkNoBase
	^MNetworkIncludeByName "m_pEntity"
	^MNetworkIncludeByName "m_flSimulationTime"
	^MNetworkIncludeByName "m_flCreateTime"
	^MNetworkIncludeByName "m_iTeamNum"
	^MNetworkIncludeByName "m_nNextThinkTick"
	^MNetworkIncludeByName "m_fFlags"
	^MNetworkUserGroupProxy "CBasePlayerController LocalPlayerExclusive"
	^MNetworkUserGroupProxy "CBasePlayerController LocalTeamExclusive"
	^MNetworkIncludeByUserGroup "LocalPlayerExclusive"
	^MNetworkVarNames "m_nTickBase uint32"
	^MNetworkVarNames "m_hPawn CHandle< CBasePlayerPawn>"
	^MNetworkVarNames "m_bKnownTeamMismatch bool"
	^MNetworkVarNames "m_iConnected PlayerConnectedState"
	^MNetworkVarNames "m_iszPlayerName char"
	^MNetworkVarNames "m_steamID uint64"
	^MNetworkVarNames "m_iDesiredFOV uint32"
	^MNetworkReplayCompatField "m_skeletonInstance\.m_vecOrigin\..*| OnReplayCompat_GameSceneNodeOriginAngles"
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class C_BaseEntity (size: 0x538 bytes, project "client", binding @ client.dll + 0x46e2fc0, scope "client.dll") extends CEntityInstance
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
		| SCHEMA_CF1_CONSTRUCT_ALLOWED
		| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
		| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
		^MNetworkExcludeByName "m_bClientSideRagdoll"
		^MNetworkExcludeByName "m_iMaxHealth"
		^MNetworkExcludeByUserGroup "Player"
		^MNetworkExcludeByUserGroup "Water"
		^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
		^MNetworkExcludeByName "m_spawnflags"
		^MNetworkExcludeByName "m_bTakesDamage"
		^MNetworkExcludeByName "m_nTakeDamageFlags"
		^MNetworkExcludeByName "m_vecAbsVelocity"
		^MNetworkExcludeByName "m_flSpeed"
		^MNetworkVarNames "m_CBodyComponent CBodyComponent::Storage_t"
		^MNetworkVarNames "m_iMaxHealth int32"
		^MNetworkVarNames "m_iHealth int32"
		^MNetworkVarNames "m_lifeState uint8"
		^MNetworkVarNames "m_takedamage DamageOptions_t"
		^MNetworkVarNames "m_bTakesDamage bool"
		^MNetworkVarNames "m_nTakeDamageFlags TakeDamageFlags_t"
		^MNetworkVarNames "m_nPlatformType EntityPlatformTypes_t"
		^MNetworkVarNames "m_ubInterpolationFrame uint8"
		^MNetworkVarNames "m_nSubclassID EntitySubclassID_t"
		^MNetworkVarNames "m_flAnimTime float32"
		^MNetworkVarNames "m_flSimulationTime float32"
		^MNetworkVarNames "m_flCreateTime GameTime_t"
		^MNetworkVarNames "m_flSpeed float"
		^MNetworkVarNames "m_bClientSideRagdoll bool"
		^MNetworkVarNames "m_iTeamNum uint8"
		^MNetworkVarNames "m_spawnflags uint32"
		^MNetworkVarNames "m_nNextThinkTick GameTick_t"
		^MNetworkVarNames "m_fFlags uint32"
		^MNetworkVarNames "m_hEffectEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_hOwnerEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_MoveCollide MoveCollide_t"
		^MNetworkVarNames "m_MoveType MoveType_t"
		^MNetworkVarNames "m_flWaterLevel float32"
		^MNetworkVarNames "m_fEffects uint32"
		^MNetworkVarNames "m_hGroundEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_nGroundBodyIndex int"
		^MNetworkVarNames "m_flFriction float32"
		^MNetworkVarNames "m_flElasticity float32"
		^MNetworkVarNames "m_flGravityScale float32"
		^MNetworkVarNames "m_flTimeScale float32"
		^MNetworkVarNames "m_bAnimatedEveryTick bool"
		^MNetworkVarNames "m_flNavIgnoreUntilTime GameTime_t"
		^MNetworkVarNames "m_nBloodType BloodType"
		
			|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CEntityInstance (size: 0x38 bytes, project "entity2", binding @ client.dll + 0x48fae50, scope "client.dll")
			| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
			| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
			| SCHEMA_CF1_CONSTRUCT_DISALLOWED
			| SCHEMA_CLASS_UNIDENTIFIED17
			^MNetworkVarNames "m_pEntity CEntityIdentity *"
			^MNetworkVarNames "m_CScriptComponent CScriptComponent::Storage_t"
			
			-----members of class CEntityInstance-----
				uint8_t[8] unaccounted(offset 0x0)
				CUtlSymbolLarge m_iszPrivateVScripts(offset 0x8, size 0x8, align 0x8)
					^MNetworkDisable
				CEntityIdentity* m_pEntity(offset 0x10, size 0x8, align 0x8)
					^MNetworkEnable
					^MNetworkPriority "56"
				uint8_t[16] unaccounted(offset 0x18)
				CScriptComponent* m_CScriptComponent(offset 0x28, size 0x8, align 0x8)
					^MNetworkEnable
					^MNetworkDisable
				bool m_bVisibleinPVS(offset 0x30, size 0x1, align 0x1)
				uint8_t[7] unaccounted(offset 0x31)
			
		
		-----static members of class C_BaseEntity-----
			static bool sm_bDatadescValidating(client.dll + 0x4b1c4c4)
			static bool sm_bAccurateTriggerBboxChecks(client.dll + 0x46a6900)
			static bool sm_bDisableTouchFuncs(client.dll + 0x4d006b8)
			static bool m_bAllowPrecache(client.dll + 0x4b1c914)
			static LatchDirtyPermission_t s_nLatchPermissions(client.dll + 0x4d00818)
			static int32 m_nPredictionRandomSeed(client.dll + 0x46a7290)
			static CBasePlayerController* m_pPredictionPlayerController(client.dll + 0x4b1cab8)
			static bool s_bAbsQueriesValid(client.dll + 0x4852bf0)
			static bool s_bAbsRecomputationEnabled(client.dll + 0x4852bf1)
			static bool s_bComputingInterpolatedValues(client.dll + 0x4d00dd4)
			static bool s_bPreventingSetAnimRunAnimEvents(client.dll + 0x4d00dd5)
			static CUtlVector< C_BaseEntity* > gm_UsableObjects(client.dll + 0x4d00038)
		
		-----members of class C_BaseEntity-----
			CBodyComponent* m_CBodyComponent(offset 0x38, size 0x8, align 0x8)
				^MNetworkEnable
				^MNetworkUserGroup "CBodyComponent"
				^MNetworkAlias "CBodyComponent"
				^MNetworkTypeAlias "CBodyComponent"
				^MNetworkPriority "48"
			CNetworkTransmitComponent m_NetworkTransmitComponent(offset 0x40, size 0x1a0, align 0x0)
			uint8_t[288] unaccounted(offset 0x1e0)
			GameTick_t m_nLastThinkTick(offset 0x300, size 0x4, align 0x0)
			uint8_t[4] unaccounted(offset 0x304)
			CGameSceneNode* m_pGameSceneNode(offset 0x308, size 0x8, align 0x8)
			CRenderComponent* m_pRenderComponent(offset 0x310, size 0x8, align 0x8)
			CCollisionProperty* m_pCollision(offset 0x318, size 0x8, align 0x8)
			int32 m_iMaxHealth(offset 0x320, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			int32 m_iHealth(offset 0x324, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkSerializer "ClampHealth"
				^MNetworkUserGroup "Player"
				^MNetworkPriority "32"
			uint8 m_lifeState(offset 0x328, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkUserGroup "Player"
				^MNetworkPriority "32"
			DamageOptions_t m_takedamage(offset 0x329, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bTakesDamage(offset 0x32a, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[5] unaccounted(offset 0x32b)
			TakeDamageFlags_t m_nTakeDamageFlags(offset 0x330, size 0x8, align 0x8)
				^MNetworkEnable
			EntityPlatformTypes_t m_nPlatformType(offset 0x338, size 0x1, align 0x1)
				^MNetworkEnable
			uint8 m_ubInterpolationFrame(offset 0x339, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkChangeCallback "OnInterpolationFrameChanged"
			uint8_t[2] unaccounted(offset 0x33a)
			CHandle< C_BaseEntity > m_hSceneObjectController(offset 0x33c, size 0x4, align 0x4)
			int32 m_nNoInterpolationTick(offset 0x340, size 0x4, align 0x4)
			int32 m_nVisibilityNoInterpolationTick(offset 0x344, size 0x4, align 0x4)
			float32 m_flProxyRandomValue(offset 0x348, size 0x4, align 0x4)
			int32 m_iEFlags(offset 0x34c, size 0x4, align 0x4)
			uint8 m_nWaterType(offset 0x350, size 0x1, align 0x1)
			bool m_bInterpolateEvenWithNoModel(offset 0x351, size 0x1, align 0x1)
			bool m_bPredictionEligible(offset 0x352, size 0x1, align 0x1)
			bool m_bApplyLayerMatchIDToModel(offset 0x353, size 0x1, align 0x1)
			CUtlStringToken m_tokLayerMatchID(offset 0x354, size 0x4, align 0x4)
			CUtlStringToken m_nSubclassID(offset 0x358, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkChangeCallback "OnSubclassIDChanged"
			uint8_t[12] unaccounted(offset 0x35c)
			int32 m_nSimulationTick(offset 0x368, size 0x4, align 0x4)
			int32 m_iCurrentThinkContext(offset 0x36c, size 0x4, align 0x4)
			CUtlVector< thinkfunc_t > m_aThinkFunctions(offset 0x370, size 0x18, align 0x8)
			bool m_bDisabledContextThinks(offset 0x388, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x389)
			float32 m_flAnimTime(offset 0x38c, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "0"
				^MNetworkSerializer "animTimeSerializer"
			float32 m_flSimulationTime(offset 0x390, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "1"
				^MNetworkSerializer "simulationTimeSerializer"
				^MNetworkChangeCallback "OnSimulationTimeChanged"
			uint8 m_nSceneObjectOverrideFlags(offset 0x394, size 0x1, align 0x1)
			bool m_bHasSuccessfullyInterpolated(offset 0x395, size 0x1, align 0x1)
			bool m_bHasAddedVarsToInterpolation(offset 0x396, size 0x1, align 0x1)
			bool m_bRenderEvenWhenNotSuccessfullyInterpolated(offset 0x397, size 0x1, align 0x1)
			int32[2] m_nInterpolationLatchDirtyFlags(offset 0x398, size 0x8, align 0x4)
			uint16[11] m_ListEntry(offset 0x3a0, size 0x16, align 0x2)
			uint8_t[2] unaccounted(offset 0x3b6)
			GameTime_t m_flCreateTime(offset 0x3b8, size 0x4, align 0x0)
				^MNetworkEnable
			float32 m_flSpeed(offset 0x3bc, size 0x4, align 0x4)
				^MNetworkEnable
			uint16 m_EntClientFlags(offset 0x3c0, size 0x2, align 0x2)
			bool m_bClientSideRagdoll(offset 0x3c2, size 0x1, align 0x1)
				^MNetworkEnable
			uint8 m_iTeamNum(offset 0x3c3, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkChangeCallback "OnNetVarTeamNumChanged"
			uint32 m_spawnflags(offset 0x3c4, size 0x4, align 0x4)
				^MNetworkEnable
			GameTick_t m_nNextThinkTick(offset 0x3c8, size 0x4, align 0x0)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			uint32 m_fFlags(offset 0x3cc, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
				^MNetworkUserGroup "Player"
				^MNetworkChangeCallback "OnFlagsChanged"
			Vector m_vecAbsVelocity(offset 0x3d0, size 0xc, align 0x4)
			uint8_t[4] unaccounted(offset 0x3dc)
			CNetworkVelocityVector m_vecVelocity(offset 0x3e0, size 0x28, align 0x0)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
				^MNetworkChangeCallback "OnLocalVelocityChanged"
				^MNetworkPriority "32"
			uint8_t[8] unaccounted(offset 0x408)
			CHandle< C_BaseEntity > m_hEffectEntity(offset 0x410, size 0x4, align 0x4)
				^MNetworkEnable
			CHandle< C_BaseEntity > m_hOwnerEntity(offset 0x414, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			MoveCollide_t m_MoveCollide(offset 0x418, size 0x1, align 0x1)
				^MNetworkEnable
			MoveType_t m_MoveType(offset 0x419, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkChangeCallback "OnMoveTypeChanged"
			MoveType_t m_nActualMoveType(offset 0x41a, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0x41b)
			float32 m_flWaterLevel(offset 0x41c, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "Water"
				^MNetworkChangeCallback "OnWaterLevelChangeNetworked"
				^MNetworkBitCount "8"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "1"
				^MNetworkEncodeFlags "8"
			uint32 m_fEffects(offset 0x420, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkChangeCallback "OnEffectsChanged"
			CHandle< C_BaseEntity > m_hGroundEntity(offset 0x424, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
				^MNetworkUserGroup "Player"
			int32 m_nGroundBodyIndex(offset 0x428, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
				^MNetworkUserGroup "Player"
			float32 m_flFriction(offset 0x42c, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "8"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "4"
				^MNetworkEncodeFlags "1"
				^MNetworkUserGroup "LocalPlayerExclusive"
			float32 m_flElasticity(offset 0x430, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkEncoder "coord"
			float32 m_flGravityScale(offset 0x434, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			float32 m_flTimeScale(offset 0x438, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			bool m_bAnimatedEveryTick(offset 0x43c, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkChangeCallback "OnInterpolationAmountChanged"
			uint8_t[3] unaccounted(offset 0x43d)
			GameTime_t m_flNavIgnoreUntilTime(offset 0x440, size 0x4, align 0x0)
				^MNetworkEnable
				^MNetworkChangeCallback "OnNavIgnoreChanged"
			uint16 m_hThink(offset 0x444, size 0x2, align 0x2)
			uint8_t[10] unaccounted(offset 0x446)
			uint8 m_fBBoxVisFlags(offset 0x450, size 0x1, align 0x1)
			bool m_bPredictable(offset 0x451, size 0x1, align 0x1)
			bool m_bRenderWithViewModels(offset 0x452, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0x453)
			CSplitScreenSlot m_nSplitUserPlayerPredictionSlot(offset 0x454, size 0x4, align 0x4)
			int32 m_nFirstPredictableCommand(offset 0x458, size 0x4, align 0x4)
			int32 m_nLastPredictableCommand(offset 0x45c, size 0x4, align 0x4)
			CHandle< C_BaseEntity > m_hOldMoveParent(offset 0x460, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x464)
			CParticleProperty m_Particles(offset 0x468, size 0x28, align 0x0)
			CUtlVector< float32 > m_vecPredictedScriptFloats(offset 0x490, size 0x18, align 0x8)
			CUtlVector< int32 > m_vecPredictedScriptFloatIDs(offset 0x4a8, size 0x18, align 0x8)
			uint8_t[24] unaccounted(offset 0x4c0)
			int32 m_nNextScriptVarRecordID(offset 0x4d8, size 0x4, align 0x4)
			uint8_t[12] unaccounted(offset 0x4dc)
			QAngle m_vecAngVelocity(offset 0x4e8, size 0xc, align 0x4)
			int32 m_DataChangeEventRef(offset 0x4f4, size 0x4, align 0x4)
			CUtlVector< CEntityHandle > m_dependencies(offset 0x4f8, size 0x18, align 0x8)
			int32 m_nCreationTick(offset 0x510, size 0x4, align 0x4)
			uint8_t[9] unaccounted(offset 0x514)
			bool m_bAnimTimeChanged(offset 0x51d, size 0x1, align 0x1)
			bool m_bSimulationTimeChanged(offset 0x51e, size 0x1, align 0x1)
			uint8_t[9] unaccounted(offset 0x51f)
			CUtlString m_sUniqueHammerID(offset 0x528, size 0x8, align 0x8)
			BloodType m_nBloodType(offset 0x530, size 0x4, align 0x4)
				^MNetworkEnable
			uint8_t[4] unaccounted(offset 0x534)
		
	
	-----static members of class CBasePlayerController-----
		static bool sm_bRunningPredictedClientStringCommands(client.dll + 0x4cfa028)
	
	-----members of class CBasePlayerController-----
		uint8_t[8] unaccounted(offset 0x538)
		int32 m_nFinalPredictedTick(offset 0x540, size 0x4, align 0x4)
		uint8_t[4] unaccounted(offset 0x544)
		C_CommandContext m_CommandContext(offset 0x548, size 0xa0, align 0x0)
		uint64 m_nInButtonsWhichAreToggles(offset 0x5e8, size 0x8, align 0x8)
		uint32 m_nTickBase(offset 0x5f0, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "1"
			^MNetworkUserGroup "LocalPlayerExclusive"
		CHandle< C_BasePlayerPawn > m_hPawn(offset 0x5f4, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkChangeCallback "OnPawnChanged"
		bool m_bKnownTeamMismatch(offset 0x5f8, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[3] unaccounted(offset 0x5f9)
		CHandle< C_BasePlayerPawn > m_hPredictedPawn(offset 0x5fc, size 0x4, align 0x4)
		CSplitScreenSlot m_nSplitScreenSlot(offset 0x600, size 0x4, align 0x4)
		CHandle< CBasePlayerController > m_hSplitOwner(offset 0x604, size 0x4, align 0x4)
		CUtlVector< CHandle< CBasePlayerController > > m_hSplitScreenPlayers(offset 0x608, size 0x18, align 0x8)
		bool m_bIsHLTV(offset 0x620, size 0x1, align 0x1)
		uint8_t[3] unaccounted(offset 0x621)
		PlayerConnectedState m_iConnected(offset 0x624, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkChangeCallback "OnConnectionStateChanged"
		char[128] m_iszPlayerName(offset 0x628, size 0x80, align 0x1)
			^MNetworkEnable
			^MNetworkChangeCallback "OnPlayerControllerNameChanged"
		uint8_t[8] unaccounted(offset 0x6a8)
		uint64 m_steamID(offset 0x6b0, size 0x8, align 0x8)
			^MNetworkEnable
			^MNetworkEncoder "fixed64"
			^MNetworkChangeCallback "OnSteamIDChanged"
		bool m_bIsLocalPlayerController(offset 0x6b8, size 0x1, align 0x1)
		uint8_t[3] unaccounted(offset 0x6b9)
		uint32 m_iDesiredFOV(offset 0x6bc, size 0x4, align 0x4)
			^MNetworkEnable
		uint8_t[24] unaccounted(offset 0x6c0)
	

-----members of class C_DOTAPlayerController-----
	uint8_t[160] unaccounted(offset 0x6d8)
	int32 m_iMinimapMove(offset 0x778, size 0x4, align 0x4)
	uint8_t[4] unaccounted(offset 0x77c)
	KeyValues* m_pClickBehaviorKeys(offset 0x780, size 0x8, align 0x8)
	GameTime_t m_flCenterTime(offset 0x788, size 0x4, align 0x0)
	int32 m_iConfirmationIndex(offset 0x78c, size 0x4, align 0x4)
	bool m_bCenterOnHero(offset 0x790, size 0x1, align 0x1)
	bool m_bHeroAssigned(offset 0x791, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x792)
	int32 m_nKeyBindHeroID(offset 0x794, size 0x4, align 0x4)
	bool m_bUsingCameraMan(offset 0x798, size 0x1, align 0x1)
		^MNetworkEnable
	bool m_bUsingAssistedCameraOperator(offset 0x799, size 0x1, align 0x1)
		^MNetworkEnable
	uint8_t[2] unaccounted(offset 0x79a)
	int32 m_nPlayerAssistFlags(offset 0x79c, size 0x4, align 0x4)
		^MNetworkEnable
	Vector m_vLatestEvent(offset 0x7a0, size 0xc, align 0x4)
	uint8_t[36] unaccounted(offset 0x7ac)
	CHandle< C_DOTABaseAbility > m_hFreeDrawAbility(offset 0x7d0, size 0x4, align 0x4)
	Vector m_vLastFreeDrawPosition(offset 0x7d4, size 0xc, align 0x4)
	PlayerID_t m_nPlayerID(offset 0x7e0, size 0x4, align 0x0)
		^MNetworkEnable
		^MNetworkChangeCallback "OnPlayerIDChanged"
	CHandle< C_BaseEntity > m_hAssignedHero(offset 0x7e4, size 0x4, align 0x4)
		^MNetworkEnable
	CHandle< C_BaseEntity > m_hLastAssignedHero(offset 0x7e8, size 0x4, align 0x4)
	CHandle< C_BaseEntity > m_hKillCamUnit(offset 0x7ec, size 0x4, align 0x4)
		^MNetworkEnable
	CHandle< C_BaseEntity > m_hPreviousKillCamUnit(offset 0x7f0, size 0x4, align 0x4)
	float32 m_flKillCamUnitReceivedTime(offset 0x7f4, size 0x4, align 0x4)
	uint8_t[8] unaccounted(offset 0x7f8)
	int32 m_nRareLineClickCount(offset 0x800, size 0x4, align 0x4)
	int32 m_nRareLinesPlayed(offset 0x804, size 0x4, align 0x4)
	int32 m_nRareLineGroup(offset 0x808, size 0x4, align 0x4)
	float32 m_flLastRareLinePlayTime(offset 0x80c, size 0x4, align 0x4)
	float32 m_flLastUnitOrdersSendTime(offset 0x810, size 0x4, align 0x4)
	bool m_bTeleportRequiresHalt(offset 0x814, size 0x1, align 0x1)
	bool m_bChannelRequiresHalt(offset 0x815, size 0x1, align 0x1)
	bool m_bAutoPurchaseItems(offset 0x816, size 0x1, align 0x1)
	bool m_bDisableHUDErrorMessages(offset 0x817, size 0x1, align 0x1)
	int32 m_iMouseDragStartX(offset 0x818, size 0x4, align 0x4)
	int32 m_iMouseDragStartY(offset 0x81c, size 0x4, align 0x4)
	int32 m_nWeatherType(offset 0x820, size 0x4, align 0x4)
	bool m_bDynamicWeatherSystemActive(offset 0x824, size 0x1, align 0x1)
	bool m_bDynamicSoundHandled(offset 0x825, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x826)
	GameTime_t m_flDynamicWeatherNextSwitchTime(offset 0x828, size 0x4, align 0x0)
	GameTime_t m_flDynamicWeatherScaleFinishedTime(offset 0x82c, size 0x4, align 0x0)
	float32 m_flDynamicWeatherIntensity(offset 0x830, size 0x4, align 0x4)
	ParticleIndex_t m_nXPRangeFXIndex(offset 0x834, size 0x4, align 0x0)
	ParticleIndex_t m_nVisionRangeFXIndex(offset 0x838, size 0x4, align 0x0)
	uint8_t[4] unaccounted(offset 0x83c)
	CHandle< C_DOTABaseAbility > m_hRangeHintAbility(offset 0x840, size 0x4, align 0x4)
	ParticleIndex_t m_nRangeHintFXIndex(offset 0x844, size 0x4, align 0x0)
	float32 m_flRangeHintFXLastRadius(offset 0x848, size 0x4, align 0x4)
	int32 m_nSelectedControlGroup(offset 0x84c, size 0x4, align 0x4)
	int32 m_nCachedCoachedTeam(offset 0x850, size 0x4, align 0x4)
		^MNetworkEnable
	CHandle< C_DOTABaseAbility > m_hActiveAbility(offset 0x854, size 0x4, align 0x4)
	CUtlVector< CUnitOrders > m_unitorders(offset 0x858, size 0x18, align 0x8)
	int32 m_nOutgoingOrderSequenceNumber(offset 0x870, size 0x4, align 0x4)
	int32 m_nServerOrderSequenceNumber(offset 0x874, size 0x4, align 0x4)
		^MNetworkEnable
	int32 m_nLastSentOutgoingOrderSequenceNumber(offset 0x878, size 0x4, align 0x4)
	uint8_t[4] unaccounted(offset 0x87c)
	CUtlVector< CEntityIndex > m_nSelectedUnits(offset 0x880, size 0x18, align 0x8)
	CUtlVector< ParticleIndex_t > m_nWaypoints(offset 0x898, size 0x18, align 0x8)
	int32 m_iActions(offset 0x8b0, size 0x4, align 0x4)
	CHandle< C_DOTA_BaseNPC > m_hQueryUnit(offset 0x8b4, size 0x4, align 0x4)
	bool m_bInQuery(offset 0x8b8, size 0x1, align 0x1)
	bool m_bSelectionChangedInDataUpdate(offset 0x8b9, size 0x1, align 0x1)
	uint8_t[102] unaccounted(offset 0x8ba)
	GameTime_t m_flQueryInhibitingActionTime(offset 0x920, size 0x4, align 0x0)
	float32 m_flQueryInhibitDuration(offset 0x924, size 0x4, align 0x4)
	CUtlVector< CHandle< C_BaseEntity > > m_RingedEntities(offset 0x928, size 0x18, align 0x8)
	CUtlVector< CHandle< C_BaseEntity > > m_ActiveRingOwners(offset 0x940, size 0x18, align 0x8)
	bool m_bOverridingQuery(offset 0x958, size 0x1, align 0x1)
	uint8_t[7] unaccounted(offset 0x959)
	float32 m_flLastAutoRepeatTime(offset 0x960, size 0x4, align 0x4)
	float32 m_flConsumeDoubleclickTime(offset 0x964, size 0x4, align 0x4)
	CUtlString m_LightInfoWeatherEffect(offset 0x968, size 0x8, align 0x8)
	bool m_bPreviousWasLightInfoWeather(offset 0x970, size 0x1, align 0x1)
	uint8_t[7] unaccounted(offset 0x971)
	CUtlString m_MapDefaultWeatherEffect(offset 0x978, size 0x8, align 0x8)
	bool m_bMapUsesDynamicWeather(offset 0x980, size 0x1, align 0x1)
	uint8_t[39] unaccounted(offset 0x981)
	int32 m_nCastRangeEffectCreationRadius(offset 0x9a8, size 0x4, align 0x4)
	uint8_t[28] unaccounted(offset 0x9ac)
	CUtlVector< ParticleIndex_t > m_vecSuggestedWardLocationEffects(offset 0x9c8, size 0x18, align 0x8)
	C_DOTA_BaseNPC* m_pSmartCastNPC(offset 0x9e0, size 0x8, align 0x8)
	ParticleIndex_t m_nTeamSprayParticleIndex(offset 0x9e8, size 0x4, align 0x0)
	bool m_bIsNextCastOrderFromMouseClick(offset 0x9ec, size 0x1, align 0x1)
	uint8_t[51] unaccounted(offset 0x9ed)
	int32[2] m_iCursor(offset 0xa20, size 0x8, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
		^MNetworkPriority "32"
	int32 m_iSpectatorClickBehavior(offset 0xa28, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	float32 m_flAspectRatio(offset 0xa2c, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	CHandle< C_BaseEntity > m_hSpectatorQueryUnit(offset 0xa30, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	int32 m_iStatsPanel(offset 0xa34, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	int32 m_iShopPanel(offset 0xa38, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	ShopItemViewMode_t m_iShopViewMode(offset 0xa3c, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	int32 m_iStatsDropdownCategory(offset 0xa40, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	int32 m_iStatsDropdownSort(offset 0xa44, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	char[64] m_szShopString(offset 0xa48, size 0x40, align 0x1)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	C_UtlVectorEmbeddedNetworkVar< ClientQuickBuyItemState > m_vecClientQuickBuyState(offset 0xa88, size 0x50, align 0x8)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	bool m_bInShowCaseMode(offset 0xad8, size 0x1, align 0x1)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	uint8_t[3] unaccounted(offset 0xad9)
	float32 m_flCameraZoomAmount(offset 0xadc, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	int32 m_iHighPriorityScore(offset 0xae0, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	AbilityID_t[9] m_quickBuyItems(offset 0xae4, size 0x24, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	bool[9] m_quickBuyIsPurchasable(offset 0xb08, size 0x9, align 0x1)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	uint8_t[3] unaccounted(offset 0xb11)
	float32 m_flFrameTime(offset 0xb14, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	float32 m_flFrameTimeStdDev(offset 0xb18, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	float32 m_flUnfilteredFrameTime(offset 0xb1c, size 0x4, align 0x4)
		^MNetworkEnable
		^MNetworkUserGroup "DOTACommentatorTable"
	CUtlVector< NeutralCampStackPullAlarm_t > m_NeutralCampAlarms(offset 0xb20, size 0x18, align 0x8)
	int32[2] m_iPrevCursor(offset 0xb38, size 0x8, align 0x4)
	uint8_t[160] unaccounted(offset 0xb40)
	int32 m_iPositionHistoryTail(offset 0xbe0, size 0x4, align 0x4)
	int32 m_iMusicStatus(offset 0xbe4, size 0x4, align 0x4)
		^MNetworkEnable
	int32 m_iPreviousMusicStatus(offset 0xbe8, size 0x4, align 0x4)
	bool m_bRequestedInventory(offset 0xbec, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0xbed)
	float32[3] m_flMusicOperatorVals(offset 0xbf0, size 0xc, align 0x4)
		^MNetworkEnable
	int32[4] m_iMusicOperatorVals(offset 0xbfc, size 0x10, align 0x4)
		^MNetworkEnable
	uint8_t[4] unaccounted(offset 0xc0c)
	CUtlVector< sControlGroupElem >[10] m_ControlGroups(offset 0xc10, size 0xf0, align 0x8)
	KeyValues* m_pkvControlGroupKV(offset 0xd00, size 0x8, align 0x8)
	uint8_t[88] unaccounted(offset 0xd08)
	float32 m_flAltHeldStartTime(offset 0xd60, size 0x4, align 0x4)
	uint8_t[100] unaccounted(offset 0xd64)

