|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CPointValueRemapper (size: 0x6b0 bytes, project "server", binding @ server.dll + 0x3a712f0, scope "server.dll") extends CBaseEntity
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
^MNetworkVarNames "m_bDisabled bool"
^MNetworkVarNames "m_bUpdateOnClient bool"
^MNetworkVarNames "m_nInputType ValueRemapperInputType_t"
^MNetworkVarNames "m_hRemapLineStart CHandle< CBaseEntity>"
^MNetworkVarNames "m_hRemapLineEnd CHandle< CBaseEntity>"
^MNetworkVarNames "m_flMaximumChangePerSecond float"
^MNetworkVarNames "m_flDisengageDistance float"
^MNetworkVarNames "m_flEngageDistance float"
^MNetworkVarNames "m_bRequiresUseKey bool"
^MNetworkVarNames "m_nOutputType ValueRemapperOutputType_t"
^MNetworkVarNames "m_hOutputEntities CHandle< CBaseEntity >"
^MNetworkVarNames "m_nHapticsType ValueRemapperHapticsType_t"
^MNetworkVarNames "m_nMomentumType ValueRemapperMomentumType_t"
^MNetworkVarNames "m_flMomentumModifier float"
^MNetworkVarNames "m_flSnapValue float"
^MNetworkVarNames "m_nRatchetType ValueRemapperRatchetType_t"
^MNetworkVarNames "m_flInputOffset float"

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseEntity (size: 0x4b8 bytes, project "server", binding @ server.dll + 0x38c6a40, scope "server.dll") extends CEntityInstance
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
	| SCHEMA_CF1_CONSTRUCT_ALLOWED
	| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
	^MNetworkExcludeByName "m_bClientSideRagdoll"
	^MNetworkExcludeByName "m_iMaxHealth"
	^MNetworkExcludeByUserGroup "Water"
	^MNetworkExcludeByUserGroup "Player"
	^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
	^MNetworkExcludeByName "m_spawnflags"
	^MNetworkExcludeByName "m_bTakesDamage"
	^MNetworkExcludeByName "m_nTakeDamageFlags"
	^MNetworkExcludeByName "m_flSpeed"
	^MNetworkVarNames "m_CBodyComponent CBodyComponent::Storage_t"
	^MNetworkVarNames "m_iHealth int32"
	^MNetworkVarNames "m_iMaxHealth int32"
	^MNetworkVarNames "m_lifeState uint8"
	^MNetworkVarNames "m_takedamage DamageOptions_t"
	^MNetworkVarNames "m_bTakesDamage bool"
	^MNetworkVarNames "m_nTakeDamageFlags TakeDamageFlags_t"
	^MNetworkVarNames "m_nPlatformType EntityPlatformTypes_t"
	^MNetworkVarNames "m_MoveCollide MoveCollide_t"
	^MNetworkVarNames "m_MoveType MoveType_t"
	^MNetworkVarNames "m_nSubclassID EntitySubclassID_t"
	^MNetworkVarNames "m_flAnimTime float32"
	^MNetworkVarNames "m_flSimulationTime float32"
	^MNetworkVarNames "m_flCreateTime GameTime_t"
	^MNetworkVarNames "m_bClientSideRagdoll bool"
	^MNetworkVarNames "m_ubInterpolationFrame uint8"
	^MNetworkVarNames "m_iTeamNum uint8"
	^MNetworkVarNames "m_flSpeed float"
	^MNetworkVarNames "m_spawnflags uint32"
	^MNetworkVarNames "m_nNextThinkTick GameTick_t"
	^MNetworkVarNames "m_fFlags uint32"
	^MNetworkVarNames "m_vecVelocity CNetworkVelocityVector"
	^MNetworkVarNames "m_hEffectEntity CHandle< CBaseEntity>"
	^MNetworkVarNames "m_hOwnerEntity CHandle< CBaseEntity>"
	^MNetworkVarNames "m_fEffects uint32"
	^MNetworkVarNames "m_hGroundEntity CHandle< CBaseEntity>"
	^MNetworkVarNames "m_nGroundBodyIndex int"
	^MNetworkVarNames "m_flFriction float32"
	^MNetworkVarNames "m_flElasticity float32"
	^MNetworkVarNames "m_flGravityScale float32"
	^MNetworkVarNames "m_flTimeScale float32"
	^MNetworkVarNames "m_flWaterLevel float"
	^MNetworkVarNames "m_bAnimatedEveryTick bool"
	^MNetworkVarNames "m_flNavIgnoreUntilTime GameTime_t"
	^MNetworkVarNames "m_nBloodType BloodType"
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CEntityInstance (size: 0x38 bytes, project "entity2", binding @ server.dll + 0x3afd630, scope "server.dll")
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
		| SCHEMA_CF1_CONSTRUCT_DISALLOWED
		| SCHEMA_CLASS_UNIDENTIFIED17
		^MNetworkVarNames "m_pEntity CEntityIdentity *"
		^MNetworkVarNames "m_CScriptComponent CScriptComponent::Storage_t"
		
		-----members of class CEntityInstance-----
			uint8_t[8] unaccounted(offset 0x0)
			CUtlSymbolLarge m_iszPrivateVScripts(offset 0x8, size 0x8, align 0x8)
				^MNetworkDisable
			CEntityIdentity* m_pEntity(offset 0x10, size 0x8, align 0x8)
				^MNetworkEnable
				^MNetworkPriority "56"
			uint8_t[16] unaccounted(offset 0x18)
			CScriptComponent* m_CScriptComponent(offset 0x28, size 0x8, align 0x8)
				^MNetworkEnable
				^MNetworkDisable
			bool m_bVisibleinPVS(offset 0x30, size 0x1, align 0x1)
			uint8_t[7] unaccounted(offset 0x31)
		
	
	-----static members of class CBaseEntity-----
		static Relationship_t** sm_DefaultRelationship(server.dll + 0x3e50768)
		static bool sm_bAccurateTriggerBboxChecks(server.dll + 0x388b1d0)
		static bool sm_bDisableTouchFuncs(server.dll + 0x3e50ea4)
		static bool m_bAllowPrecache(server.dll + 0x3c6cf74)
		static bool s_bAbsQueriesValid(server.dll + 0x3a38c68)
		static bool s_bPreventingSetAnimRunAnimEvents(server.dll + 0x3e51024)
		static int32 m_nPredictionRandomSeed(server.dll + 0x388bf00)
		static int32 m_nPredictionRandomSeedServer(server.dll + 0x388bf04)
		static CBasePlayerController* m_pPredictionPlayerController(server.dll + 0x3c6d4e8)
		static bool sm_bDatadescValidating(server.dll + 0x3c6d4f0)
	
	-----members of class CBaseEntity-----
		CBodyComponent* m_CBodyComponent(offset 0x38, size 0x8, align 0x8)
			^MNetworkEnable
			^MNetworkUserGroup "CBodyComponent"
			^MNetworkAlias "CBodyComponent"
			^MNetworkTypeAlias "CBodyComponent"
			^MNetworkPriority "48"
		CNetworkTransmitComponent m_NetworkTransmitComponent(offset 0x40, size 0x1a0, align 0x0)
		uint8_t[64] unaccounted(offset 0x1e0)
		CUtlVector< thinkfunc_t > m_aThinkFunctions(offset 0x220, size 0x18, align 0x8)
		int32 m_iCurrentThinkContext(offset 0x238, size 0x4, align 0x4)
		GameTick_t m_nLastThinkTick(offset 0x23c, size 0x4, align 0x0)
		bool m_bDisabledContextThinks(offset 0x240, size 0x1, align 0x1)
		uint8_t[15] unaccounted(offset 0x241)
		CBitVec< 64 > m_isSteadyState(offset 0x250, size 0x8, align 0x4)
		float32 m_lastNetworkChange(offset 0x258, size 0x4, align 0x4)
		uint8_t[12] unaccounted(offset 0x25c)
		CUtlVector< ResponseContext_t > m_ResponseContexts(offset 0x268, size 0x18, align 0x8)
		CUtlSymbolLarge m_iszResponseContext(offset 0x280, size 0x8, align 0x8)
		uint8_t[32] unaccounted(offset 0x288)
		int32 m_iHealth(offset 0x2a8, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkSerializer "ClampHealth"
			^MNetworkUserGroup "Player"
			^MNetworkPriority "32"
		int32 m_iMaxHealth(offset 0x2ac, size 0x4, align 0x4)
			^MNetworkEnable
		uint8 m_lifeState(offset 0x2b0, size 0x1, align 0x1)
			^MNetworkEnable
			^MNetworkUserGroup "Player"
			^MNetworkPriority "32"
		uint8_t[3] unaccounted(offset 0x2b1)
		float32 m_flDamageAccumulator(offset 0x2b4, size 0x4, align 0x4)
		DamageOptions_t m_takedamage(offset 0x2b8, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bTakesDamage(offset 0x2b9, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[6] unaccounted(offset 0x2ba)
		TakeDamageFlags_t m_nTakeDamageFlags(offset 0x2c0, size 0x8, align 0x8)
			^MNetworkEnable
		EntityPlatformTypes_t m_nPlatformType(offset 0x2c8, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[1] unaccounted(offset 0x2c9)
		MoveCollide_t m_MoveCollide(offset 0x2ca, size 0x1, align 0x1)
			^MNetworkEnable
		MoveType_t m_MoveType(offset 0x2cb, size 0x1, align 0x1)
			^MNetworkEnable
		MoveType_t m_nActualMoveType(offset 0x2cc, size 0x1, align 0x1)
		uint8 m_nWaterTouch(offset 0x2cd, size 0x1, align 0x1)
		uint8 m_nSlimeTouch(offset 0x2ce, size 0x1, align 0x1)
		bool m_bRestoreInHierarchy(offset 0x2cf, size 0x1, align 0x1)
		CUtlSymbolLarge m_target(offset 0x2d0, size 0x8, align 0x8)
		CHandle< CBaseFilter > m_hDamageFilter(offset 0x2d8, size 0x4, align 0x4)
		uint8_t[4] unaccounted(offset 0x2dc)
		CUtlSymbolLarge m_iszDamageFilterName(offset 0x2e0, size 0x8, align 0x8)
		float32 m_flMoveDoneTime(offset 0x2e8, size 0x4, align 0x4)
		CUtlStringToken m_nSubclassID(offset 0x2ec, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkSendProxyRecipientsFilter "func: nullptr"
		uint8_t[8] unaccounted(offset 0x2f0)
		float32 m_flAnimTime(offset 0x2f8, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "0"
			^MNetworkSerializer "animTimeSerializer"
			^MNetworkSendProxyRecipientsFilter "func: nullptr"
		float32 m_flSimulationTime(offset 0x2fc, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "1"
			^MNetworkSerializer "simulationTimeSerializer"
			^MNetworkSendProxyRecipientsFilter "func: nullptr"
		GameTime_t m_flCreateTime(offset 0x300, size 0x4, align 0x0)
			^MNetworkEnable
		bool m_bClientSideRagdoll(offset 0x304, size 0x1, align 0x1)
			^MNetworkEnable
		uint8 m_ubInterpolationFrame(offset 0x305, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[2] unaccounted(offset 0x306)
		Vector m_vPrevVPhysicsUpdatePos(offset 0x308, size 0xc, align 0x4)
		uint8 m_iTeamNum(offset 0x314, size 0x1, align 0x1)
			^MNetworkEnable
		uint8_t[3] unaccounted(offset 0x315)
		CUtlSymbolLarge m_iGlobalname(offset 0x318, size 0x8, align 0x8)
		int32 m_iSentToClients(offset 0x320, size 0x4, align 0x4)
		float32 m_flSpeed(offset 0x324, size 0x4, align 0x4)
			^MNetworkEnable
		CUtlString m_sUniqueHammerID(offset 0x328, size 0x8, align 0x8)
		uint32 m_spawnflags(offset 0x330, size 0x4, align 0x4)
			^MNetworkEnable
		GameTick_t m_nNextThinkTick(offset 0x334, size 0x4, align 0x0)
			^MNetworkEnable
			^MNetworkUserGroup "LocalPlayerExclusive"
		int32 m_nSimulationTick(offset 0x338, size 0x4, align 0x4)
		uint8_t[4] unaccounted(offset 0x33c)
		CEntityIOOutput m_OnKilled(offset 0x340, size 0x28, align 0x0)
		uint32 m_fFlags(offset 0x368, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
			^MNetworkUserGroup "Player"
		Vector m_vecAbsVelocity(offset 0x36c, size 0xc, align 0x4)
		CNetworkVelocityVector m_vecVelocity(offset 0x378, size 0x28, align 0x0)
			^MNetworkEnable
			^MNetworkUserGroup "LocalPlayerExclusive"
			^MNetworkPriority "32"
		uint8_t[8] unaccounted(offset 0x3a0)
		int32 m_nPushEnumCount(offset 0x3a8, size 0x4, align 0x4)
		uint8_t[4] unaccounted(offset 0x3ac)
		CCollisionProperty* m_pCollision(offset 0x3b0, size 0x8, align 0x8)
		CHandle< CBaseEntity > m_hEffectEntity(offset 0x3b8, size 0x4, align 0x4)
			^MNetworkEnable
		CHandle< CBaseEntity > m_hOwnerEntity(offset 0x3bc, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
		uint32 m_fEffects(offset 0x3c0, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkChangeCallback "OnEffectsChanged"
		CHandle< CBaseEntity > m_hGroundEntity(offset 0x3c4, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
			^MNetworkUserGroup "Player"
		int32 m_nGroundBodyIndex(offset 0x3c8, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkPriority "32"
			^MNetworkUserGroup "Player"
		float32 m_flFriction(offset 0x3cc, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkBitCount "8"
			^MNetworkMinValue "0"
			^MNetworkMaxValue "4"
			^MNetworkEncodeFlags "1"
			^MNetworkUserGroup "LocalPlayerExclusive"
		float32 m_flElasticity(offset 0x3d0, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkEncoder "coord"
		float32 m_flGravityScale(offset 0x3d4, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkUserGroup "LocalPlayerExclusive"
		float32 m_flTimeScale(offset 0x3d8, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkUserGroup "LocalPlayerExclusive"
		float32 m_flWaterLevel(offset 0x3dc, size 0x4, align 0x4)
			^MNetworkEnable
			^MNetworkUserGroup "Water"
			^MNetworkBitCount "8"
			^MNetworkMinValue "0"
			^MNetworkMaxValue "1"
			^MNetworkEncodeFlags "8"
		bool m_bAnimatedEveryTick(offset 0x3e0, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bDisableLowViolence(offset 0x3e1, size 0x1, align 0x1)
		uint8 m_nWaterType(offset 0x3e2, size 0x1, align 0x1)
		uint8_t[1] unaccounted(offset 0x3e3)
		int32 m_iEFlags(offset 0x3e4, size 0x4, align 0x4)
		CEntityIOOutput m_OnUser1(offset 0x3e8, size 0x28, align 0x0)
		CEntityIOOutput m_OnUser2(offset 0x410, size 0x28, align 0x0)
		CEntityIOOutput m_OnUser3(offset 0x438, size 0x28, align 0x0)
		CEntityIOOutput m_OnUser4(offset 0x460, size 0x28, align 0x0)
		int32 m_iInitialTeamNum(offset 0x488, size 0x4, align 0x4)
		GameTime_t m_flNavIgnoreUntilTime(offset 0x48c, size 0x4, align 0x0)
			^MNetworkEnable
		QAngle m_vecAngVelocity(offset 0x490, size 0xc, align 0x4)
		bool m_bNetworkQuantizeOriginAndAngles(offset 0x49c, size 0x1, align 0x1)
		bool m_bLagCompensate(offset 0x49d, size 0x1, align 0x1)
		uint8_t[2] unaccounted(offset 0x49e)
		float32 m_flOverriddenFriction(offset 0x4a0, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_pBlocker(offset 0x4a4, size 0x4, align 0x4)
		float32 m_flLocalTime(offset 0x4a8, size 0x4, align 0x4)
		float32 m_flVPhysicsUpdateLocalTime(offset 0x4ac, size 0x4, align 0x4)
		BloodType m_nBloodType(offset 0x4b0, size 0x4, align 0x4)
			^MNetworkEnable
		uint8_t[4] unaccounted(offset 0x4b4)
	

-----members of class CPointValueRemapper-----
	bool m_bDisabled(offset 0x4b8, size 0x1, align 0x1)
		^MNetworkEnable
	bool m_bUpdateOnClient(offset 0x4b9, size 0x1, align 0x1)
		^MNetworkEnable
	uint8_t[2] unaccounted(offset 0x4ba)
	ValueRemapperInputType_t m_nInputType(offset 0x4bc, size 0x4, align 0x4)
		^MNetworkEnable
	CUtlSymbolLarge m_iszRemapLineStartName(offset 0x4c0, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszRemapLineEndName(offset 0x4c8, size 0x8, align 0x8)
	CHandle< CBaseEntity > m_hRemapLineStart(offset 0x4d0, size 0x4, align 0x4)
		^MNetworkEnable
	CHandle< CBaseEntity > m_hRemapLineEnd(offset 0x4d4, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flMaximumChangePerSecond(offset 0x4d8, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flDisengageDistance(offset 0x4dc, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flEngageDistance(offset 0x4e0, size 0x4, align 0x4)
		^MNetworkEnable
	bool m_bRequiresUseKey(offset 0x4e4, size 0x1, align 0x1)
		^MNetworkEnable
	uint8_t[3] unaccounted(offset 0x4e5)
	ValueRemapperOutputType_t m_nOutputType(offset 0x4e8, size 0x4, align 0x4)
		^MNetworkEnable
	uint8_t[4] unaccounted(offset 0x4ec)
	CUtlSymbolLarge m_iszOutputEntityName(offset 0x4f0, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszOutputEntity2Name(offset 0x4f8, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszOutputEntity3Name(offset 0x500, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszOutputEntity4Name(offset 0x508, size 0x8, align 0x8)
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_hOutputEntities(offset 0x510, size 0x18, align 0x8)
		^MNetworkEnable
	ValueRemapperHapticsType_t m_nHapticsType(offset 0x528, size 0x4, align 0x4)
		^MNetworkEnable
	ValueRemapperMomentumType_t m_nMomentumType(offset 0x52c, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flMomentumModifier(offset 0x530, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flSnapValue(offset 0x534, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flCurrentMomentum(offset 0x538, size 0x4, align 0x4)
	ValueRemapperRatchetType_t m_nRatchetType(offset 0x53c, size 0x4, align 0x4)
		^MNetworkEnable
	float32 m_flRatchetOffset(offset 0x540, size 0x4, align 0x4)
	float32 m_flInputOffset(offset 0x544, size 0x4, align 0x4)
		^MNetworkEnable
	bool m_bEngaged(offset 0x548, size 0x1, align 0x1)
	bool m_bFirstUpdate(offset 0x549, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x54a)
	float32 m_flPreviousValue(offset 0x54c, size 0x4, align 0x4)
	GameTime_t m_flPreviousUpdateTickTime(offset 0x550, size 0x4, align 0x0)
	Vector m_vecPreviousTestPoint(offset 0x554, size 0xc, align 0x4)
	CHandle< CBasePlayerPawn > m_hUsingPlayer(offset 0x560, size 0x4, align 0x4)
	float32 m_flCustomOutputValue(offset 0x564, size 0x4, align 0x4)
	CUtlSymbolLarge m_iszSoundEngage(offset 0x568, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszSoundDisengage(offset 0x570, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszSoundReachedValueZero(offset 0x578, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszSoundReachedValueOne(offset 0x580, size 0x8, align 0x8)
	CUtlSymbolLarge m_iszSoundMovingLoop(offset 0x588, size 0x8, align 0x8)
	uint8_t[8] unaccounted(offset 0x590)
	CEntityOutputTemplate< float32 > m_Position(offset 0x598, size 0x28, align 0x8)
	CEntityOutputTemplate< float32 > m_PositionDelta(offset 0x5c0, size 0x28, align 0x8)
	CEntityIOOutput m_OnReachedValueZero(offset 0x5e8, size 0x28, align 0x0)
	CEntityIOOutput m_OnReachedValueOne(offset 0x610, size 0x28, align 0x0)
	CEntityIOOutput m_OnReachedValueCustom(offset 0x638, size 0x28, align 0x0)
	CEntityIOOutput m_OnEngage(offset 0x660, size 0x28, align 0x0)
	CEntityIOOutput m_OnDisengage(offset 0x688, size 0x28, align 0x0)

