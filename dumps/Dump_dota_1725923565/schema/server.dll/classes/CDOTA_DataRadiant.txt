|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CDOTA_DataRadiant (size: 0x1408 bytes, project "server", binding @ server.dll + 0x3aabf80, scope "server.dll") extends CDOTA_DataNonSpectator
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CDOTA_DataNonSpectator (size: 0x1408 bytes, project "server", binding @ server.dll + 0x3aabc40, scope "server.dll") extends CBaseEntity
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
	| SCHEMA_CF1_CONSTRUCT_ALLOWED
	| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
	| SCHEMA_CF1_INFO_TAG_MNetworkNoBase
	| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
	^MNetworkIncludeByName "m_iTeamNum"
	^MNetworkVarNames "m_vecDataTeam DataTeamPlayer_t"
	^MNetworkVarNames "m_bWorldTreeState uint64"
	^MNetworkVarNames "m_vecWorldTreeModelReplacements TreeModelReplacement_t"
	^MNetworkVarNames "m_vDesiredWardPlacement Vector2D"
	^MNetworkVarNames "m_nEnemyStartingPosition int"
	^MNetworkVarNames "m_nCaptainInspectedHeroID HeroID_t"
	^MNetworkVarNames "m_flSuggestedWardWeights float"
	^MNetworkVarNames "m_nSuggestedWardIndexes uint8"
	^MNetworkVarNames "m_iSuggestedLanes int"
	^MNetworkVarNames "m_iSuggestedLaneWeights float"
	^MNetworkVarNames "m_bSuggestedLaneRoam bool"
	^MNetworkVarNames "m_bSuggestedLaneJungle bool"
	^MNetworkVarNames "m_vecNeutralItemsTierInfo TierNeutralInfo_t"
	^MNetworkVarNames "m_vecNeutralStashItems EHANDLE"
	^MNetworkVarNames "m_vecNeutralItemsConsumed AbilityID_t"
	^MNetworkVarNames "m_PingConfirmationStates PingConfirmationState_t"
	^MNetworkVarNames "m_vecKnownClearCamps EHANDLE"
	^MNetworkVarNames "m_vPossibleWardPlacement Vector2D"
	^MNetworkVarNames "m_vPossibleWardRadii float"
	^MNetworkVarNames "m_vecTrackedTeleports DOTATeleportInfo_t"
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseEntity (size: 0x4b8 bytes, project "server", binding @ server.dll + 0x38c6a40, scope "server.dll") extends CEntityInstance
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
		| SCHEMA_CF1_CONSTRUCT_ALLOWED
		| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
		^MNetworkExcludeByName "m_bClientSideRagdoll"
		^MNetworkExcludeByName "m_iMaxHealth"
		^MNetworkExcludeByUserGroup "Water"
		^MNetworkExcludeByUserGroup "Player"
		^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
		^MNetworkExcludeByName "m_spawnflags"
		^MNetworkExcludeByName "m_bTakesDamage"
		^MNetworkExcludeByName "m_nTakeDamageFlags"
		^MNetworkExcludeByName "m_flSpeed"
		^MNetworkVarNames "m_CBodyComponent CBodyComponent::Storage_t"
		^MNetworkVarNames "m_iHealth int32"
		^MNetworkVarNames "m_iMaxHealth int32"
		^MNetworkVarNames "m_lifeState uint8"
		^MNetworkVarNames "m_takedamage DamageOptions_t"
		^MNetworkVarNames "m_bTakesDamage bool"
		^MNetworkVarNames "m_nTakeDamageFlags TakeDamageFlags_t"
		^MNetworkVarNames "m_nPlatformType EntityPlatformTypes_t"
		^MNetworkVarNames "m_MoveCollide MoveCollide_t"
		^MNetworkVarNames "m_MoveType MoveType_t"
		^MNetworkVarNames "m_nSubclassID EntitySubclassID_t"
		^MNetworkVarNames "m_flAnimTime float32"
		^MNetworkVarNames "m_flSimulationTime float32"
		^MNetworkVarNames "m_flCreateTime GameTime_t"
		^MNetworkVarNames "m_bClientSideRagdoll bool"
		^MNetworkVarNames "m_ubInterpolationFrame uint8"
		^MNetworkVarNames "m_iTeamNum uint8"
		^MNetworkVarNames "m_flSpeed float"
		^MNetworkVarNames "m_spawnflags uint32"
		^MNetworkVarNames "m_nNextThinkTick GameTick_t"
		^MNetworkVarNames "m_fFlags uint32"
		^MNetworkVarNames "m_vecVelocity CNetworkVelocityVector"
		^MNetworkVarNames "m_hEffectEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_hOwnerEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_fEffects uint32"
		^MNetworkVarNames "m_hGroundEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_nGroundBodyIndex int"
		^MNetworkVarNames "m_flFriction float32"
		^MNetworkVarNames "m_flElasticity float32"
		^MNetworkVarNames "m_flGravityScale float32"
		^MNetworkVarNames "m_flTimeScale float32"
		^MNetworkVarNames "m_flWaterLevel float"
		^MNetworkVarNames "m_bAnimatedEveryTick bool"
		^MNetworkVarNames "m_flNavIgnoreUntilTime GameTime_t"
		^MNetworkVarNames "m_nBloodType BloodType"
		
			|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CEntityInstance (size: 0x38 bytes, project "entity2", binding @ server.dll + 0x3afd630, scope "server.dll")
			| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
			| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
			| SCHEMA_CF1_CONSTRUCT_DISALLOWED
			| SCHEMA_CLASS_UNIDENTIFIED17
			^MNetworkVarNames "m_pEntity CEntityIdentity *"
			^MNetworkVarNames "m_CScriptComponent CScriptComponent::Storage_t"
			
			-----members of class CEntityInstance-----
				uint8_t[8] unaccounted(offset 0x0)
				CUtlSymbolLarge m_iszPrivateVScripts(offset 0x8, size 0x8, align 0x8)
					^MNetworkDisable
				CEntityIdentity* m_pEntity(offset 0x10, size 0x8, align 0x8)
					^MNetworkEnable
					^MNetworkPriority "56"
				uint8_t[16] unaccounted(offset 0x18)
				CScriptComponent* m_CScriptComponent(offset 0x28, size 0x8, align 0x8)
					^MNetworkEnable
					^MNetworkDisable
				bool m_bVisibleinPVS(offset 0x30, size 0x1, align 0x1)
				uint8_t[7] unaccounted(offset 0x31)
			
		
		-----static members of class CBaseEntity-----
			static Relationship_t** sm_DefaultRelationship(server.dll + 0x3e50768)
			static bool sm_bAccurateTriggerBboxChecks(server.dll + 0x388b1d0)
			static bool sm_bDisableTouchFuncs(server.dll + 0x3e50ea4)
			static bool m_bAllowPrecache(server.dll + 0x3c6cf74)
			static bool s_bAbsQueriesValid(server.dll + 0x3a38c68)
			static bool s_bPreventingSetAnimRunAnimEvents(server.dll + 0x3e51024)
			static int32 m_nPredictionRandomSeed(server.dll + 0x388bf00)
			static int32 m_nPredictionRandomSeedServer(server.dll + 0x388bf04)
			static CBasePlayerController* m_pPredictionPlayerController(server.dll + 0x3c6d4e8)
			static bool sm_bDatadescValidating(server.dll + 0x3c6d4f0)
		
		-----members of class CBaseEntity-----
			CBodyComponent* m_CBodyComponent(offset 0x38, size 0x8, align 0x8)
				^MNetworkEnable
				^MNetworkUserGroup "CBodyComponent"
				^MNetworkAlias "CBodyComponent"
				^MNetworkTypeAlias "CBodyComponent"
				^MNetworkPriority "48"
			CNetworkTransmitComponent m_NetworkTransmitComponent(offset 0x40, size 0x1a0, align 0x0)
			uint8_t[64] unaccounted(offset 0x1e0)
			CUtlVector< thinkfunc_t > m_aThinkFunctions(offset 0x220, size 0x18, align 0x8)
			int32 m_iCurrentThinkContext(offset 0x238, size 0x4, align 0x4)
			GameTick_t m_nLastThinkTick(offset 0x23c, size 0x4, align 0x0)
			bool m_bDisabledContextThinks(offset 0x240, size 0x1, align 0x1)
			uint8_t[15] unaccounted(offset 0x241)
			CBitVec< 64 > m_isSteadyState(offset 0x250, size 0x8, align 0x4)
			float32 m_lastNetworkChange(offset 0x258, size 0x4, align 0x4)
			uint8_t[12] unaccounted(offset 0x25c)
			CUtlVector< ResponseContext_t > m_ResponseContexts(offset 0x268, size 0x18, align 0x8)
			CUtlSymbolLarge m_iszResponseContext(offset 0x280, size 0x8, align 0x8)
			uint8_t[32] unaccounted(offset 0x288)
			int32 m_iHealth(offset 0x2a8, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkSerializer "ClampHealth"
				^MNetworkUserGroup "Player"
				^MNetworkPriority "32"
			int32 m_iMaxHealth(offset 0x2ac, size 0x4, align 0x4)
				^MNetworkEnable
			uint8 m_lifeState(offset 0x2b0, size 0x1, align 0x1)
				^MNetworkEnable
				^MNetworkUserGroup "Player"
				^MNetworkPriority "32"
			uint8_t[3] unaccounted(offset 0x2b1)
			float32 m_flDamageAccumulator(offset 0x2b4, size 0x4, align 0x4)
			DamageOptions_t m_takedamage(offset 0x2b8, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bTakesDamage(offset 0x2b9, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[6] unaccounted(offset 0x2ba)
			TakeDamageFlags_t m_nTakeDamageFlags(offset 0x2c0, size 0x8, align 0x8)
				^MNetworkEnable
			EntityPlatformTypes_t m_nPlatformType(offset 0x2c8, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[1] unaccounted(offset 0x2c9)
			MoveCollide_t m_MoveCollide(offset 0x2ca, size 0x1, align 0x1)
				^MNetworkEnable
			MoveType_t m_MoveType(offset 0x2cb, size 0x1, align 0x1)
				^MNetworkEnable
			MoveType_t m_nActualMoveType(offset 0x2cc, size 0x1, align 0x1)
			uint8 m_nWaterTouch(offset 0x2cd, size 0x1, align 0x1)
			uint8 m_nSlimeTouch(offset 0x2ce, size 0x1, align 0x1)
			bool m_bRestoreInHierarchy(offset 0x2cf, size 0x1, align 0x1)
			CUtlSymbolLarge m_target(offset 0x2d0, size 0x8, align 0x8)
			CHandle< CBaseFilter > m_hDamageFilter(offset 0x2d8, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x2dc)
			CUtlSymbolLarge m_iszDamageFilterName(offset 0x2e0, size 0x8, align 0x8)
			float32 m_flMoveDoneTime(offset 0x2e8, size 0x4, align 0x4)
			CUtlStringToken m_nSubclassID(offset 0x2ec, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkSendProxyRecipientsFilter "func: nullptr"
			uint8_t[8] unaccounted(offset 0x2f0)
			float32 m_flAnimTime(offset 0x2f8, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "0"
				^MNetworkSerializer "animTimeSerializer"
				^MNetworkSendProxyRecipientsFilter "func: nullptr"
			float32 m_flSimulationTime(offset 0x2fc, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "1"
				^MNetworkSerializer "simulationTimeSerializer"
				^MNetworkSendProxyRecipientsFilter "func: nullptr"
			GameTime_t m_flCreateTime(offset 0x300, size 0x4, align 0x0)
				^MNetworkEnable
			bool m_bClientSideRagdoll(offset 0x304, size 0x1, align 0x1)
				^MNetworkEnable
			uint8 m_ubInterpolationFrame(offset 0x305, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[2] unaccounted(offset 0x306)
			Vector m_vPrevVPhysicsUpdatePos(offset 0x308, size 0xc, align 0x4)
			uint8 m_iTeamNum(offset 0x314, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[3] unaccounted(offset 0x315)
			CUtlSymbolLarge m_iGlobalname(offset 0x318, size 0x8, align 0x8)
			int32 m_iSentToClients(offset 0x320, size 0x4, align 0x4)
			float32 m_flSpeed(offset 0x324, size 0x4, align 0x4)
				^MNetworkEnable
			CUtlString m_sUniqueHammerID(offset 0x328, size 0x8, align 0x8)
			uint32 m_spawnflags(offset 0x330, size 0x4, align 0x4)
				^MNetworkEnable
			GameTick_t m_nNextThinkTick(offset 0x334, size 0x4, align 0x0)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			int32 m_nSimulationTick(offset 0x338, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x33c)
			CEntityIOOutput m_OnKilled(offset 0x340, size 0x28, align 0x0)
			uint32 m_fFlags(offset 0x368, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
				^MNetworkUserGroup "Player"
			Vector m_vecAbsVelocity(offset 0x36c, size 0xc, align 0x4)
			CNetworkVelocityVector m_vecVelocity(offset 0x378, size 0x28, align 0x0)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
				^MNetworkPriority "32"
			uint8_t[8] unaccounted(offset 0x3a0)
			int32 m_nPushEnumCount(offset 0x3a8, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x3ac)
			CCollisionProperty* m_pCollision(offset 0x3b0, size 0x8, align 0x8)
			CHandle< CBaseEntity > m_hEffectEntity(offset 0x3b8, size 0x4, align 0x4)
				^MNetworkEnable
			CHandle< CBaseEntity > m_hOwnerEntity(offset 0x3bc, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			uint32 m_fEffects(offset 0x3c0, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkChangeCallback "OnEffectsChanged"
			CHandle< CBaseEntity > m_hGroundEntity(offset 0x3c4, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
				^MNetworkUserGroup "Player"
			int32 m_nGroundBodyIndex(offset 0x3c8, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
				^MNetworkUserGroup "Player"
			float32 m_flFriction(offset 0x3cc, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "8"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "4"
				^MNetworkEncodeFlags "1"
				^MNetworkUserGroup "LocalPlayerExclusive"
			float32 m_flElasticity(offset 0x3d0, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkEncoder "coord"
			float32 m_flGravityScale(offset 0x3d4, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			float32 m_flTimeScale(offset 0x3d8, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "LocalPlayerExclusive"
			float32 m_flWaterLevel(offset 0x3dc, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "Water"
				^MNetworkBitCount "8"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "1"
				^MNetworkEncodeFlags "8"
			bool m_bAnimatedEveryTick(offset 0x3e0, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bDisableLowViolence(offset 0x3e1, size 0x1, align 0x1)
			uint8 m_nWaterType(offset 0x3e2, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0x3e3)
			int32 m_iEFlags(offset 0x3e4, size 0x4, align 0x4)
			CEntityIOOutput m_OnUser1(offset 0x3e8, size 0x28, align 0x0)
			CEntityIOOutput m_OnUser2(offset 0x410, size 0x28, align 0x0)
			CEntityIOOutput m_OnUser3(offset 0x438, size 0x28, align 0x0)
			CEntityIOOutput m_OnUser4(offset 0x460, size 0x28, align 0x0)
			int32 m_iInitialTeamNum(offset 0x488, size 0x4, align 0x4)
			GameTime_t m_flNavIgnoreUntilTime(offset 0x48c, size 0x4, align 0x0)
				^MNetworkEnable
			QAngle m_vecAngVelocity(offset 0x490, size 0xc, align 0x4)
			bool m_bNetworkQuantizeOriginAndAngles(offset 0x49c, size 0x1, align 0x1)
			bool m_bLagCompensate(offset 0x49d, size 0x1, align 0x1)
			uint8_t[2] unaccounted(offset 0x49e)
			float32 m_flOverriddenFriction(offset 0x4a0, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_pBlocker(offset 0x4a4, size 0x4, align 0x4)
			float32 m_flLocalTime(offset 0x4a8, size 0x4, align 0x4)
			float32 m_flVPhysicsUpdateLocalTime(offset 0x4ac, size 0x4, align 0x4)
			BloodType m_nBloodType(offset 0x4b0, size 0x4, align 0x4)
				^MNetworkEnable
			uint8_t[4] unaccounted(offset 0x4b4)
		
	
	-----members of class CDOTA_DataNonSpectator-----
		CUtlVectorEmbeddedNetworkVar< DataTeamPlayer_t > m_vecDataTeam(offset 0x4b8, size 0x50, align 0x8)
			^MNetworkEnable
		uint64[256] m_bWorldTreeState(offset 0x508, size 0x800, align 0x8)
			^MNetworkEnable
			^MNetworkEncoder "fixed64"
		CUtlVectorEmbeddedNetworkVar< TreeModelReplacement_t > m_vecWorldTreeModelReplacements(offset 0xd08, size 0x50, align 0x8)
			^MNetworkEnable
		Vector2D[2] m_vDesiredWardPlacement(offset 0xd58, size 0x10, align 0x4)
			^MNetworkEnable
		int32[5] m_nEnemyStartingPosition(offset 0xd68, size 0x14, align 0x4)
			^MNetworkEnable
		HeroID_t m_nCaptainInspectedHeroID(offset 0xd7c, size 0x4, align 0x0)
			^MNetworkEnable
		float32[20] m_flSuggestedWardWeights(offset 0xd80, size 0x50, align 0x4)
			^MNetworkEnable
		uint8[20] m_nSuggestedWardIndexes(offset 0xdd0, size 0x14, align 0x1)
			^MNetworkEnable
		int32[5] m_iSuggestedLanes(offset 0xde4, size 0x14, align 0x4)
			^MNetworkEnable
		float32[5] m_iSuggestedLaneWeights(offset 0xdf8, size 0x14, align 0x4)
			^MNetworkEnable
		bool[5] m_bSuggestedLaneRoam(offset 0xe0c, size 0x5, align 0x1)
			^MNetworkEnable
		bool[5] m_bSuggestedLaneJungle(offset 0xe11, size 0x5, align 0x1)
			^MNetworkEnable
		uint8_t[2] unaccounted(offset 0xe16)
		CUtlVectorEmbeddedNetworkVar< TierNeutralInfo_t > m_vecNeutralItemsTierInfo(offset 0xe18, size 0x50, align 0x8)
			^MNetworkEnable
		CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_vecNeutralStashItems(offset 0xe68, size 0x18, align 0x8)
			^MNetworkEnable
		CNetworkUtlVectorBase< AbilityID_t > m_vecNeutralItemsConsumed(offset 0xe80, size 0x18, align 0x8)
			^MNetworkEnable
		CUtlVectorEmbeddedNetworkVar< PingConfirmationState_t > m_PingConfirmationStates(offset 0xe98, size 0x50, align 0x8)
			^MNetworkEnable
		CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_vecKnownClearCamps(offset 0xee8, size 0x18, align 0x8)
			^MNetworkEnable
		Vector2D[100] m_vPossibleWardPlacement(offset 0xf00, size 0x320, align 0x4)
			^MNetworkEnable
		float32[100] m_vPossibleWardRadii(offset 0x1220, size 0x190, align 0x4)
			^MNetworkEnable
		CUtlVectorEmbeddedNetworkVar< DOTATeleportInfo_t > m_vecTrackedTeleports(offset 0x13b0, size 0x50, align 0x8)
			^MNetworkEnable
		int32 m_iTowerKills(offset 0x1400, size 0x4, align 0x4)
		uint8_t[4] unaccounted(offset 0x1404)
	

-----members of class CDOTA_DataRadiant-----
	<no members>

