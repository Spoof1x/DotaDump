|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CPulseCell_WaitForCursorsWithTag (size: 0x88 bytes, project "pulse_system", binding @ pulse_system.dll + 0x127c80, scope "!GlobalTypes") extends CPulseCell_WaitForCursorsWithTagBase
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_GLOBAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MHasKV3TransferPolymorphicClassname
^MGetKV3ClassDefaults "func: pulse_system.dll + 0x1dfe0"
^MCellForDomain "BaseDomain"
^MPulseCellMethodBindings "ptr: pulse_system.dll + 0x129380"
^MPulseCellOutflowHookInfo "ptr: pulse_system.dll + 0x1496f8"
^MPropertyFriendlyName "Wait For Cursors With Tag"
^MPropertyDescription "Causes this execution cursor to wait for the completion of other cursors with the given tag. Can optionally kill the tag while waiting."
^MPulseEditorHeaderIcon "tools/images/pulse_editor/cursor_tag.png"

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CPulseCell_WaitForCursorsWithTagBase (size: 0x80 bytes, project "pulse_system", binding @ pulse_system.dll + 0x127d10, scope "!GlobalTypes") extends CPulseCell_BaseYieldingInflow
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_GLOBAL_TYPE_SCOPE
	| SCHEMA_CF1_CONSTRUCT_ALLOWED
	| SCHEMA_CF1_INFO_TAG_MHasKV3TransferPolymorphicClassname
	^MGetKV3ClassDefaults "func: pulse_system.dll + 0x1d6f0"
	^MPulseEditorIsControlFlowNode
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CPulseCell_BaseYieldingInflow (size: 0x48 bytes, project "pulse_runtime_lib", binding @ pulse_system.dll + 0x11d050, scope "pulse_system.dll") extends CPulseCell_BaseFlow
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_IS_ABSTRACT
		| SCHEMA_CF1_GLOBAL_TYPE_SCOPE
		| SCHEMA_CF1_CONSTRUCT_ALLOWED
		| SCHEMA_CF1_INFO_TAG_MHasKV3TransferPolymorphicClassname
		^MGetKV3ClassDefaults "func: pulse_system.dll + 0x2890"
		
			|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CPulseCell_BaseFlow (size: 0x48 bytes, project "pulse_runtime_lib", binding @ pulse_system.dll + 0x11c8e0, scope "pulse_system.dll") extends CPulseCell_Base
			| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
			| SCHEMA_CF1_GLOBAL_TYPE_SCOPE
			| SCHEMA_CF1_CONSTRUCT_ALLOWED
			| SCHEMA_CF1_INFO_TAG_MHasKV3TransferPolymorphicClassname
			^MGetKV3ClassDefaults "func: pulse_system.dll + 0x49900"
			
				|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CPulseCell_Base (size: 0x48 bytes, project "pulse_runtime_lib", binding @ pulse_system.dll + 0x11dd50, scope "pulse_system.dll")
				| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
				| SCHEMA_CF1_GLOBAL_TYPE_SCOPE
				| SCHEMA_CF1_CONSTRUCT_ALLOWED
				| SCHEMA_CF1_INFO_TAG_MHasKV3TransferPolymorphicClassname
				^MGetKV3ClassDefaults "func: pulse_system.dll + 0x497e0"
				
				-----members of class CPulseCell_Base-----
					uint8_t[8] unaccounted(offset 0x0)
					PulseDocNodeID_t m_nEditorNodeID(offset 0x8, size 0x4, align 0x0)
						^MFgdFromSchemaCompletelySkipField
					uint8_t[60] unaccounted(offset 0xc)
				
			
			-----members of class CPulseCell_BaseFlow-----
				<no members>
			
		
		-----members of class CPulseCell_BaseYieldingInflow-----
			<no members>
		
	
	-----members of class CPulseCell_WaitForCursorsWithTagBase-----
		int32 m_nCursorsAllowedToWait(offset 0x48, size 0x4, align 0x4)
			^MPropertyDescription "Any extra waiting cursors will be terminated. -1 for infinite cursors."
		uint8_t[4] unaccounted(offset 0x4c)
		CPulse_ResumePoint m_WaitComplete(offset 0x50, size 0x30, align 0x0)
	

-----members of class CPulseCell_WaitForCursorsWithTag-----
	bool m_bTagSelfWhenComplete(offset 0x80, size 0x1, align 0x1)
		^MPropertyDescription "Apply the same tag we're waiting on to the resulting cursor upon wait completion. Can be used to wait on our result cursor with the same tag."
	uint8_t[3] unaccounted(offset 0x81)
	PulseCursorCancelPriority_t m_nDesiredKillPriority(offset 0x84, size 0x4, align 0x4)
		^MPropertyDescription "When we start waiting, how should we handle existing cursors?"

