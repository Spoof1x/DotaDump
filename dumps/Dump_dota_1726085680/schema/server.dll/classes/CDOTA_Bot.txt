|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CDOTA_Bot (size: 0x8718 bytes, project "server", binding @ server.dll + 0x3ae21c0, scope "server.dll")
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable

-----members of class CDOTA_Bot-----
	uint8_t[16] unaccounted(offset 0x0)
	int32 m_iLifesteal(offset 0x10, size 0x4, align 0x4)
	int32 m_iBlock(offset 0x14, size 0x4, align 0x4)
	bool m_bForceIdle(offset 0x18, size 0x1, align 0x1)
	bool m_bForceCreepAttack(offset 0x19, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x1a)
	float32[30] m_fExecutionTime(offset 0x1c, size 0x78, align 0x4)
	int32 m_iCurExecutionTime(offset 0x94, size 0x4, align 0x4)
	PlayerID_t m_iPlayerID(offset 0x98, size 0x4, align 0x0)
	CHandle< CBaseEntity > m_hUnit(offset 0x9c, size 0x4, align 0x4)
	CDOTA_TeamCommander* m_pTeamCommander(offset 0xa0, size 0x8, align 0x8)
	int32 m_iUnitType(offset 0xa8, size 0x4, align 0x4)
	float32 m_fAggressionFactor(offset 0xac, size 0x4, align 0x4)
	bool m_bBotControlled(offset 0xb0, size 0x1, align 0x1)
	bool m_bLiquidate(offset 0xb1, size 0x1, align 0x1)
	bool m_bDoNotPurchase(offset 0xb2, size 0x1, align 0x1)
	uint8_t[1] unaccounted(offset 0xb3)
	int32 m_iDifficulty(offset 0xb4, size 0x4, align 0x4)
	bool m_bIsFullScriptTakeover(offset 0xb8, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0xb9)
	DOTA_LANE m_CurrentLane(offset 0xbc, size 0x4, align 0x4)
	DOTA_LANE m_MostRecentLane(offset 0xc0, size 0x4, align 0x4)
	DOTA_LANE m_AssignedLane(offset 0xc4, size 0x4, align 0x4)
	DOTA_LANE m_TargetLane(offset 0xc8, size 0x4, align 0x4)
	DOTA_LANE m_ForcedLane(offset 0xcc, size 0x4, align 0x4)
	float32 m_fCurrentLaneAmount(offset 0xd0, size 0x4, align 0x4)
	bool m_bIsNPXCarry(offset 0xd4, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0xd5)
	float32 m_fEstimatedUnitDamage(offset 0xd8, size 0x4, align 0x4)
	float32 m_fEstimatedMaxUnitDamage(offset 0xdc, size 0x4, align 0x4)
	float32 m_fEstimatedBuildingDamage(offset 0xe0, size 0x4, align 0x4)
	bool m_bWantsToCast(offset 0xe4, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0xe5)
	int32 m_iWantsToCastFrame(offset 0xe8, size 0x4, align 0x4)
	bool m_bWantsToAttack(offset 0xec, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0xed)
	int32 m_iWantsToAttackFrame(offset 0xf0, size 0x4, align 0x4)
	uint8_t[4] unaccounted(offset 0xf4)
	CountdownTimer m_UpdateCurrentLaneTimer(offset 0xf8, size 0x18, align 0x0)
	CountdownTimer m_UpdateModeTimer(offset 0x110, size 0x18, align 0x0)
	CountdownTimer m_ModeThinkTimer(offset 0x128, size 0x18, align 0x0)
	CountdownTimer m_InteralRatingsTimer(offset 0x140, size 0x18, align 0x0)
	CountdownTimer m_BuybackDelayTimer(offset 0x158, size 0x18, align 0x0)
	CountdownTimer m_CourierUsageTimer(offset 0x170, size 0x18, align 0x0)
	CountdownTimer m_AbilityMutedTimer(offset 0x188, size 0x18, align 0x0)
	CountdownTimer m_AbilityMutedCheckTimer(offset 0x1a0, size 0x18, align 0x0)
	GameTime_t m_HitByTowerTime(offset 0x1b8, size 0x4, align 0x0)
	GameTime_t[24] m_HitByHeroTime(offset 0x1bc, size 0x60, align 0x4)
	GameTime_t m_HitByCreepTime(offset 0x21c, size 0x4, align 0x0)
	GameTick_t m_nEstimatedDamageUpdatedTick(offset 0x220, size 0x4, align 0x0)
	GameTick_t m_nNearbyUnitsUpdatedTick(offset 0x224, size 0x4, align 0x0)
	uint8_t[192] unaccounted(offset 0x228)
	CUtlVector< int32 > m_NearbyTrees(offset 0x2e8, size 0x18, align 0x8)
	int32 m_nNearbyEnemyCreeps(offset 0x300, size 0x4, align 0x4)
	int32 m_nAttackingCreeps(offset 0x304, size 0x4, align 0x4)
	int32 m_nAttackingTowers(offset 0x308, size 0x4, align 0x4)
	int32 m_nAttackingHeroes(offset 0x30c, size 0x4, align 0x4)
	GameTime_t m_fLastSeen(offset 0x310, size 0x4, align 0x0)
	int32 m_nFailedPaths(offset 0x314, size 0x4, align 0x4)
	CHandle< CBaseEntity > m_hTarget(offset 0x318, size 0x4, align 0x4)
	Vector m_vTargetLoc(offset 0x31c, size 0xc, align 0x4)
	GameTime_t m_fTargetLastSeen(offset 0x328, size 0x4, align 0x0)
	CHandle< CBaseEntity > m_hTargetLastHitCreep(offset 0x32c, size 0x4, align 0x4)
	bool m_bWasInvisible(offset 0x330, size 0x1, align 0x1)
	bool m_bKnownInvisible(offset 0x331, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x332)
	Vector m_vLastSeenLoc(offset 0x334, size 0xc, align 0x4)
	Vector m_vRequestedBlinkLoc(offset 0x340, size 0xc, align 0x4)
	GameTime_t m_fRequestedBlinkStart(offset 0x34c, size 0x4, align 0x0)
	GameTime_t m_fRequestedBlinkExpire(offset 0x350, size 0x4, align 0x0)
	uint8_t[4] unaccounted(offset 0x354)
	CUtlVector< CHandle< CBaseEntity > > m_hMinions(offset 0x358, size 0x18, align 0x8)
	CUtlVector< CDOTABaseAbility* > m_Build(offset 0x370, size 0x18, align 0x8)
	uint8_t[33504] unaccounted(offset 0x388)
	float32[27] m_fModeDesires(offset 0x8668, size 0x6c, align 0x4)
	int32 m_iPreviousBotModeType(offset 0x86d4, size 0x4, align 0x4)
	uint8_t[48] unaccounted(offset 0x86d8)
	GameTime_t m_fPendingActionExecuteTime(offset 0x8708, size 0x4, align 0x0)
	bool m_bPendingActionBypass(offset 0x870c, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0x870d)
	int32 m_nForceAbility(offset 0x8710, size 0x4, align 0x4)
	GameTime_t m_flLastDebugTime(offset 0x8714, size 0x4, align 0x0)

