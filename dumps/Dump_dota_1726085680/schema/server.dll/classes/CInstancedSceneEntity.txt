|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CInstancedSceneEntity (size: 0xa30 bytes, project "server", binding @ server.dll + 0x3a7c1f0, scope "server.dll") extends CSceneEntity
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CSceneEntity (size: 0xa18 bytes, project "server", binding @ server.dll + 0x3a7bfe0, scope "server.dll") extends CPointEntity
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
	| SCHEMA_CF1_CONSTRUCT_ALLOWED
	| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
	^MNetworkVarNames "m_bIsPlayingBack bool"
	^MNetworkVarNames "m_bPaused bool"
	^MNetworkVarNames "m_bMultiplayer bool"
	^MNetworkVarNames "m_bAutogenerated bool"
	^MNetworkVarNames "m_flForceClientTime float32"
	^MNetworkVarNames "m_hActorList CHandle< CBaseFlex >"
	^MNetworkVarNames "m_nSceneStringIndex uint16"
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CPointEntity (size: 0x4b8 bytes, project "server", binding @ server.dll + 0x388b4b0, scope "server.dll") extends CBaseEntity
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
		| SCHEMA_CF1_CONSTRUCT_ALLOWED
		| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
		
			|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseEntity (size: 0x4b8 bytes, project "server", binding @ server.dll + 0x38c6a40, scope "server.dll") extends CEntityInstance
			| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
			| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
			| SCHEMA_CF1_CONSTRUCT_ALLOWED
			| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
			^MNetworkExcludeByName "m_bClientSideRagdoll"
			^MNetworkExcludeByName "m_iMaxHealth"
			^MNetworkExcludeByUserGroup "Water"
			^MNetworkExcludeByUserGroup "Player"
			^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
			^MNetworkExcludeByName "m_spawnflags"
			^MNetworkExcludeByName "m_bTakesDamage"
			^MNetworkExcludeByName "m_nTakeDamageFlags"
			^MNetworkExcludeByName "m_flSpeed"
			^MNetworkVarNames "m_CBodyComponent CBodyComponent::Storage_t"
			^MNetworkVarNames "m_iHealth int32"
			^MNetworkVarNames "m_iMaxHealth int32"
			^MNetworkVarNames "m_lifeState uint8"
			^MNetworkVarNames "m_takedamage DamageOptions_t"
			^MNetworkVarNames "m_bTakesDamage bool"
			^MNetworkVarNames "m_nTakeDamageFlags TakeDamageFlags_t"
			^MNetworkVarNames "m_nPlatformType EntityPlatformTypes_t"
			^MNetworkVarNames "m_MoveCollide MoveCollide_t"
			^MNetworkVarNames "m_MoveType MoveType_t"
			^MNetworkVarNames "m_nSubclassID EntitySubclassID_t"
			^MNetworkVarNames "m_flAnimTime float32"
			^MNetworkVarNames "m_flSimulationTime float32"
			^MNetworkVarNames "m_flCreateTime GameTime_t"
			^MNetworkVarNames "m_bClientSideRagdoll bool"
			^MNetworkVarNames "m_ubInterpolationFrame uint8"
			^MNetworkVarNames "m_iTeamNum uint8"
			^MNetworkVarNames "m_flSpeed float"
			^MNetworkVarNames "m_spawnflags uint32"
			^MNetworkVarNames "m_nNextThinkTick GameTick_t"
			^MNetworkVarNames "m_fFlags uint32"
			^MNetworkVarNames "m_vecVelocity CNetworkVelocityVector"
			^MNetworkVarNames "m_hEffectEntity CHandle< CBaseEntity>"
			^MNetworkVarNames "m_hOwnerEntity CHandle< CBaseEntity>"
			^MNetworkVarNames "m_fEffects uint32"
			^MNetworkVarNames "m_hGroundEntity CHandle< CBaseEntity>"
			^MNetworkVarNames "m_nGroundBodyIndex int"
			^MNetworkVarNames "m_flFriction float32"
			^MNetworkVarNames "m_flElasticity float32"
			^MNetworkVarNames "m_flGravityScale float32"
			^MNetworkVarNames "m_flTimeScale float32"
			^MNetworkVarNames "m_flWaterLevel float"
			^MNetworkVarNames "m_bAnimatedEveryTick bool"
			^MNetworkVarNames "m_flNavIgnoreUntilTime GameTime_t"
			^MNetworkVarNames "m_nBloodType BloodType"
			
				|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CEntityInstance (size: 0x38 bytes, project "entity2", binding @ server.dll + 0x3afd630, scope "server.dll")
				| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
				| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
				| SCHEMA_CF1_CONSTRUCT_DISALLOWED
				| SCHEMA_CLASS_UNIDENTIFIED17
				^MNetworkVarNames "m_pEntity CEntityIdentity *"
				^MNetworkVarNames "m_CScriptComponent CScriptComponent::Storage_t"
				
				-----members of class CEntityInstance-----
					uint8_t[8] unaccounted(offset 0x0)
					CUtlSymbolLarge m_iszPrivateVScripts(offset 0x8, size 0x8, align 0x8)
						^MNetworkDisable
					CEntityIdentity* m_pEntity(offset 0x10, size 0x8, align 0x8)
						^MNetworkEnable
						^MNetworkPriority "56"
					uint8_t[16] unaccounted(offset 0x18)
					CScriptComponent* m_CScriptComponent(offset 0x28, size 0x8, align 0x8)
						^MNetworkEnable
						^MNetworkDisable
					bool m_bVisibleinPVS(offset 0x30, size 0x1, align 0x1)
					uint8_t[7] unaccounted(offset 0x31)
				
			
			-----static members of class CBaseEntity-----
				static Relationship_t** sm_DefaultRelationship(server.dll + 0x3e50768)
				static bool sm_bAccurateTriggerBboxChecks(server.dll + 0x388b1d0)
				static bool sm_bDisableTouchFuncs(server.dll + 0x3e50ea4)
				static bool m_bAllowPrecache(server.dll + 0x3c6cf74)
				static bool s_bAbsQueriesValid(server.dll + 0x3a38c68)
				static bool s_bPreventingSetAnimRunAnimEvents(server.dll + 0x3e51024)
				static int32 m_nPredictionRandomSeed(server.dll + 0x388bf00)
				static int32 m_nPredictionRandomSeedServer(server.dll + 0x388bf04)
				static CBasePlayerController* m_pPredictionPlayerController(server.dll + 0x3c6d4e8)
				static bool sm_bDatadescValidating(server.dll + 0x3c6d4f0)
			
			-----members of class CBaseEntity-----
				CBodyComponent* m_CBodyComponent(offset 0x38, size 0x8, align 0x8)
					^MNetworkEnable
					^MNetworkUserGroup "CBodyComponent"
					^MNetworkAlias "CBodyComponent"
					^MNetworkTypeAlias "CBodyComponent"
					^MNetworkPriority "48"
				CNetworkTransmitComponent m_NetworkTransmitComponent(offset 0x40, size 0x1a0, align 0x0)
				uint8_t[64] unaccounted(offset 0x1e0)
				CUtlVector< thinkfunc_t > m_aThinkFunctions(offset 0x220, size 0x18, align 0x8)
				int32 m_iCurrentThinkContext(offset 0x238, size 0x4, align 0x4)
				GameTick_t m_nLastThinkTick(offset 0x23c, size 0x4, align 0x0)
				bool m_bDisabledContextThinks(offset 0x240, size 0x1, align 0x1)
				uint8_t[15] unaccounted(offset 0x241)
				CBitVec< 64 > m_isSteadyState(offset 0x250, size 0x8, align 0x4)
				float32 m_lastNetworkChange(offset 0x258, size 0x4, align 0x4)
				uint8_t[12] unaccounted(offset 0x25c)
				CUtlVector< ResponseContext_t > m_ResponseContexts(offset 0x268, size 0x18, align 0x8)
				CUtlSymbolLarge m_iszResponseContext(offset 0x280, size 0x8, align 0x8)
				uint8_t[32] unaccounted(offset 0x288)
				int32 m_iHealth(offset 0x2a8, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkSerializer "ClampHealth"
					^MNetworkUserGroup "Player"
					^MNetworkPriority "32"
				int32 m_iMaxHealth(offset 0x2ac, size 0x4, align 0x4)
					^MNetworkEnable
				uint8 m_lifeState(offset 0x2b0, size 0x1, align 0x1)
					^MNetworkEnable
					^MNetworkUserGroup "Player"
					^MNetworkPriority "32"
				uint8_t[3] unaccounted(offset 0x2b1)
				float32 m_flDamageAccumulator(offset 0x2b4, size 0x4, align 0x4)
				DamageOptions_t m_takedamage(offset 0x2b8, size 0x1, align 0x1)
					^MNetworkEnable
				bool m_bTakesDamage(offset 0x2b9, size 0x1, align 0x1)
					^MNetworkEnable
				uint8_t[6] unaccounted(offset 0x2ba)
				TakeDamageFlags_t m_nTakeDamageFlags(offset 0x2c0, size 0x8, align 0x8)
					^MNetworkEnable
				EntityPlatformTypes_t m_nPlatformType(offset 0x2c8, size 0x1, align 0x1)
					^MNetworkEnable
				uint8_t[1] unaccounted(offset 0x2c9)
				MoveCollide_t m_MoveCollide(offset 0x2ca, size 0x1, align 0x1)
					^MNetworkEnable
				MoveType_t m_MoveType(offset 0x2cb, size 0x1, align 0x1)
					^MNetworkEnable
				MoveType_t m_nActualMoveType(offset 0x2cc, size 0x1, align 0x1)
				uint8 m_nWaterTouch(offset 0x2cd, size 0x1, align 0x1)
				uint8 m_nSlimeTouch(offset 0x2ce, size 0x1, align 0x1)
				bool m_bRestoreInHierarchy(offset 0x2cf, size 0x1, align 0x1)
				CUtlSymbolLarge m_target(offset 0x2d0, size 0x8, align 0x8)
				CHandle< CBaseFilter > m_hDamageFilter(offset 0x2d8, size 0x4, align 0x4)
				uint8_t[4] unaccounted(offset 0x2dc)
				CUtlSymbolLarge m_iszDamageFilterName(offset 0x2e0, size 0x8, align 0x8)
				float32 m_flMoveDoneTime(offset 0x2e8, size 0x4, align 0x4)
				CUtlStringToken m_nSubclassID(offset 0x2ec, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkSendProxyRecipientsFilter "func: nullptr"
				uint8_t[8] unaccounted(offset 0x2f0)
				float32 m_flAnimTime(offset 0x2f8, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "0"
					^MNetworkSerializer "animTimeSerializer"
					^MNetworkSendProxyRecipientsFilter "func: nullptr"
				float32 m_flSimulationTime(offset 0x2fc, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "1"
					^MNetworkSerializer "simulationTimeSerializer"
					^MNetworkSendProxyRecipientsFilter "func: nullptr"
				GameTime_t m_flCreateTime(offset 0x300, size 0x4, align 0x0)
					^MNetworkEnable
				bool m_bClientSideRagdoll(offset 0x304, size 0x1, align 0x1)
					^MNetworkEnable
				uint8 m_ubInterpolationFrame(offset 0x305, size 0x1, align 0x1)
					^MNetworkEnable
				uint8_t[2] unaccounted(offset 0x306)
				Vector m_vPrevVPhysicsUpdatePos(offset 0x308, size 0xc, align 0x4)
				uint8 m_iTeamNum(offset 0x314, size 0x1, align 0x1)
					^MNetworkEnable
				uint8_t[3] unaccounted(offset 0x315)
				CUtlSymbolLarge m_iGlobalname(offset 0x318, size 0x8, align 0x8)
				int32 m_iSentToClients(offset 0x320, size 0x4, align 0x4)
				float32 m_flSpeed(offset 0x324, size 0x4, align 0x4)
					^MNetworkEnable
				CUtlString m_sUniqueHammerID(offset 0x328, size 0x8, align 0x8)
				uint32 m_spawnflags(offset 0x330, size 0x4, align 0x4)
					^MNetworkEnable
				GameTick_t m_nNextThinkTick(offset 0x334, size 0x4, align 0x0)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				int32 m_nSimulationTick(offset 0x338, size 0x4, align 0x4)
				uint8_t[4] unaccounted(offset 0x33c)
				CEntityIOOutput m_OnKilled(offset 0x340, size 0x28, align 0x0)
				uint32 m_fFlags(offset 0x368, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
					^MNetworkUserGroup "Player"
				Vector m_vecAbsVelocity(offset 0x36c, size 0xc, align 0x4)
				CNetworkVelocityVector m_vecVelocity(offset 0x378, size 0x28, align 0x0)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
					^MNetworkPriority "32"
				uint8_t[8] unaccounted(offset 0x3a0)
				int32 m_nPushEnumCount(offset 0x3a8, size 0x4, align 0x4)
				uint8_t[4] unaccounted(offset 0x3ac)
				CCollisionProperty* m_pCollision(offset 0x3b0, size 0x8, align 0x8)
				CHandle< CBaseEntity > m_hEffectEntity(offset 0x3b8, size 0x4, align 0x4)
					^MNetworkEnable
				CHandle< CBaseEntity > m_hOwnerEntity(offset 0x3bc, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
				uint32 m_fEffects(offset 0x3c0, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkChangeCallback "OnEffectsChanged"
				CHandle< CBaseEntity > m_hGroundEntity(offset 0x3c4, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
					^MNetworkUserGroup "Player"
				int32 m_nGroundBodyIndex(offset 0x3c8, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkPriority "32"
					^MNetworkUserGroup "Player"
				float32 m_flFriction(offset 0x3cc, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkBitCount "8"
					^MNetworkMinValue "0"
					^MNetworkMaxValue "4"
					^MNetworkEncodeFlags "1"
					^MNetworkUserGroup "LocalPlayerExclusive"
				float32 m_flElasticity(offset 0x3d0, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkEncoder "coord"
				float32 m_flGravityScale(offset 0x3d4, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				float32 m_flTimeScale(offset 0x3d8, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "LocalPlayerExclusive"
				float32 m_flWaterLevel(offset 0x3dc, size 0x4, align 0x4)
					^MNetworkEnable
					^MNetworkUserGroup "Water"
					^MNetworkBitCount "8"
					^MNetworkMinValue "0"
					^MNetworkMaxValue "1"
					^MNetworkEncodeFlags "8"
				bool m_bAnimatedEveryTick(offset 0x3e0, size 0x1, align 0x1)
					^MNetworkEnable
				bool m_bDisableLowViolence(offset 0x3e1, size 0x1, align 0x1)
				uint8 m_nWaterType(offset 0x3e2, size 0x1, align 0x1)
				uint8_t[1] unaccounted(offset 0x3e3)
				int32 m_iEFlags(offset 0x3e4, size 0x4, align 0x4)
				CEntityIOOutput m_OnUser1(offset 0x3e8, size 0x28, align 0x0)
				CEntityIOOutput m_OnUser2(offset 0x410, size 0x28, align 0x0)
				CEntityIOOutput m_OnUser3(offset 0x438, size 0x28, align 0x0)
				CEntityIOOutput m_OnUser4(offset 0x460, size 0x28, align 0x0)
				int32 m_iInitialTeamNum(offset 0x488, size 0x4, align 0x4)
				GameTime_t m_flNavIgnoreUntilTime(offset 0x48c, size 0x4, align 0x0)
					^MNetworkEnable
				QAngle m_vecAngVelocity(offset 0x490, size 0xc, align 0x4)
				bool m_bNetworkQuantizeOriginAndAngles(offset 0x49c, size 0x1, align 0x1)
				bool m_bLagCompensate(offset 0x49d, size 0x1, align 0x1)
				uint8_t[2] unaccounted(offset 0x49e)
				float32 m_flOverriddenFriction(offset 0x4a0, size 0x4, align 0x4)
				CHandle< CBaseEntity > m_pBlocker(offset 0x4a4, size 0x4, align 0x4)
				float32 m_flLocalTime(offset 0x4a8, size 0x4, align 0x4)
				float32 m_flVPhysicsUpdateLocalTime(offset 0x4ac, size 0x4, align 0x4)
				BloodType m_nBloodType(offset 0x4b0, size 0x4, align 0x4)
					^MNetworkEnable
				uint8_t[4] unaccounted(offset 0x4b4)
			
		
		-----members of class CPointEntity-----
			<no members>
		
	
	-----static members of class CSceneEntity-----
		static int32 s_nSceneFlushCounter(server.dll + 0x3a7d240)
	
	-----members of class CSceneEntity-----
		uint8_t[8] unaccounted(offset 0x4b8)
		CUtlSymbolLarge m_iszSceneFile(offset 0x4c0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszResumeSceneFile(offset 0x4c8, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget1(offset 0x4d0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget2(offset 0x4d8, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget3(offset 0x4e0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget4(offset 0x4e8, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget5(offset 0x4f0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget6(offset 0x4f8, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget7(offset 0x500, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszTarget8(offset 0x508, size 0x8, align 0x8)
		CHandle< CBaseEntity > m_hTarget1(offset 0x510, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget2(offset 0x514, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget3(offset 0x518, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget4(offset 0x51c, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget5(offset 0x520, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget6(offset 0x524, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget7(offset 0x528, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hTarget8(offset 0x52c, size 0x4, align 0x4)
		CUtlSymbolLarge m_sTargetAttachment(offset 0x530, size 0x8, align 0x8)
		bool m_bIsPlayingBack(offset 0x538, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bPaused(offset 0x539, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bMultiplayer(offset 0x53a, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bAutogenerated(offset 0x53b, size 0x1, align 0x1)
			^MNetworkEnable
		float32 m_flForceClientTime(offset 0x53c, size 0x4, align 0x4)
			^MNetworkEnable
		float32 m_flCurrentTime(offset 0x540, size 0x4, align 0x4)
		float32 m_flFrameTime(offset 0x544, size 0x4, align 0x4)
		bool m_bCancelAtNextInterrupt(offset 0x548, size 0x1, align 0x1)
		uint8_t[3] unaccounted(offset 0x549)
		float32 m_fPitch(offset 0x54c, size 0x4, align 0x4)
		bool m_bAutomated(offset 0x550, size 0x1, align 0x1)
		uint8_t[3] unaccounted(offset 0x551)
		int32 m_nAutomatedAction(offset 0x554, size 0x4, align 0x4)
		float32 m_flAutomationDelay(offset 0x558, size 0x4, align 0x4)
		float32 m_flAutomationTime(offset 0x55c, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hWaitingForThisResumeScene(offset 0x560, size 0x4, align 0x4)
		bool m_bWaitingForResumeScene(offset 0x564, size 0x1, align 0x1)
		bool m_bPausedViaInput(offset 0x565, size 0x1, align 0x1)
		bool m_bPauseAtNextInterrupt(offset 0x566, size 0x1, align 0x1)
		bool m_bWaitingForActor(offset 0x567, size 0x1, align 0x1)
		bool m_bWaitingForInterrupt(offset 0x568, size 0x1, align 0x1)
		bool m_bInterruptedActorsScenes(offset 0x569, size 0x1, align 0x1)
		bool m_bBreakOnNonIdle(offset 0x56a, size 0x1, align 0x1)
		bool m_bSceneFinished(offset 0x56b, size 0x1, align 0x1)
		uint8_t[4] unaccounted(offset 0x56c)
		CNetworkUtlVectorBase< CHandle< CBaseFlex > > m_hActorList(offset 0x570, size 0x18, align 0x8)
			^MNetworkEnable
		CUtlVector< CHandle< CBaseEntity > > m_hRemoveActorList(offset 0x588, size 0x18, align 0x8)
		uint8_t[48] unaccounted(offset 0x5a0)
		int32 m_nSceneFlushCounter(offset 0x5d0, size 0x4, align 0x4)
		uint16 m_nSceneStringIndex(offset 0x5d4, size 0x2, align 0x2)
			^MNetworkEnable
		uint8_t[2] unaccounted(offset 0x5d6)
		CEntityIOOutput m_OnStart(offset 0x5d8, size 0x28, align 0x0)
		CEntityIOOutput m_OnCompletion(offset 0x600, size 0x28, align 0x0)
		CEntityIOOutput m_OnCanceled(offset 0x628, size 0x28, align 0x0)
		CEntityIOOutput m_OnPaused(offset 0x650, size 0x28, align 0x0)
		CEntityIOOutput m_OnResumed(offset 0x678, size 0x28, align 0x0)
		CEntityIOOutput[16] m_OnTrigger(offset 0x6a0, size 0x280, align 0x8)
		uint8_t[144] unaccounted(offset 0x920)
		CHandle< CSceneEntity > m_hInterruptScene(offset 0x9b0, size 0x4, align 0x4)
		int32 m_nInterruptCount(offset 0x9b4, size 0x4, align 0x4)
		bool m_bSceneMissing(offset 0x9b8, size 0x1, align 0x1)
		bool m_bInterrupted(offset 0x9b9, size 0x1, align 0x1)
		bool m_bCompletedEarly(offset 0x9ba, size 0x1, align 0x1)
		bool m_bInterruptSceneFinished(offset 0x9bb, size 0x1, align 0x1)
		bool m_bRestoring(offset 0x9bc, size 0x1, align 0x1)
		uint8_t[3] unaccounted(offset 0x9bd)
		CUtlVector< CHandle< CSceneEntity > > m_hNotifySceneCompletion(offset 0x9c0, size 0x18, align 0x8)
		CUtlVector< CHandle< CSceneListManager > > m_hListManagers(offset 0x9d8, size 0x18, align 0x8)
		CUtlSymbolLarge m_iszSoundName(offset 0x9f0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszSequenceName(offset 0x9f8, size 0x8, align 0x8)
		CHandle< CBaseFlex > m_hActor(offset 0xa00, size 0x4, align 0x4)
		CHandle< CBaseEntity > m_hActivator(offset 0xa04, size 0x4, align 0x4)
		int32 m_BusyActor(offset 0xa08, size 0x4, align 0x4)
		SceneOnPlayerDeath_t m_iPlayerDeathBehavior(offset 0xa0c, size 0x4, align 0x4)
		uint8_t[8] unaccounted(offset 0xa10)
	

-----members of class CInstancedSceneEntity-----
	CHandle< CBaseEntity > m_hOwner(offset 0xa18, size 0x4, align 0x4)
	bool m_bHadOwner(offset 0xa1c, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0xa1d)
	float32 m_flPostSpeakDelay(offset 0xa20, size 0x4, align 0x4)
	float32 m_flPreDelay(offset 0xa24, size 0x4, align 0x4)
	bool m_bIsBackground(offset 0xa28, size 0x1, align 0x1)
	bool m_bRemoveOnCompletion(offset 0xa29, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0xa2a)
	CHandle< CBaseEntity > m_hTarget(offset 0xa2c, size 0x4, align 0x4)

