|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CModifierParams (size: 0x1d8 bytes, project "server", binding @ server.dll + 0x39efa20, scope "server.dll")
| SCHEMA_CF1_HAS_TRIVIAL_DESTRUCTOR

-----static members of class CModifierParams-----
	static CModifierParams s_Default(server.dll + 0x39f3f70)

-----members of class CModifierParams-----
	CHandle< CDOTABaseAbility > ability(offset 0x0, size 0x4, align 0x4)
	float32 fDamage(offset 0x4, size 0x4, align 0x4)
	float32 fOriginalDamage(offset 0x8, size 0x4, align 0x4)
	int32 nActivity(offset 0xc, size 0x4, align 0x4)
	bool bTooltip(offset 0x10, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0x11)
	int32 nTooltipParam(offset 0x14, size 0x4, align 0x4)
	bool bIgnoreInvis(offset 0x18, size 0x1, align 0x1)
	bool bNoCooldown(offset 0x19, size 0x1, align 0x1)
	bool bIgnoreBaseArmor(offset 0x1a, size 0x1, align 0x1)
	bool bIgnoreBaseMagicArmor(offset 0x1b, size 0x1, align 0x1)
	bool bReincarnate(offset 0x1c, size 0x1, align 0x1)
	bool bDoNotConsume(offset 0x1d, size 0x1, align 0x1)
	bool bReportMax(offset 0x1e, size 0x1, align 0x1)
	uint8_t[1] unaccounted(offset 0x1f)
	float32 fDistance(offset 0x20, size 0x4, align 0x4)
	float32 fGain(offset 0x24, size 0x4, align 0x4)
	float32 fAttackTimeRemaining(offset 0x28, size 0x4, align 0x4)
	PlayerID_t m_nIssuerPlayerIndex(offset 0x2c, size 0x4, align 0x0)
	PlayerID_t m_nVictimPlayerID(offset 0x30, size 0x4, align 0x0)
	int32 nDamageType(offset 0x34, size 0x4, align 0x4)
	int32 nDamageflags(offset 0x38, size 0x4, align 0x4)
	int32 nDamageCategory(offset 0x3c, size 0x4, align 0x4)
	int32 iFailType(offset 0x40, size 0x4, align 0x4)
	int16 iRecord(offset 0x44, size 0x2, align 0x2)
	uint8_t[2] unaccounted(offset 0x46)
	int32 nCost(offset 0x48, size 0x4, align 0x4)
	int32 nHealthCost(offset 0x4c, size 0x4, align 0x4)
	int32 nOrdertype(offset 0x50, size 0x4, align 0x4)
	Vector vOldLoc(offset 0x54, size 0xc, align 0x4)
	Vector vNewLoc(offset 0x60, size 0xc, align 0x4)
	Vector vCastLocation(offset 0x6c, size 0xc, align 0x4)
	bool bCraniumBasherTested(offset 0x78, size 0x1, align 0x1)
	bool bMKBTested(offset 0x79, size 0x1, align 0x1)
	bool bOctarineTested(offset 0x7a, size 0x1, align 0x1)
	bool bHeartRegenApplied(offset 0x7b, size 0x1, align 0x1)
	bool bSangeAmpApplied(offset 0x7c, size 0x1, align 0x1)
	bool bLocketAmpApplied(offset 0x7d, size 0x1, align 0x1)
	bool bPaladinAmpApplied(offset 0x7e, size 0x1, align 0x1)
	bool bBlademailApplied(offset 0x7f, size 0x1, align 0x1)
	bool bForceFieldApplied(offset 0x80, size 0x1, align 0x1)
	bool bKayaApplied(offset 0x81, size 0x1, align 0x1)
	bool bYashaAndKayaApplied(offset 0x82, size 0x1, align 0x1)
	bool bStoutConsidered(offset 0x83, size 0x1, align 0x1)
	bool bAegisUsed(offset 0x84, size 0x1, align 0x1)
	bool bInterrupted(offset 0x85, size 0x1, align 0x1)
	bool bDiffusalApplied(offset 0x86, size 0x1, align 0x1)
	bool bChainLightningConsidered(offset 0x87, size 0x1, align 0x1)
	bool bSuppressDamage(offset 0x88, size 0x1, align 0x1)
	bool bRangedAttack(offset 0x89, size 0x1, align 0x1)
	bool bProcessProcs(offset 0x8a, size 0x1, align 0x1)
	bool bProjectileIsFromIllusion(offset 0x8b, size 0x1, align 0x1)
	bool bHasMagicComponent(offset 0x8c, size 0x1, align 0x1)
	bool bIsSpellLifesteal(offset 0x8d, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x8e)
	CEntityIndex[64] pnMagicStickProcEntityIndices(offset 0x90, size 0x100, align 0x4)
	bool bBloodstoneRegenApplied(offset 0x190, size 0x1, align 0x1)
	bool bShroudManaRestoreApplied(offset 0x191, size 0x1, align 0x1)
	bool bPhylacteryApplied(offset 0x192, size 0x1, align 0x1)
	bool bAllowZeroDamageFromPostReductionBlock(offset 0x193, size 0x1, align 0x1)
	bool bForceMagicStickProc(offset 0x194, size 0x1, align 0x1)
	bool bIgnoreNegativeValuesIfDebuffImmune(offset 0x195, size 0x1, align 0x1)
	bool bIgnorePositiveValuesIfDebuffImmune(offset 0x196, size 0x1, align 0x1)
	bool bIgnoreAllIfDebuffImmune(offset 0x197, size 0x1, align 0x1)
	bool bAlsoIgnoreBuffsIfDebuffImmune(offset 0x198, size 0x1, align 0x1)
	bool bIgnoreLowerIfDebuffImmune(offset 0x199, size 0x1, align 0x1)
	uint8_t[2] unaccounted(offset 0x19a)
	float32 flIgnoreLowerIfDebuffImmune(offset 0x19c, size 0x4, align 0x4)
	bool bIgnoreHigherIfDebuffImmune(offset 0x1a0, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0x1a1)
	float32 flIgnoreHigherIfDebuffImmune(offset 0x1a4, size 0x4, align 0x4)
	bool bIgnoreTemporaryAttackSpeedModifiers(offset 0x1a8, size 0x1, align 0x1)
	uint8_t[7] unaccounted(offset 0x1a9)
	char* pszAbilitySpecialName(offset 0x1b0, size 0x8, align 0x8)
	int32 nAbilitySpecialLevel(offset 0x1b8, size 0x4, align 0x4)
	bool bIsRegen(offset 0x1bc, size 0x1, align 0x1)
	uint8_t[3] unaccounted(offset 0x1bd)
	CHandle< CBaseEntity > hattacker(offset 0x1c0, size 0x4, align 0x4)
	CHandle< CBaseEntity > htarget(offset 0x1c4, size 0x4, align 0x4)
	CHandle< CBaseEntity > hunit(offset 0x1c8, size 0x4, align 0x4)
	CHandle< CDOTABaseAbility > inflictor(offset 0x1cc, size 0x4, align 0x4)
	CDOTA_Buff* pAddedBuff(offset 0x1d0, size 0x8, align 0x8)

