|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class CDOTA_BaseNPC_CustomEffigy (size: 0x1928 bytes, project "server", binding @ server.dll + 0x3a15170, scope "server.dll") extends CDOTA_BaseNPC_Building
| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
| SCHEMA_CF1_CONSTRUCT_ALLOWED
| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc

	|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CDOTA_BaseNPC_Building (size: 0x1920 bytes, project "server", binding @ server.dll + 0x3aea070, scope "server.dll") extends CDOTA_BaseNPC
	| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
	| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
	| SCHEMA_CF1_CONSTRUCT_ALLOWED
	| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
	| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
	^MNetworkExcludeByName "m_angRotation"
	^MNetworkExcludeByName "m_angRotation[0]"
	^MNetworkExcludeByName "m_angRotation[1]"
	^MNetworkVarNames "m_iDamageLevel int"
	^MNetworkVarNames "m_nFXIndex HParticleSystemDefinitionStrong"
	^MNetworkVarNames "m_nFXIndexDestruction HParticleSystemDefinitionStrong"
	^MNetworkVarNames "m_angInitialAngles QAngle"
	^MNetworkVarNames "m_hHeroStatueSequence HSequence"
	^MNetworkVarNames "m_hConstantLayerSequence HSequence"
	^MNetworkVarNames "m_fHeroStatueCycle float"
	^MNetworkVarNames "m_iHeroStatueStatusEffectIndex int"
	^MNetworkVarNames "m_bHeroStatue bool"
	^MNetworkVarNames "m_bBattleCup bool"
	^MNetworkVarNames "m_HeroStatueInscription char"
	^MNetworkVarNames "m_iHeroStatueOwnerPlayerID PlayerID_t"
	^MNetworkVarNames "m_ParticleTintColor Color"
	^MNetworkVarNames "m_nFoWTeam FowCustomTeams_t"
	
		|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CDOTA_BaseNPC (size: 0x1810 bytes, project "server", binding @ server.dll + 0x3ae9b30, scope "server.dll") extends NextBotCombatCharacter
		| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
		| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
		| SCHEMA_CF1_CONSTRUCT_ALLOWED
		| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
		| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
		^MNetworkExcludeByName "m_bIsIllusion"
		^MNetworkExcludeByName "m_blinktoggle"
		^MNetworkExcludeByName "m_flAnimTime"
		^MNetworkExcludeByUserGroup "m_flCycle"
		^MNetworkExcludeByName "m_flEncodedController"
		^MNetworkExcludeByName "m_flPoseParameter"
		^MNetworkExcludeByName "m_flSimulationTime"
		^MNetworkExcludeByName "m_flexWeight"
		^MNetworkExcludeByName "m_nForceBone"
		^MNetworkExcludeByName "m_nHitboxSet"
		^MNetworkExcludeByName "m_baseLayer.m_hSequence"
		^MNetworkExcludeByName "m_vecForce"
		^MNetworkExcludeByName "m_vecMaxs"
		^MNetworkExcludeByName "m_vecMins"
		^MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
		^MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
		^MNetworkExcludeByName "m_vLookTargetPosition"
		^MNetworkExcludeByUserGroup "overlay_vars"
		^MNetworkIncludeByName "m_fFlags"
		^MNetworkIncludeByName "m_iMaxHealth"
		^MNetworkIncludeByName "m_lifeState"
		^MNetworkIncludeByName "m_bTakesDamage"
		^MNetworkIncludeByName "m_nTakeDamageFlags"
		^MNetworkIncludeByName "m_iHealth"
		^MNetworkOverride "CGameSceneNode m_angRotation"
		^MNetworkOverride "CGameSceneNode m_angRotation"
		^MNetworkUserGroupProxy "CDOTA_BaseNPC SpectatorsOnly"
		^MNetworkUserGroupProxy "CDOTA_BaseNPC Abilities"
		^MNetworkVarNames "m_bSelectionRingVisible bool"
		^MNetworkVarNames "m_iCurrentLevel int"
		^MNetworkVarNames "m_flMana float"
		^MNetworkVarNames "m_flMaxMana float"
		^MNetworkVarNames "m_flManaThinkRegen float"
		^MNetworkVarNames "m_flHealthThinkRegen float"
		^MNetworkVarNames "m_nHealthBarOffsetOverride int"
		^MNetworkVarNames "m_bIsPhantom bool"
		^MNetworkVarNames "m_bIsAncient bool"
		^MNetworkVarNames "m_bIsBossCreature bool"
		^MNetworkVarNames "m_bIsNeutralUnitType bool"
		^MNetworkVarNames "m_bIsSummoned bool"
		^MNetworkVarNames "m_bCanBeDominated bool"
		^MNetworkVarNames "m_bCanRespawn bool"
		^MNetworkVarNames "m_bIsClone bool"
		^MNetworkVarNames "m_bHasUpgradeableAbilities bool"
		^MNetworkVarNames "m_iBKBChargesUsed int"
		^MNetworkVarNames "m_iAeonChargesUsed int"
		^MNetworkVarNames "m_flRefresherUseTime GameTime_t"
		^MNetworkVarNames "m_flRefresherLastCooldown float"
		^MNetworkVarNames "m_flLastDealtDamageTime GameTime_t"
		^MNetworkVarNames "m_iBotDebugData int"
		^MNetworkVarNames "m_bIsMoving bool"
		^MNetworkVarNames "m_bCanUseWards bool"
		^MNetworkVarNames "m_bCanUseAllItems bool"
		^MNetworkVarNames "m_hNeutralSpawner CHandle< CDOTA_NeutralSpawner>"
		^MNetworkVarNames "m_flManaRegen float"
		^MNetworkVarNames "m_flHealthRegen float"
		^MNetworkVarNames "m_nTotalDamageTaken int64"
		^MNetworkVarNames "m_iAttackRange int"
		^MNetworkVarNames "m_iMoveSpeed int"
		^MNetworkVarNames "m_flTauntCooldown GameTime_t"
		^MNetworkVarNames "m_flTauntCooldown2 GameTime_t"
		^MNetworkVarNames "m_fRevealRadius float"
		^MNetworkVarNames "m_flBaseAttackTime float"
		^MNetworkVarNames "m_iDayTimeVisionRange int"
		^MNetworkVarNames "m_iNightTimeVisionRange int"
		^MNetworkVarNames "m_flPhysicalArmorValue float"
		^MNetworkVarNames "m_flMagicalResistanceValue float"
		^MNetworkVarNames "m_iAttackCapabilities int"
		^MNetworkVarNames "m_iSpecialAbility int"
		^MNetworkVarNames "m_iXPBounty int"
		^MNetworkVarNames "m_iXPBountyExtra int"
		^MNetworkVarNames "m_iGoldBountyMin int"
		^MNetworkVarNames "m_iGoldBountyMax int"
		^MNetworkVarNames "m_nPlayerOwnerID PlayerID_t"
		^MNetworkVarNames "m_flLastDamageTime GameTime_t"
		^MNetworkVarNames "m_flLastAttackTime GameTime_t"
		^MNetworkVarNames "m_nUnitState64 uint64"
		^MNetworkVarNames "m_nUnitModelVariant int8"
		^MNetworkVarNames "m_iTaggedAsVisibleByTeam int"
		^MNetworkVarNames "m_iIsControllableByPlayer64 uint64"
		^MNetworkVarNames "m_hAbilities EHANDLE"
		^MNetworkVarNames "m_ModifierManager CDOTA_ModifierManager"
		^MNetworkVarNames "m_iszUnitName string_t"
		^MNetworkVarNames "m_iUnitNameIndex int"
		^MNetworkVarNames "m_iDamageMin int"
		^MNetworkVarNames "m_iDamageMax int"
		^MNetworkVarNames "m_iDamageBonus int"
		^MNetworkVarNames "m_bIsWaitingToSpawn bool"
		^MNetworkVarNames "m_bIsIllusion bool"
		^MNetworkVarNames "m_nUnitLabelIndex uint8"
		^MNetworkVarNames "m_szScaleset CUtlString"
		^MNetworkVarNames "m_szUnitLabel CUtlString"
		^MNetworkVarNames "m_hOwnerNPC CHandle< CBaseEntity>"
		^MNetworkVarNames "m_hGoalEntity CHandle< CBaseEntity>"
		^MNetworkVarNames "m_Inventory CDOTA_UnitInventory"
		^MNetworkVarNames "m_iCurShop DOTA_SHOP_TYPE"
		^MNetworkVarNames "m_szCurShopEntName string_t"
		^MNetworkVarNames "m_bStolenScepter bool"
		^MNetworkVarNames "m_anglediff int"
		^MNetworkVarNames "m_NetworkActivity int"
		^MNetworkVarNames "m_NetworkSequenceIndex int"
		^MNetworkVarNames "m_bShouldDoFlyHeightVisual bool"
		^MNetworkVarNames "m_flStartSequenceCycle float"
		^MNetworkVarNames "m_CustomHealthLabel char"
		^MNetworkVarNames "m_CustomHealthLabelColor Color"
		
			|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class NextBotCombatCharacter (size: 0x948 bytes, project "server", binding @ server.dll + 0x3af8590, scope "server.dll") extends CBaseCombatCharacter
			| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
			| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
			| SCHEMA_CF1_CONSTRUCT_ALLOWED
			| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
			| SCHEMA_CF1_INFO_TAG_MClassHasEntityLimitedDataDesc
			^MNetworkVarNames "m_nLod uint8"
			
				|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseCombatCharacter (size: 0x8b8 bytes, project "server", binding @ server.dll + 0x38c5590, scope "server.dll") extends CBaseFlex
				| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
				| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
				| SCHEMA_CF1_CONSTRUCT_ALLOWED
				| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
				^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
				^MNetworkVarNames "m_hMyWearables CHandle< CEconWearable >"
				
					|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseFlex (size: 0x828 bytes, project "server", binding @ server.dll + 0x38c5480, scope "server.dll") extends CBaseAnimatingOverlay
					| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
					| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
					| SCHEMA_CF1_CONSTRUCT_ALLOWED
					| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
					^MNetworkVarNames "m_flexWeight float32"
					^MNetworkVarNames "m_vLookTargetPosition Vector"
					^MNetworkVarNames "m_blinktoggle bool"
					
						|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseAnimatingOverlay (size: 0x798 bytes, project "server", binding @ server.dll + 0x3881a60, scope "server.dll") extends CBaseAnimatingActivity
						| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
						| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
						| SCHEMA_CF1_CONSTRUCT_ALLOWED
						| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
						
							|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseAnimatingActivity (size: 0x798 bytes, project "server", binding @ server.dll + 0x3881d40, scope "server.dll") extends CBaseModelEntity
							| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
							| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
							| SCHEMA_CF1_CONSTRUCT_ALLOWED
							| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
							^MNetworkVarNames "m_bShouldAnimateDuringGameplayPause bool"
							^MNetworkVarNames "m_bInitiallyPopulateInterpHistory bool"
							
								|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseModelEntity (size: 0x788 bytes, project "server", binding @ server.dll + 0x38c8840, scope "server.dll") extends CBaseEntity
								| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
								| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
								| SCHEMA_CF1_CONSTRUCT_ALLOWED
								| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
								^MNetworkVarNames "m_CRenderComponent CRenderComponent::Storage_t"
								^MNetworkVarNames "m_CHitboxComponent CHitboxComponent::Storage_t"
								^MNetworkVarNames "m_nRenderMode RenderMode_t"
								^MNetworkVarNames "m_nRenderFX RenderFx_t"
								^MNetworkVarNames "m_clrRender Color"
								^MNetworkVarNames "m_vecRenderAttributes EntityRenderAttribute_t"
								^MNetworkVarNames "m_bRenderToCubemaps bool"
								^MNetworkVarNames "m_bNoInterpolate bool"
								^MNetworkVarNames "m_Collision CCollisionProperty"
								^MNetworkVarNames "m_Glow CGlowProperty"
								^MNetworkVarNames "m_flGlowBackfaceMult float"
								^MNetworkVarNames "m_fadeMinDist float32"
								^MNetworkVarNames "m_fadeMaxDist float32"
								^MNetworkVarNames "m_flFadeScale float32"
								^MNetworkVarNames "m_flShadowStrength float32"
								^MNetworkVarNames "m_nObjectCulling uint8"
								^MNetworkVarNames "m_nAddDecal int"
								^MNetworkVarNames "m_vDecalPosition Vector"
								^MNetworkVarNames "m_vDecalForwardAxis Vector"
								^MNetworkVarNames "m_flDecalHealBloodRate float"
								^MNetworkVarNames "m_flDecalHealHeightRate float"
								^MNetworkVarNames "m_ConfigEntitiesToPropagateMaterialDecalsTo CHandle< CBaseModelEntity >"
								^MNetworkVarNames "m_vecViewOffset CNetworkViewOffsetVector"
								
									|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CBaseEntity (size: 0x4b8 bytes, project "server", binding @ server.dll + 0x38c6a40, scope "server.dll") extends CEntityInstance
									| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
									| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
									| SCHEMA_CF1_CONSTRUCT_ALLOWED
									| SCHEMA_CF1_INFO_TAG_MNetworkAssumeNotNetworkable
									^MNetworkExcludeByName "m_bClientSideRagdoll"
									^MNetworkExcludeByName "m_iMaxHealth"
									^MNetworkExcludeByUserGroup "Water"
									^MNetworkExcludeByUserGroup "Player"
									^MNetworkExcludeByUserGroup "LocalPlayerExclusive"
									^MNetworkExcludeByName "m_spawnflags"
									^MNetworkExcludeByName "m_bTakesDamage"
									^MNetworkExcludeByName "m_nTakeDamageFlags"
									^MNetworkExcludeByName "m_flSpeed"
									^MNetworkVarNames "m_CBodyComponent CBodyComponent::Storage_t"
									^MNetworkVarNames "m_iHealth int32"
									^MNetworkVarNames "m_iMaxHealth int32"
									^MNetworkVarNames "m_lifeState uint8"
									^MNetworkVarNames "m_takedamage DamageOptions_t"
									^MNetworkVarNames "m_bTakesDamage bool"
									^MNetworkVarNames "m_nTakeDamageFlags TakeDamageFlags_t"
									^MNetworkVarNames "m_nPlatformType EntityPlatformTypes_t"
									^MNetworkVarNames "m_MoveCollide MoveCollide_t"
									^MNetworkVarNames "m_MoveType MoveType_t"
									^MNetworkVarNames "m_nSubclassID EntitySubclassID_t"
									^MNetworkVarNames "m_flAnimTime float32"
									^MNetworkVarNames "m_flSimulationTime float32"
									^MNetworkVarNames "m_flCreateTime GameTime_t"
									^MNetworkVarNames "m_bClientSideRagdoll bool"
									^MNetworkVarNames "m_ubInterpolationFrame uint8"
									^MNetworkVarNames "m_iTeamNum uint8"
									^MNetworkVarNames "m_flSpeed float"
									^MNetworkVarNames "m_spawnflags uint32"
									^MNetworkVarNames "m_nNextThinkTick GameTick_t"
									^MNetworkVarNames "m_fFlags uint32"
									^MNetworkVarNames "m_vecVelocity CNetworkVelocityVector"
									^MNetworkVarNames "m_hEffectEntity CHandle< CBaseEntity>"
									^MNetworkVarNames "m_hOwnerEntity CHandle< CBaseEntity>"
									^MNetworkVarNames "m_fEffects uint32"
									^MNetworkVarNames "m_hGroundEntity CHandle< CBaseEntity>"
									^MNetworkVarNames "m_nGroundBodyIndex int"
									^MNetworkVarNames "m_flFriction float32"
									^MNetworkVarNames "m_flElasticity float32"
									^MNetworkVarNames "m_flGravityScale float32"
									^MNetworkVarNames "m_flTimeScale float32"
									^MNetworkVarNames "m_flWaterLevel float"
									^MNetworkVarNames "m_bAnimatedEveryTick bool"
									^MNetworkVarNames "m_flNavIgnoreUntilTime GameTime_t"
									^MNetworkVarNames "m_nBloodType BloodType"
									
										|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 base class CEntityInstance (size: 0x38 bytes, project "entity2", binding @ server.dll + 0x3afd630, scope "server.dll")
										| SCHEMA_CF1_HAS_VIRTUAL_MEMBERS
										| SCHEMA_CF1_MODULE_LOCAL_TYPE_SCOPE
										| SCHEMA_CF1_CONSTRUCT_DISALLOWED
										| SCHEMA_CLASS_UNIDENTIFIED17
										^MNetworkVarNames "m_pEntity CEntityIdentity *"
										^MNetworkVarNames "m_CScriptComponent CScriptComponent::Storage_t"
										
										-----members of class CEntityInstance-----
											uint8_t[8] unaccounted(offset 0x0)
											CUtlSymbolLarge m_iszPrivateVScripts(offset 0x8, size 0x8, align 0x8)
												^MNetworkDisable
											CEntityIdentity* m_pEntity(offset 0x10, size 0x8, align 0x8)
												^MNetworkEnable
												^MNetworkPriority "56"
											uint8_t[16] unaccounted(offset 0x18)
											CScriptComponent* m_CScriptComponent(offset 0x28, size 0x8, align 0x8)
												^MNetworkEnable
												^MNetworkDisable
											bool m_bVisibleinPVS(offset 0x30, size 0x1, align 0x1)
											uint8_t[7] unaccounted(offset 0x31)
										
									
									-----static members of class CBaseEntity-----
										static Relationship_t** sm_DefaultRelationship(server.dll + 0x3e50768)
										static bool sm_bAccurateTriggerBboxChecks(server.dll + 0x388b1d0)
										static bool sm_bDisableTouchFuncs(server.dll + 0x3e50ea4)
										static bool m_bAllowPrecache(server.dll + 0x3c6cf74)
										static bool s_bAbsQueriesValid(server.dll + 0x3a38c68)
										static bool s_bPreventingSetAnimRunAnimEvents(server.dll + 0x3e51024)
										static int32 m_nPredictionRandomSeed(server.dll + 0x388bf00)
										static int32 m_nPredictionRandomSeedServer(server.dll + 0x388bf04)
										static CBasePlayerController* m_pPredictionPlayerController(server.dll + 0x3c6d4e8)
										static bool sm_bDatadescValidating(server.dll + 0x3c6d4f0)
									
									-----members of class CBaseEntity-----
										CBodyComponent* m_CBodyComponent(offset 0x38, size 0x8, align 0x8)
											^MNetworkEnable
											^MNetworkUserGroup "CBodyComponent"
											^MNetworkAlias "CBodyComponent"
											^MNetworkTypeAlias "CBodyComponent"
											^MNetworkPriority "48"
										CNetworkTransmitComponent m_NetworkTransmitComponent(offset 0x40, size 0x1a0, align 0x0)
										uint8_t[64] unaccounted(offset 0x1e0)
										CUtlVector< thinkfunc_t > m_aThinkFunctions(offset 0x220, size 0x18, align 0x8)
										int32 m_iCurrentThinkContext(offset 0x238, size 0x4, align 0x4)
										GameTick_t m_nLastThinkTick(offset 0x23c, size 0x4, align 0x0)
										bool m_bDisabledContextThinks(offset 0x240, size 0x1, align 0x1)
										uint8_t[15] unaccounted(offset 0x241)
										CBitVec< 64 > m_isSteadyState(offset 0x250, size 0x8, align 0x4)
										float32 m_lastNetworkChange(offset 0x258, size 0x4, align 0x4)
										uint8_t[12] unaccounted(offset 0x25c)
										CUtlVector< ResponseContext_t > m_ResponseContexts(offset 0x268, size 0x18, align 0x8)
										CUtlSymbolLarge m_iszResponseContext(offset 0x280, size 0x8, align 0x8)
										uint8_t[32] unaccounted(offset 0x288)
										int32 m_iHealth(offset 0x2a8, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkSerializer "ClampHealth"
											^MNetworkUserGroup "Player"
											^MNetworkPriority "32"
										int32 m_iMaxHealth(offset 0x2ac, size 0x4, align 0x4)
											^MNetworkEnable
										uint8 m_lifeState(offset 0x2b0, size 0x1, align 0x1)
											^MNetworkEnable
											^MNetworkUserGroup "Player"
											^MNetworkPriority "32"
										uint8_t[3] unaccounted(offset 0x2b1)
										float32 m_flDamageAccumulator(offset 0x2b4, size 0x4, align 0x4)
										DamageOptions_t m_takedamage(offset 0x2b8, size 0x1, align 0x1)
											^MNetworkEnable
										bool m_bTakesDamage(offset 0x2b9, size 0x1, align 0x1)
											^MNetworkEnable
										uint8_t[6] unaccounted(offset 0x2ba)
										TakeDamageFlags_t m_nTakeDamageFlags(offset 0x2c0, size 0x8, align 0x8)
											^MNetworkEnable
										EntityPlatformTypes_t m_nPlatformType(offset 0x2c8, size 0x1, align 0x1)
											^MNetworkEnable
										uint8_t[1] unaccounted(offset 0x2c9)
										MoveCollide_t m_MoveCollide(offset 0x2ca, size 0x1, align 0x1)
											^MNetworkEnable
										MoveType_t m_MoveType(offset 0x2cb, size 0x1, align 0x1)
											^MNetworkEnable
										MoveType_t m_nActualMoveType(offset 0x2cc, size 0x1, align 0x1)
										uint8 m_nWaterTouch(offset 0x2cd, size 0x1, align 0x1)
										uint8 m_nSlimeTouch(offset 0x2ce, size 0x1, align 0x1)
										bool m_bRestoreInHierarchy(offset 0x2cf, size 0x1, align 0x1)
										CUtlSymbolLarge m_target(offset 0x2d0, size 0x8, align 0x8)
										CHandle< CBaseFilter > m_hDamageFilter(offset 0x2d8, size 0x4, align 0x4)
										uint8_t[4] unaccounted(offset 0x2dc)
										CUtlSymbolLarge m_iszDamageFilterName(offset 0x2e0, size 0x8, align 0x8)
										float32 m_flMoveDoneTime(offset 0x2e8, size 0x4, align 0x4)
										CUtlStringToken m_nSubclassID(offset 0x2ec, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkSendProxyRecipientsFilter "func: nullptr"
										uint8_t[8] unaccounted(offset 0x2f0)
										float32 m_flAnimTime(offset 0x2f8, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkPriority "0"
											^MNetworkSerializer "animTimeSerializer"
											^MNetworkSendProxyRecipientsFilter "func: nullptr"
										float32 m_flSimulationTime(offset 0x2fc, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkPriority "1"
											^MNetworkSerializer "simulationTimeSerializer"
											^MNetworkSendProxyRecipientsFilter "func: nullptr"
										GameTime_t m_flCreateTime(offset 0x300, size 0x4, align 0x0)
											^MNetworkEnable
										bool m_bClientSideRagdoll(offset 0x304, size 0x1, align 0x1)
											^MNetworkEnable
										uint8 m_ubInterpolationFrame(offset 0x305, size 0x1, align 0x1)
											^MNetworkEnable
										uint8_t[2] unaccounted(offset 0x306)
										Vector m_vPrevVPhysicsUpdatePos(offset 0x308, size 0xc, align 0x4)
										uint8 m_iTeamNum(offset 0x314, size 0x1, align 0x1)
											^MNetworkEnable
										uint8_t[3] unaccounted(offset 0x315)
										CUtlSymbolLarge m_iGlobalname(offset 0x318, size 0x8, align 0x8)
										int32 m_iSentToClients(offset 0x320, size 0x4, align 0x4)
										float32 m_flSpeed(offset 0x324, size 0x4, align 0x4)
											^MNetworkEnable
										CUtlString m_sUniqueHammerID(offset 0x328, size 0x8, align 0x8)
										uint32 m_spawnflags(offset 0x330, size 0x4, align 0x4)
											^MNetworkEnable
										GameTick_t m_nNextThinkTick(offset 0x334, size 0x4, align 0x0)
											^MNetworkEnable
											^MNetworkUserGroup "LocalPlayerExclusive"
										int32 m_nSimulationTick(offset 0x338, size 0x4, align 0x4)
										uint8_t[4] unaccounted(offset 0x33c)
										CEntityIOOutput m_OnKilled(offset 0x340, size 0x28, align 0x0)
										uint32 m_fFlags(offset 0x368, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkPriority "32"
											^MNetworkUserGroup "Player"
										Vector m_vecAbsVelocity(offset 0x36c, size 0xc, align 0x4)
										CNetworkVelocityVector m_vecVelocity(offset 0x378, size 0x28, align 0x0)
											^MNetworkEnable
											^MNetworkUserGroup "LocalPlayerExclusive"
											^MNetworkPriority "32"
										uint8_t[8] unaccounted(offset 0x3a0)
										int32 m_nPushEnumCount(offset 0x3a8, size 0x4, align 0x4)
										uint8_t[4] unaccounted(offset 0x3ac)
										CCollisionProperty* m_pCollision(offset 0x3b0, size 0x8, align 0x8)
										CHandle< CBaseEntity > m_hEffectEntity(offset 0x3b8, size 0x4, align 0x4)
											^MNetworkEnable
										CHandle< CBaseEntity > m_hOwnerEntity(offset 0x3bc, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkPriority "32"
										uint32 m_fEffects(offset 0x3c0, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkChangeCallback "OnEffectsChanged"
										CHandle< CBaseEntity > m_hGroundEntity(offset 0x3c4, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkPriority "32"
											^MNetworkUserGroup "Player"
										int32 m_nGroundBodyIndex(offset 0x3c8, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkPriority "32"
											^MNetworkUserGroup "Player"
										float32 m_flFriction(offset 0x3cc, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkBitCount "8"
											^MNetworkMinValue "0"
											^MNetworkMaxValue "4"
											^MNetworkEncodeFlags "1"
											^MNetworkUserGroup "LocalPlayerExclusive"
										float32 m_flElasticity(offset 0x3d0, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkEncoder "coord"
										float32 m_flGravityScale(offset 0x3d4, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkUserGroup "LocalPlayerExclusive"
										float32 m_flTimeScale(offset 0x3d8, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkUserGroup "LocalPlayerExclusive"
										float32 m_flWaterLevel(offset 0x3dc, size 0x4, align 0x4)
											^MNetworkEnable
											^MNetworkUserGroup "Water"
											^MNetworkBitCount "8"
											^MNetworkMinValue "0"
											^MNetworkMaxValue "1"
											^MNetworkEncodeFlags "8"
										bool m_bAnimatedEveryTick(offset 0x3e0, size 0x1, align 0x1)
											^MNetworkEnable
										bool m_bDisableLowViolence(offset 0x3e1, size 0x1, align 0x1)
										uint8 m_nWaterType(offset 0x3e2, size 0x1, align 0x1)
										uint8_t[1] unaccounted(offset 0x3e3)
										int32 m_iEFlags(offset 0x3e4, size 0x4, align 0x4)
										CEntityIOOutput m_OnUser1(offset 0x3e8, size 0x28, align 0x0)
										CEntityIOOutput m_OnUser2(offset 0x410, size 0x28, align 0x0)
										CEntityIOOutput m_OnUser3(offset 0x438, size 0x28, align 0x0)
										CEntityIOOutput m_OnUser4(offset 0x460, size 0x28, align 0x0)
										int32 m_iInitialTeamNum(offset 0x488, size 0x4, align 0x4)
										GameTime_t m_flNavIgnoreUntilTime(offset 0x48c, size 0x4, align 0x0)
											^MNetworkEnable
										QAngle m_vecAngVelocity(offset 0x490, size 0xc, align 0x4)
										bool m_bNetworkQuantizeOriginAndAngles(offset 0x49c, size 0x1, align 0x1)
										bool m_bLagCompensate(offset 0x49d, size 0x1, align 0x1)
										uint8_t[2] unaccounted(offset 0x49e)
										float32 m_flOverriddenFriction(offset 0x4a0, size 0x4, align 0x4)
										CHandle< CBaseEntity > m_pBlocker(offset 0x4a4, size 0x4, align 0x4)
										float32 m_flLocalTime(offset 0x4a8, size 0x4, align 0x4)
										float32 m_flVPhysicsUpdateLocalTime(offset 0x4ac, size 0x4, align 0x4)
										BloodType m_nBloodType(offset 0x4b0, size 0x4, align 0x4)
											^MNetworkEnable
										uint8_t[4] unaccounted(offset 0x4b4)
									
								
								-----members of class CBaseModelEntity-----
									CRenderComponent* m_CRenderComponent(offset 0x4b8, size 0x8, align 0x8)
										^MNetworkEnable
										^MNetworkUserGroup "CRenderComponent"
										^MNetworkAlias "CRenderComponent"
										^MNetworkTypeAlias "CRenderComponent"
									CHitboxComponent m_CHitboxComponent(offset 0x4c0, size 0x28, align 0x0)
										^MNetworkEnable
										^MNetworkUserGroup "CHitboxComponent"
										^MNetworkAlias "CHitboxComponent"
										^MNetworkTypeAlias "CHitboxComponent"
									GameTime_t m_flDissolveStartTime(offset 0x4e8, size 0x4, align 0x0)
									uint8_t[4] unaccounted(offset 0x4ec)
									CEntityIOOutput m_OnIgnite(offset 0x4f0, size 0x28, align 0x0)
									int32 m_iViewerID(offset 0x518, size 0x4, align 0x4)
									uint8_t[68] unaccounted(offset 0x51c)
									int32 m_iTeamVisibilityBitmask(offset 0x560, size 0x4, align 0x4)
									RenderMode_t m_nRenderMode(offset 0x564, size 0x1, align 0x1)
										^MNetworkEnable
									bool m_bVisibilityDirtyFlag(offset 0x565, size 0x1, align 0x1)
									int16[10] m_iFOWTempViewerID(offset 0x566, size 0x14, align 0x2)
									RenderFx_t m_nRenderFX(offset 0x57a, size 0x1, align 0x1)
										^MNetworkEnable
									bool m_bAllowFadeInView(offset 0x57b, size 0x1, align 0x1)
									uint8_t[28] unaccounted(offset 0x57c)
									Color m_clrRender(offset 0x598, size 0x4, align 0x1)
										^MNetworkEnable
										^MNetworkChangeCallback "OnColorChanged"
									uint8_t[4] unaccounted(offset 0x59c)
									CUtlVectorEmbeddedNetworkVar< EntityRenderAttribute_t > m_vecRenderAttributes(offset 0x5a0, size 0x50, align 0x8)
										^MNetworkEnable
										^MNetworkChangeCallback "OnRenderAttributesChanged"
									bool m_bRenderToCubemaps(offset 0x5f0, size 0x1, align 0x1)
										^MNetworkEnable
									bool m_bNoInterpolate(offset 0x5f1, size 0x1, align 0x1)
										^MNetworkEnable
									uint8_t[6] unaccounted(offset 0x5f2)
									CCollisionProperty m_Collision(offset 0x5f8, size 0xb0, align 0x0)
										^MNetworkEnable
									CGlowProperty m_Glow(offset 0x6a8, size 0x58, align 0x0)
										^MNetworkEnable
									float32 m_flGlowBackfaceMult(offset 0x700, size 0x4, align 0x4)
										^MNetworkEnable
									float32 m_fadeMinDist(offset 0x704, size 0x4, align 0x4)
										^MNetworkEnable
									float32 m_fadeMaxDist(offset 0x708, size 0x4, align 0x4)
										^MNetworkEnable
									float32 m_flFadeScale(offset 0x70c, size 0x4, align 0x4)
										^MNetworkEnable
									float32 m_flShadowStrength(offset 0x710, size 0x4, align 0x4)
										^MNetworkEnable
									uint8 m_nObjectCulling(offset 0x714, size 0x1, align 0x1)
										^MNetworkEnable
									uint8_t[3] unaccounted(offset 0x715)
									int32 m_nAddDecal(offset 0x718, size 0x4, align 0x4)
										^MNetworkEnable
									Vector m_vDecalPosition(offset 0x71c, size 0xc, align 0x4)
										^MNetworkEnable
									Vector m_vDecalForwardAxis(offset 0x728, size 0xc, align 0x4)
										^MNetworkEnable
									float32 m_flDecalHealBloodRate(offset 0x734, size 0x4, align 0x4)
										^MNetworkEnable
									float32 m_flDecalHealHeightRate(offset 0x738, size 0x4, align 0x4)
										^MNetworkEnable
									uint8_t[4] unaccounted(offset 0x73c)
									CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_ConfigEntitiesToPropagateMaterialDecalsTo(offset 0x740, size 0x18, align 0x8)
										^MNetworkEnable
									CNetworkViewOffsetVector m_vecViewOffset(offset 0x758, size 0x28, align 0x0)
										^MNetworkEnable
										^MNetworkPriority "32"
										^MNetworkUserGroup "Player"
									uint8_t[8] unaccounted(offset 0x780)
								
							
							-----members of class CBaseAnimatingActivity-----
								bool m_bShouldAnimateDuringGameplayPause(offset 0x788, size 0x1, align 0x1)
									^MNetworkEnable
								bool m_bInitiallyPopulateInterpHistory(offset 0x789, size 0x1, align 0x1)
									^MNetworkEnable
								bool m_bAnimationUpdateScheduled(offset 0x78a, size 0x1, align 0x1)
								uint8_t[5] unaccounted(offset 0x78b)
								CUtlVector< CUtlString >* m_pSuppressedAnimEventTags(offset 0x790, size 0x8, align 0x8)
							
						
						-----members of class CBaseAnimatingOverlay-----
							<no members>
						
					
					-----members of class CBaseFlex-----
						CNetworkUtlVectorBase< float32 > m_flexWeight(offset 0x798, size 0x18, align 0x8)
							^MNetworkEnable
							^MNetworkBitCount "12"
							^MNetworkMinValue "0"
							^MNetworkMaxValue "1"
							^MNetworkEncodeFlags "1"
						Vector m_vLookTargetPosition(offset 0x7b0, size 0xc, align 0x4)
							^MNetworkEnable
							^MNetworkEncoder "coord"
						bool m_blinktoggle(offset 0x7bc, size 0x1, align 0x1)
							^MNetworkEnable
						uint8_t[83] unaccounted(offset 0x7bd)
						GameTime_t m_flAllowResponsesEndTime(offset 0x810, size 0x4, align 0x0)
						GameTime_t m_flLastFlexAnimationTime(offset 0x814, size 0x4, align 0x0)
						SceneEventId_t m_nNextSceneEventId(offset 0x818, size 0x4, align 0x0)
						bool m_bUpdateLayerPriorities(offset 0x81c, size 0x1, align 0x1)
						uint8_t[11] unaccounted(offset 0x81d)
					
				
				-----static members of class CBaseCombatCharacter-----
					static int32 sm_lastInteraction(server.dll + 0x3e515e4)
				
				-----members of class CBaseCombatCharacter-----
					bool m_bForceServerRagdoll(offset 0x828, size 0x1, align 0x1)
					uint8_t[7] unaccounted(offset 0x829)
					CNetworkUtlVectorBase< CHandle< CEconWearable > > m_hMyWearables(offset 0x830, size 0x18, align 0x8)
						^MNetworkEnable
					float32 m_impactEnergyScale(offset 0x848, size 0x4, align 0x4)
					HitGroup_t m_LastHitGroup(offset 0x84c, size 0x4, align 0x4)
					bool m_bApplyStressDamage(offset 0x850, size 0x1, align 0x1)
					uint8_t[71] unaccounted(offset 0x851)
					int32 m_iDamageCount(offset 0x898, size 0x4, align 0x4)
					uint8_t[4] unaccounted(offset 0x89c)
					CUtlVector< RelationshipOverride_t >* m_pVecRelationships(offset 0x8a0, size 0x8, align 0x8)
					CUtlSymbolLarge m_strRelationships(offset 0x8a8, size 0x8, align 0x8)
					Hull_t m_eHull(offset 0x8b0, size 0x4, align 0x4)
					uint32 m_nNavHullIdx(offset 0x8b4, size 0x4, align 0x4)
				
			
			-----members of class NextBotCombatCharacter-----
				uint8_t[136] unaccounted(offset 0x8b8)
				uint8 m_nLod(offset 0x940, size 0x1, align 0x1)
					^MNetworkEnable
				bool m_didModelChange(offset 0x941, size 0x1, align 0x1)
				uint8_t[6] unaccounted(offset 0x942)
			
		
		-----members of class CDOTA_BaseNPC-----
			uint8_t[32] unaccounted(offset 0x948)
			bool m_bPledgedOfrenda(offset 0x968, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x969)
			uint32 m_iUnitType(offset 0x96c, size 0x4, align 0x4)
			Color m_colorGemColor(offset 0x970, size 0x4, align 0x1)
			bool m_bHasColorGem(offset 0x974, size 0x1, align 0x1)
			bool m_bSelectionRingVisible(offset 0x975, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[10] unaccounted(offset 0x976)
			CUtlSymbolLarge m_iszBaseClass(offset 0x980, size 0x8, align 0x8)
			int32 m_iStartingMaxHealth(offset 0x988, size 0x4, align 0x4)
			int32 m_iStartingMaxMana(offset 0x98c, size 0x4, align 0x4)
			int32 m_iStartingMana(offset 0x990, size 0x4, align 0x4)
			int32 m_iCurrentLevel(offset 0x994, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			float32 m_flMana(offset 0x998, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "20"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "65536"
			float32 m_flBaseMaxMana(offset 0x99c, size 0x4, align 0x4)
			float32 m_flMaxMana(offset 0x9a0, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "20"
				^MNetworkMinValue "0"
				^MNetworkMaxValue "65536"
			float32 m_flManaThinkRegen(offset 0x9a4, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "14"
				^MNetworkMinValue "-50"
				^MNetworkMaxValue "500"
			float32 m_flBaseMaxHealth(offset 0x9a8, size 0x4, align 0x4)
			float32 m_flHealthThinkRegen(offset 0x9ac, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "18"
				^MNetworkMinValue "-100"
				^MNetworkMaxValue "1000"
			int32 m_nHealthBarOffsetOverride(offset 0x9b0, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_nHealthBarOffset(offset 0x9b4, size 0x4, align 0x4)
			bool m_bIsPhantom(offset 0x9b8, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bIsAncient(offset 0x9b9, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bIsBossCreature(offset 0x9ba, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bIsNeutralUnitType(offset 0x9bb, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bAutoAttacksByDefault(offset 0x9bc, size 0x1, align 0x1)
			bool m_bIsSummoned(offset 0x9bd, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bCanBeDominated(offset 0x9be, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bCanRespawn(offset 0x9bf, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bIsClone(offset 0x9c0, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bConsideredHero(offset 0x9c1, size 0x1, align 0x1)
			bool m_bUsesConstantGesture(offset 0x9c2, size 0x1, align 0x1)
			bool m_bIsPlayingSingleForcedActivity(offset 0x9c3, size 0x1, align 0x1)
			bool m_bHasUpgradeableAbilities(offset 0x9c4, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[3] unaccounted(offset 0x9c5)
			int32 m_iBKBChargesUsed(offset 0x9c8, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iAeonChargesUsed(offset 0x9cc, size 0x4, align 0x4)
				^MNetworkEnable
			GameTime_t m_flRefresherUseTime(offset 0x9d0, size 0x4, align 0x0)
				^MNetworkEnable
			float32 m_flRefresherLastCooldown(offset 0x9d4, size 0x4, align 0x4)
				^MNetworkEnable
			GameTime_t m_flLastDealtDamageTime(offset 0x9d8, size 0x4, align 0x0)
				^MNetworkEnable
			int32 m_iBotDebugData(offset 0x9dc, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bIsMoving(offset 0x9e0, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[415] unaccounted(offset 0x9e1)
			float32 m_flChannelMultiplier(offset 0xb80, size 0x4, align 0x4)
			bool m_bCanUseWards(offset 0xb84, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bCanUseAllItems(offset 0xb85, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[2] unaccounted(offset 0xb86)
			PlayerID_t m_iLastAbilityPlayer(offset 0xb88, size 0x4, align 0x0)
			bool m_bIsPhantomBlocker(offset 0xb8c, size 0x1, align 0x1)
			bool m_bBlocksCreepSpawn(offset 0xb8d, size 0x1, align 0x1)
			bool m_bCanSellItems(offset 0xb8e, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0xb8f)
			CHandle< CDOTA_NeutralSpawner > m_hNeutralSpawner(offset 0xb90, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bTrackDamageTaken(offset 0xb94, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0xb95)
			GameTick_t m_nNextRegenThink(offset 0xb98, size 0x4, align 0x0)
			GameTick_t m_nNextModifierThink(offset 0xb9c, size 0x4, align 0x0)
			GameTick_t m_nNextModelScaleThink(offset 0xba0, size 0x4, align 0x0)
			GameTick_t m_nNextUnitThink(offset 0xba4, size 0x4, align 0x0)
			float32 m_flManaRegen(offset 0xba8, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "18"
				^MNetworkMinValue "-100"
				^MNetworkMaxValue "1000"
			float32 m_flHealthRegen(offset 0xbac, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkBitCount "18"
				^MNetworkMinValue "-100"
				^MNetworkMaxValue "1000"
			int64 m_nTotalDamageTaken(offset 0xbb0, size 0x8, align 0x8)
				^MNetworkEnable
				^MNetworkPriority "32"
			float32 m_flHealthRegenCounter(offset 0xbb8, size 0x4, align 0x4)
			float32 m_flManaRegenCounter(offset 0xbbc, size 0x4, align 0x4)
			float32 m_flAccumulatedHeal(offset 0xbc0, size 0x4, align 0x4)
			int32 m_iBaseAttackSpeed(offset 0xbc4, size 0x4, align 0x4)
			int32 m_iBaseDamageMin(offset 0xbc8, size 0x4, align 0x4)
			int32 m_iBaseDamageMax(offset 0xbcc, size 0x4, align 0x4)
			int32 m_iAttackRange(offset 0xbd0, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iAttackRangeBuffer(offset 0xbd4, size 0x4, align 0x4)
			int32 m_iMoveSpeed(offset 0xbd8, size 0x4, align 0x4)
				^MNetworkEnable
			float32 m_flTurnRate(offset 0xbdc, size 0x4, align 0x4)
			int32 m_iHasAggressiveStance(offset 0xbe0, size 0x4, align 0x4)
			bool m_bInAggressiveStance(offset 0xbe4, size 0x1, align 0x1)
			bool m_bInInjuredAggressiveStance(offset 0xbe5, size 0x1, align 0x1)
			uint8_t[2] unaccounted(offset 0xbe6)
			float32 m_flFollowRange(offset 0xbe8, size 0x4, align 0x4)
			int32 m_iAcquisitionRange(offset 0xbec, size 0x4, align 0x4)
			float32 m_flAttackAnimationPoint(offset 0xbf0, size 0x4, align 0x4)
			float32 m_flHullRadius(offset 0xbf4, size 0x4, align 0x4)
			float32 m_flCollisionPadding(offset 0xbf8, size 0x4, align 0x4)
			GameTime_t m_flTauntCooldown(offset 0xbfc, size 0x4, align 0x0)
				^MNetworkEnable
			GameTime_t m_flTauntCooldown2(offset 0xc00, size 0x4, align 0x0)
				^MNetworkEnable
			float32 m_fRevealRadius(offset 0xc04, size 0x4, align 0x4)
				^MNetworkEnable
			float32 m_flProjectileCollisionSize(offset 0xc08, size 0x4, align 0x4)
			ObstructionRelationshipClass_t m_ObstructionRelationshipClass(offset 0xc0c, size 0x4, align 0x4)
			CUtlSymbolLarge m_iszParticleFolder(offset 0xc10, size 0x8, align 0x8)
			CUtlSymbolLarge m_iszGameSoundsFile(offset 0xc18, size 0x8, align 0x8)
			CUtlSymbolLarge m_iszVoiceFile(offset 0xc20, size 0x8, align 0x8)
			CUtlSymbolLarge m_iszSoundSet(offset 0xc28, size 0x8, align 0x8)
			CUtlSymbolLarge m_iszSelectionGroup(offset 0xc30, size 0x8, align 0x8)
			CUtlSymbolLarge m_iszAnimationModifier(offset 0xc38, size 0x8, align 0x8)
			uint8_t[8] unaccounted(offset 0xc40)
			float32 m_flBaseAttackTime(offset 0xc48, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iDayTimeVisionRange(offset 0xc4c, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iNightTimeVisionRange(offset 0xc50, size 0x4, align 0x4)
				^MNetworkEnable
			float32 m_fBotAttackDesire(offset 0xc54, size 0x4, align 0x4)
			int32 m_iUnitRelationshipClass(offset 0xc58, size 0x4, align 0x4)
			float32 m_flPhysicalArmorValue(offset 0xc5c, size 0x4, align 0x4)
				^MNetworkEnable
			float32 m_flMagicalResistanceValue(offset 0xc60, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iTeamName(offset 0xc64, size 0x4, align 0x4)
			int32 m_iAttackCapabilities(offset 0xc68, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			int32 m_iSpecialAbility(offset 0xc6c, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			int32 m_iMoveCapabilities(offset 0xc70, size 0x4, align 0x4)
			int32 m_iOriginalAttackCapabilities(offset 0xc74, size 0x4, align 0x4)
			int32 m_iXPBounty(offset 0xc78, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iXPBountyExtra(offset 0xc7c, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iGoldBountyMin(offset 0xc80, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iGoldBountyMax(offset 0xc84, size 0x4, align 0x4)
				^MNetworkEnable
			PlayerID_t m_nFarmClaimPlayerID(offset 0xc88, size 0x4, align 0x0)
			PlayerID_t m_nPlayerOwnerID(offset 0xc8c, size 0x4, align 0x0)
				^MNetworkEnable
			CUtlSymbolLarge[35] m_iszAbilityList(offset 0xc90, size 0x118, align 0x8)
			int32 m_iAttackDamageType(offset 0xda8, size 0x4, align 0x4)
			bool m_bIsIdle(offset 0xdac, size 0x1, align 0x1)
			bool m_bHold(offset 0xdad, size 0x1, align 0x1)
			bool m_bWasKilledPassively(offset 0xdae, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0xdaf)
			CountdownTimer m_AngerTimer(offset 0xdb0, size 0x18, align 0x0)
			CountdownTimer m_AlertTimer(offset 0xdc8, size 0x18, align 0x0)
			CHandle< CBaseEntity > m_hAngerTarget(offset 0xde0, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_hAlertTarget(offset 0xde4, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_hForceAttackTarget(offset 0xde8, size 0x4, align 0x4)
			bool m_bAllowAllyForceAttack(offset 0xdec, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0xded)
			Vector m_vTargetLastKnownPosition(offset 0xdf0, size 0xc, align 0x4)
			uint8_t[28] unaccounted(offset 0xdfc)
			GameTime_t m_flLastDamageTime(offset 0xe18, size 0x4, align 0x0)
				^MNetworkEnable
			GameTime_t m_flLastAttackTime(offset 0xe1c, size 0x4, align 0x0)
				^MNetworkEnable
			GameTime_t m_flTimeSinceLastAbilityNag(offset 0xe20, size 0x4, align 0x0)
			GameTime_t m_flLastTeleportTime(offset 0xe24, size 0x4, align 0x0)
			uint64 m_nUnitState64(offset 0xe28, size 0x8, align 0x8)
				^MNetworkEnable
			GameTime_t[15] m_vLastVisibilityChange(offset 0xe30, size 0x3c, align 0x4)
			uint8_t[28] unaccounted(offset 0xe6c)
			bool m_bFirstSpawn(offset 0xe88, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0xe89)
			CHandle< CBaseEntity > m_hAttackTarget(offset 0xe8c, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_hAggroTarget(offset 0xe90, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_hCommandAttackTarget(offset 0xe94, size 0x4, align 0x4)
			CUtlSymbolLarge m_iszOriginalModel(offset 0xe98, size 0x8, align 0x8)
			int8 m_nUnitModelVariant(offset 0xea0, size 0x1, align 0x1)
				^MNetworkEnable
			int8 m_nUnitModelVariantCount(offset 0xea1, size 0x1, align 0x1)
			bool m_bPseudoQueueOrders(offset 0xea2, size 0x1, align 0x1)
			bool m_bCastLocked(offset 0xea3, size 0x1, align 0x1)
			uint8_t[28] unaccounted(offset 0xea4)
			GameTime_t m_flAttackRegulator(offset 0xec0, size 0x4, align 0x0)
			float32 m_flTimeDisparityTolerance(offset 0xec4, size 0x4, align 0x4)
			GameTime_t m_fAttackPhaseEndTime(offset 0xec8, size 0x4, align 0x0)
			GameTime_t m_flPositionUpdateTime(offset 0xecc, size 0x4, align 0x0)
			Vector m_vLastPositionSent(offset 0xed0, size 0xc, align 0x4)
			int32 m_iTaggedAsVisibleByTeam(offset 0xedc, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			uint64 m_iIsControllableByPlayer64(offset 0xee0, size 0x8, align 0x8)
				^MNetworkEnable
			PlayerID_t m_nControllingPlayerID(offset 0xee8, size 0x4, align 0x0)
			bool m_bRunAIWhenControllableByPlayer(offset 0xeec, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0xeed)
			CHandle< CBaseEntity >[35] m_hAbilities(offset 0xef0, size 0x8c, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "Abilities"
				^MNetworkPriority "32"
			uint8_t[4] unaccounted(offset 0xf7c)
			CUtlVector< CHandle< CBaseEntity > > m_associatedEmptyAbilities(offset 0xf80, size 0x18, align 0x8)
			CHandle< CBaseEntity > m_hActiveAbility(offset 0xf98, size 0x4, align 0x4)
			Vector m_vCursorLocation(offset 0xf9c, size 0xc, align 0x4)
			CHandle< CBaseEntity > m_hCursorTarget(offset 0xfa8, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_hOriginalCursorTarget(offset 0xfac, size 0x4, align 0x4)
			bool m_bCursorTargetingNothing(offset 0xfb0, size 0x1, align 0x1)
			uint8_t[7] unaccounted(offset 0xfb1)
			CDOTA_ModifierManager m_ModifierManager(offset 0xfb8, size 0x320, align 0x0)
				^MNetworkEnable
			uint8_t[8] unaccounted(offset 0x12d8)
			float32 m_flInvisibilityLevel(offset 0x12e0, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x12e4)
			CUtlSymbolLarge m_iszMapUnitName(offset 0x12e8, size 0x8, align 0x8)
			CUtlSymbolLarge m_iszUnitName(offset 0x12f0, size 0x8, align 0x8)
				^MNetworkEnable
				^MNetworkDisable
			int32 m_iUnitNameIndex(offset 0x12f8, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iDamageMin(offset 0x12fc, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iDamageMax(offset 0x1300, size 0x4, align 0x4)
				^MNetworkEnable
			int32 m_iDamageBonus(offset 0x1304, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bIsWaitingToSpawn(offset 0x1308, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[3] unaccounted(offset 0x1309)
			int32 m_iLeashType(offset 0x130c, size 0x4, align 0x4)
			int32 m_iAggroType(offset 0x1310, size 0x4, align 0x4)
			bool m_bCreepIgnoreAggro(offset 0x1314, size 0x1, align 0x1)
			bool m_bCreepFirstWave(offset 0x1315, size 0x1, align 0x1)
			bool m_bIsIllusion(offset 0x1316, size 0x1, align 0x1)
				^MNetworkEnable
			uint8 m_nUnitLabelIndex(offset 0x1317, size 0x1, align 0x1)
				^MNetworkEnable
			CUtlString m_szScaleset(offset 0x1318, size 0x8, align 0x8)
				^MNetworkEnable
			CUtlString m_szUnitLabel(offset 0x1320, size 0x8, align 0x8)
				^MNetworkEnable
			CUtlString m_strAnimationModifier(offset 0x1328, size 0x8, align 0x8)
			uint8_t[8] unaccounted(offset 0x1330)
			CHandle< CBaseEntity > m_hOwnerNPC(offset 0x1338, size 0x4, align 0x4)
				^MNetworkEnable
			uint8_t[4] unaccounted(offset 0x133c)
			CLocomotionBase* m_locomotor(offset 0x1340, size 0x8, align 0x8)
			IBody* m_body(offset 0x1348, size 0x8, align 0x8)
			bool m_bNeverMoveToClearSpace(offset 0x1350, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x1351)
			CHandle< CBaseEntity > m_hGoalEntity(offset 0x1354, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkUserGroup "SpectatorsOnly"
			bool m_bMustReachEachGoalEntity(offset 0x1358, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x1359)
			Vector m_vInitialGoalPosition(offset 0x135c, size 0xc, align 0x4)
			uint8_t[24] unaccounted(offset 0x1368)
			CUnitOrders m_CurrentQueuedOrder(offset 0x1380, size 0x40, align 0x0)
			uint8_t[24] unaccounted(offset 0x13c0)
			CDOTA_UnitInventory m_Inventory(offset 0x13d8, size 0xd8, align 0x0)
				^MNetworkEnable
			CHandle< CBaseEntity > m_hItemToDrop(offset 0x14b0, size 0x4, align 0x4)
			DOTA_SHOP_TYPE m_iCurShop(offset 0x14b4, size 0x4, align 0x4)
				^MNetworkEnable
			CHandle< CBaseEntity > m_hLastNearShop(offset 0x14b8, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x14bc)
			CUtlSymbolLarge m_szCurShopEntName(offset 0x14c0, size 0x8, align 0x8)
				^MNetworkEnable
			bool m_bHasInventory(offset 0x14c8, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x14c9)
			float32 m_flBaselineModelScale(offset 0x14cc, size 0x4, align 0x4)
			float32 m_fModelScaleMultiplier(offset 0x14d0, size 0x4, align 0x4)
			float32 m_fModelScaleMultiplierChangeStart(offset 0x14d4, size 0x4, align 0x4)
			GameTime_t m_fModelScaleMultiplierChangeTime(offset 0x14d8, size 0x4, align 0x0)
			float32 m_flPreviousModelScale(offset 0x14dc, size 0x4, align 0x4)
			float32 m_fMaxModelScaleMultiplier(offset 0x14e0, size 0x4, align 0x4)
			bool m_bIsCamped(offset 0x14e4, size 0x1, align 0x1)
			bool m_bIsReturningHome(offset 0x14e5, size 0x1, align 0x1)
			bool m_bWantsToFlee(offset 0x14e6, size 0x1, align 0x1)
			bool m_bWakesNeutrals(offset 0x14e7, size 0x1, align 0x1)
			bool m_bNeutralIgnore(offset 0x14e8, size 0x1, align 0x1)
			bool m_bIdleAcquire(offset 0x14e9, size 0x1, align 0x1)
			bool m_bCanFollowUnseenUnits(offset 0x14ea, size 0x1, align 0x1)
			bool m_bExpired(offset 0x14eb, size 0x1, align 0x1)
			Vector m_vCurrentMovementOrderDestination(offset 0x14ec, size 0xc, align 0x4)
			Vector m_vPreviousMovementOrderDestination(offset 0x14f8, size 0xc, align 0x4)
			Vector m_vResumePreviousMovementRequestLocation(offset 0x1504, size 0xc, align 0x4)
			bool m_bCurrentOrderIsMovement(offset 0x1510, size 0x1, align 0x1)
			bool m_bPreviousOrderIsMovement(offset 0x1511, size 0x1, align 0x1)
			bool m_bResumePreviousMovement(offset 0x1512, size 0x1, align 0x1)
			bool m_bIsPatrolling(offset 0x1513, size 0x1, align 0x1)
			GameTime_t m_flCreationTime(offset 0x1514, size 0x4, align 0x0)
			bool m_bTargetMovedOutOfRange(offset 0x1518, size 0x1, align 0x1)
			bool m_bChaseTargetMoves(offset 0x1519, size 0x1, align 0x1)
			uint8_t[2] unaccounted(offset 0x151a)
			float32 m_flChaseDistance(offset 0x151c, size 0x4, align 0x4)
			CHandle< CBaseEntity > m_hChaseEntity(offset 0x1520, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x1524)
			CUtlVector< CUtlSymbol > m_ActivityModifiers(offset 0x1528, size 0x18, align 0x8)
			bool m_bActivityModifiersDirty(offset 0x1540, size 0x1, align 0x1)
			uint8_t[7] unaccounted(offset 0x1541)
			CUtlVector< CUtlSymbol > m_ActivityModifiersFromScript(offset 0x1548, size 0x18, align 0x8)
			GameTime_t m_flBlinkDaggerTime(offset 0x1560, size 0x4, align 0x0)
			float32 m_flAdditionalBattleMusicWeight(offset 0x1564, size 0x4, align 0x4)
			bool m_bStolenScepter(offset 0x1568, size 0x1, align 0x1)
				^MNetworkEnable
			bool m_bHasScepterCached(offset 0x1569, size 0x1, align 0x1)
			bool m_bHasShardCached(offset 0x156a, size 0x1, align 0x1)
			uint8_t[5] unaccounted(offset 0x156b)
			CLocalNPCObstructionsCache m_LocalNPCObstructionsCache(offset 0x1570, size 0x20, align 0x0)
			uint8_t[32] unaccounted(offset 0x1590)
			GameTime_t m_flCritBashFailUntil(offset 0x15b0, size 0x4, align 0x0)
			float32 m_flAttackTimeLostToLastTick(offset 0x15b4, size 0x4, align 0x4)
			float32 m_flAttackTimeAtLastTick(offset 0x15b8, size 0x4, align 0x4)
			float32 m_flCompanionDistance(offset 0x15bc, size 0x4, align 0x4)
			bool m_bIsPartyCompanion(offset 0x15c0, size 0x1, align 0x1)
			bool m_bCanPartyCompanionAttack(offset 0x15c1, size 0x1, align 0x1)
			uint8_t[2] unaccounted(offset 0x15c2)
			CHandle< CBaseEntity > m_CompanionEntity(offset 0x15c4, size 0x4, align 0x4)
			bool m_bFacePlayer(offset 0x15c8, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x15c9)
			GameTime_t m_flLastIdleChangeTime(offset 0x15cc, size 0x4, align 0x0)
			bool m_bUseNeutralCreepBehavior(offset 0x15d0, size 0x1, align 0x1)
			uint8_t[39] unaccounted(offset 0x15d1)
			bool m_bHasBuiltWearableSpawnList(offset 0x15f8, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x15f9)
			GameTick_t[15] m_nFoWFadeStartTime(offset 0x15fc, size 0x3c, align 0x4)
			int32 m_nFOWVisibilityRadius(offset 0x1638, size 0x4, align 0x4)
			Vector m_vFOWOriginOverride(offset 0x163c, size 0xc, align 0x4)
			CUtlString m_strLastKillerAbility(offset 0x1648, size 0x8, align 0x8)
			int32 m_anglediff(offset 0x1650, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			int32 m_NetworkActivity(offset 0x1654, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			int32 m_NetworkSequenceIndex(offset 0x1658, size 0x4, align 0x4)
				^MNetworkEnable
				^MNetworkPriority "32"
			bool m_bShouldDoFlyHeightVisual(offset 0x165c, size 0x1, align 0x1)
				^MNetworkEnable
			uint8_t[3] unaccounted(offset 0x165d)
			float32 m_flStartSequenceCycle(offset 0x1660, size 0x4, align 0x4)
				^MNetworkEnable
			bool m_bMidLoading(offset 0x1664, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x1665)
			CHandle< CDOTA_ScriptedSpawner > m_hTutorialSpawner(offset 0x1668, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x166c)
			CountdownTimer m_AngerCooldownTimer(offset 0x1670, size 0x18, align 0x0)
			int32 m_iProjectileMoveSpeed(offset 0x1688, size 0x4, align 0x4)
			uint8_t[4] unaccounted(offset 0x168c)
			CUtlSymbolLarge m_iszAutoAttackRangedParticle(offset 0x1690, size 0x8, align 0x8)
			int32 m_nPoseParameterTurn(offset 0x1698, size 0x4, align 0x4)
			int32 m_nPoseParameterRun(offset 0x169c, size 0x4, align 0x4)
			float32 m_flLean(offset 0x16a0, size 0x4, align 0x4)
			float32 m_flRun(offset 0x16a4, size 0x4, align 0x4)
			char[256] m_CustomHealthLabel(offset 0x16a8, size 0x100, align 0x1)
				^MNetworkEnable
			Color m_CustomHealthLabelColor(offset 0x17a8, size 0x4, align 0x1)
				^MNetworkEnable
			item_definition_index_t m_nWearableDefIndex(offset 0x17ac, size 0x4, align 0x0)
			int8 m_nArcanaLevel(offset 0x17b0, size 0x1, align 0x1)
			int8 m_nDefaultArcanaLevel(offset 0x17b1, size 0x1, align 0x1)
			Color m_defaultColorGemColor(offset 0x17b2, size 0x4, align 0x1)
			bool m_bDisableDamageDisplay(offset 0x17b6, size 0x1, align 0x1)
			uint8_t[1] unaccounted(offset 0x17b7)
			Color m_gibTintColor(offset 0x17b8, size 0x4, align 0x1)
			float32 m_flPathfindingSearchDepthScale(offset 0x17bc, size 0x4, align 0x4)
			CUtlVector< int32 > m_ActivitiesStarted(offset 0x17c0, size 0x18, align 0x8)
			CHandle< CBaseEntity > m_hIllusionOriginal(offset 0x17d8, size 0x4, align 0x4)
			CHandle< CDOTA_BaseNPC > m_hDirectionalRangedFakeTarget(offset 0x17dc, size 0x4, align 0x4)
			uint8_t[40] unaccounted(offset 0x17e0)
			bool m_bShouldComputeRemainingPathLength(offset 0x1808, size 0x1, align 0x1)
			uint8_t[3] unaccounted(offset 0x1809)
			float32 m_flRemainingPathLength(offset 0x180c, size 0x4, align 0x4)
		
	
	-----static members of class CDOTA_BaseNPC_Building-----
		static GameTime_t[15] m_fLastAttackWarnTimers(server.dll + 0x3f02888)
	
	-----members of class CDOTA_BaseNPC_Building-----
		int32 m_iDamageLevel(offset 0x1810, size 0x4, align 0x4)
			^MNetworkEnable
		uint8_t[4] unaccounted(offset 0x1814)
		CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_nFXIndex(offset 0x1818, size 0x8, align 0x8)
			^MNetworkEnable
		CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_nFXIndexDestruction(offset 0x1820, size 0x8, align 0x8)
			^MNetworkEnable
		QAngle m_angInitialAngles(offset 0x1828, size 0xc, align 0x4)
			^MNetworkEnable
		HSequence m_hHeroStatueSequence(offset 0x1834, size 0x4, align 0x0)
			^MNetworkEnable
		HSequence m_hConstantLayerSequence(offset 0x1838, size 0x4, align 0x0)
			^MNetworkEnable
		float32 m_fHeroStatueCycle(offset 0x183c, size 0x4, align 0x4)
			^MNetworkEnable
		int32 m_iHeroStatueStatusEffectIndex(offset 0x1840, size 0x4, align 0x4)
			^MNetworkEnable
		bool m_bHeroStatue(offset 0x1844, size 0x1, align 0x1)
			^MNetworkEnable
		bool m_bBattleCup(offset 0x1845, size 0x1, align 0x1)
			^MNetworkEnable
		char[32] m_HeroStatueInscription(offset 0x1846, size 0x20, align 0x1)
			^MNetworkEnable
		uint8_t[2] unaccounted(offset 0x1866)
		PlayerID_t m_iHeroStatueOwnerPlayerID(offset 0x1868, size 0x4, align 0x0)
			^MNetworkEnable
		Color m_ParticleTintColor(offset 0x186c, size 0x4, align 0x1)
			^MNetworkEnable
		CUtlSymbolLarge m_sDestroySnd(offset 0x1870, size 0x8, align 0x8)
		CUtlSymbolLarge m_sDmgLvl1Snd(offset 0x1878, size 0x8, align 0x8)
		CUtlSymbolLarge m_sDmgLvl2Snd(offset 0x1880, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszLinkedUnit(offset 0x1888, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszAmbientEffectName(offset 0x1890, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszDestructionEffectName(offset 0x1898, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszDamageModelLevel1(offset 0x18a0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszDamageModelLevel2(offset 0x18a8, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszDamageEffectLevel1(offset 0x18b0, size 0x8, align 0x8)
		CUtlSymbolLarge m_iszDamageEffectLevel2(offset 0x18b8, size 0x8, align 0x8)
		float32 m_flDamageThresholdLevel1(offset 0x18c0, size 0x4, align 0x4)
		float32 m_flDamageThresholdLevel2(offset 0x18c4, size 0x4, align 0x4)
		bool m_bVulnerableOnCreepSpawn(offset 0x18c8, size 0x1, align 0x1)
		bool m_bHasOverriddenDestructionEffect(offset 0x18c9, size 0x1, align 0x1)
		uint8_t[2] unaccounted(offset 0x18ca)
		int32 m_iUpgradeIdentifier(offset 0x18cc, size 0x4, align 0x4)
		int32 m_iInvulnCount(offset 0x18d0, size 0x4, align 0x4)
		int32 m_iPlayerOwner(offset 0x18d4, size 0x4, align 0x4)
		DOTA_LANE m_Lane(offset 0x18d8, size 0x4, align 0x4)
		float32[2] m_fAmountAlongLane(offset 0x18dc, size 0x8, align 0x4)
		Vector m_vOverrideInitialAngles(offset 0x18e4, size 0xc, align 0x4)
		Vector m_vOverrideInitialAnglesBG(offset 0x18f0, size 0xc, align 0x4)
		int32 m_nOverrideInitialAngles(offset 0x18fc, size 0x4, align 0x4)
		CountdownTimer m_IdleRareAnimationTime(offset 0x1900, size 0x18, align 0x0)
		FowCustomTeams_t m_nFoWTeam(offset 0x1918, size 0x4, align 0x4)
			^MNetworkEnable
		uint8_t[4] unaccounted(offset 0x191c)
	

-----members of class CDOTA_BaseNPC_CustomEffigy-----
	uint32 m_unStatusEffectIndex(offset 0x1920, size 0x4, align 0x4)
	CHandle< CBaseEntity > m_hPedestal(offset 0x1924, size 0x4, align 0x4)

