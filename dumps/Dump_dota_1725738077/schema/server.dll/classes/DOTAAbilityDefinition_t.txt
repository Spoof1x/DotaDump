|||||||||||||||||||| DUMPED BY SPOOF1X(prog. Liberalist) ||||||||||||||||||||
 class DOTAAbilityDefinition_t (size: 0x258 bytes, project "server", binding @ server.dll + 0x39f5b70, scope "server.dll")

-----members of class DOTAAbilityDefinition_t-----
	char* m_pszAbilityName(offset 0x0, size 0x8, align 0x8)
	char* m_pszTextureName(offset 0x8, size 0x8, align 0x8)
	char* m_pszSharedCooldownName(offset 0x10, size 0x8, align 0x8)
	char* m_pszKeyOverride(offset 0x18, size 0x8, align 0x8)
	char* m_pszItemRecipeName(offset 0x20, size 0x8, align 0x8)
	char* m_pszLinkedAbility(offset 0x28, size 0x8, align 0x8)
	int32 m_castActivity(offset 0x30, size 0x4, align 0x4)
	DotaGestureSlot_t m_castActivityGestureSlot(offset 0x34, size 0x4, align 0x4)
	KeyValues* m_pKVData(offset 0x38, size 0x8, align 0x8)
	AbilityID_t m_iAbilityID(offset 0x40, size 0x4, align 0x0)
	int32 m_iAbilityType(offset 0x44, size 0x4, align 0x4)
	uint64 m_iAbilityBehavior(offset 0x48, size 0x8, align 0x8)
	int32 m_iAbilityTargetTeam(offset 0x50, size 0x4, align 0x4)
	int32 m_iAbilityTargetType(offset 0x54, size 0x4, align 0x4)
	int32 m_iAbilityTargetFlags(offset 0x58, size 0x4, align 0x4)
	int32 m_iAbilityDamageType(offset 0x5c, size 0x4, align 0x4)
	int32 m_iAbilityImmunityType(offset 0x60, size 0x4, align 0x4)
	int32 m_iAbilityDispellableType(offset 0x64, size 0x4, align 0x4)
	int32 m_iFightRecapLevel(offset 0x68, size 0x4, align 0x4)
	int32 m_iTokenTier(offset 0x6c, size 0x4, align 0x4)
	item_definition_index_t m_iAssociatedConsumableItemDef(offset 0x70, size 0x4, align 0x0)
	uint32 m_nRequiredEffectsMask(offset 0x74, size 0x4, align 0x4)
	int32 m_iAssociatedEventID(offset 0x78, size 0x4, align 0x4)
	int32 m_iMaxLevel(offset 0x7c, size 0x4, align 0x4)
	int32 m_iItemBaseLevel(offset 0x80, size 0x4, align 0x4)
	float32 m_flItemLevelByGameTime(offset 0x84, size 0x4, align 0x4)
	int32 m_iItemCost(offset 0x88, size 0x4, align 0x4)
	int32 m_iItemInitialCharges(offset 0x8c, size 0x4, align 0x4)
	int32 m_iItemNeutralTierIndex(offset 0x90, size 0x4, align 0x4)
	int32 m_iItemStockMax(offset 0x94, size 0x4, align 0x4)
	float32 m_fItemStockTime(offset 0x98, size 0x4, align 0x4)
	uint8_t[4] unaccounted(offset 0x9c)
	int32* m_pItemShopTagKeys(offset 0xa0, size 0x8, align 0x8)
	AbilityID_t m_nRecipeResultAbilityID(offset 0xa8, size 0x4, align 0x0)
	uint8_t[4] unaccounted(offset 0xac)
	CUtlVector< AbilityID_t > m_vecItemCombinesInto(offset 0xb0, size 0x18, align 0x8)
	CUtlVector< ItemRecipe_t > m_vecItemRecipes(offset 0xc8, size 0x18, align 0x8)
	int32 m_nUpgradeGoal(offset 0xe0, size 0x4, align 0x4)
	ItemQuality_t m_ItemQuality(offset 0xe4, size 0x4, align 0x4)
	float32 m_flModifierValue(offset 0xe8, size 0x4, align 0x4)
	float32 m_flModifierValueBonus(offset 0xec, size 0x4, align 0x4)
	CUtlVector< CUtlString > m_InvalidHeroes(offset 0xf0, size 0x18, align 0x8)
	uint8_t[204] unaccounted(offset 0x108)
	bool m_bHasScepterUpgrade(offset 0x1d4, size 0x1, align 0x1)
	bool m_bHasShardUpgrade(offset 0x1d5, size 0x1, align 0x1)
	bool m_bSharedWithTeammates(offset 0x1d6, size 0x1, align 0x1)
	uint8_t[1] unaccounted(offset 0x1d7)
	int32 m_nCastRangeBuffer(offset 0x1d8, size 0x4, align 0x4)
	int32 m_nSpecialAbilities(offset 0x1dc, size 0x4, align 0x4)
	DOTASpecialAbility_t* m_pSpecialAbilities(offset 0x1e0, size 0x8, align 0x8)
	CUtlVector< DOTAOutgoingBonus_t > m_OutgoingBonuses(offset 0x1e8, size 0x18, align 0x8)
	char* m_pModelName(offset 0x200, size 0x8, align 0x8)
	char* m_pModelAlternateName(offset 0x208, size 0x8, align 0x8)
	char* m_pEffectName(offset 0x210, size 0x8, align 0x8)
	char* m_pPingOverrideText(offset 0x218, size 0x8, align 0x8)
	char* m_pszRequiredCustomShopName(offset 0x220, size 0x8, align 0x8)
	char* m_pszLinkedScepterAbility(offset 0x228, size 0x8, align 0x8)
	char* m_pszLinkedShardAbility(offset 0x230, size 0x8, align 0x8)
	char* m_pszDependentOnAbility(offset 0x238, size 0x8, align 0x8)
	int32 m_nKillToastOverride(offset 0x240, size 0x4, align 0x4)
	int32 m_iLevelsBetweenUpgrades(offset 0x244, size 0x4, align 0x4)
	int32 m_iRequiredLevel(offset 0x248, size 0x4, align 0x4)
	bitfield {
		uint8_t m_bIsItem : 1(offset 0x24c, mask = 0x1)
		uint8_t m_bItemIsRecipe : 1(offset 0x24c, mask = 0x2)
		uint8_t m_bItemIsRecipeGenerated : 1(offset 0x24c, mask = 0x4)
		uint8_t m_bItemRecipeConsumesCharges : 1(offset 0x24c, mask = 0x8)
		uint8_t m_bItemAvailableAtSecretShop : 1(offset 0x24c, mask = 0x10)
		uint8_t m_bItemAvailableAtGlobalShop : 1(offset 0x24c, mask = 0x20)
		uint8_t m_bItemAvailableAtSideShop : 1(offset 0x24c, mask = 0x40)
		uint8_t m_bItemAvailableAtCustomShop : 1(offset 0x24c, mask = 0x80)
		uint8_t m_bItemIsPureSupport : 1(offset 0x24d, mask = 0x1)
		uint8_t m_bItemIsPurchasable : 1(offset 0x24d, mask = 0x2)
		uint8_t m_bItemIsUpgradeable : 1(offset 0x24d, mask = 0x4)
		uint8_t m_bItemStackable : 1(offset 0x24d, mask = 0x8)
		uint8_t m_bDisplayAdditionalHeroes : 1(offset 0x24d, mask = 0x10)
		uint8_t m_bItemContributesToNetWorthWhenDropped : 1(offset 0x24d, mask = 0x20)
		uint8_t m_bOnCastbar : 1(offset 0x24d, mask = 0x40)
		uint8_t m_bOnLearnbar : 1(offset 0x24d, mask = 0x80)
		uint8_t m_bIsGrantedByScepter : 1(offset 0x24e, mask = 0x1)
		uint8_t m_bIsGrantedByShard : 1(offset 0x24e, mask = 0x2)
		uint8_t m_bIsCastableWhileHidden : 1(offset 0x24e, mask = 0x4)
		uint8_t m_bAnimationIgnoresModelScale : 1(offset 0x24e, mask = 0x8)
		uint8_t m_bIsPlayerSpecificCooldown : 1(offset 0x24e, mask = 0x10)
		uint8_t m_bIsAllowedInBackpack : 1(offset 0x24e, mask = 0x20)
		uint8_t m_bIsObsolete : 1(offset 0x24e, mask = 0x40)
		uint8_t m_bItemRequiresCustomShop : 1(offset 0x24e, mask = 0x80)
		uint8_t m_bSuggestPregame : 1(offset 0x24f, mask = 0x1)
		uint8_t m_bSuggestEarlygame : 1(offset 0x24f, mask = 0x2)
		uint8_t m_bSuggestLategame : 1(offset 0x24f, mask = 0x4)
		uint8_t m_bIsAffectedByAoEIncrease : 1(offset 0x24f, mask = 0x8)
		uint8_t m_bHasCastAnimation : 1(offset 0x24f, mask = 0x10)
		uint8_t m_bItemHasPassive : 1(offset 0x24f, mask = 0x20)
		uint8_t m_bDisplayOverheadAlertOnReceived : 1(offset 0x24f, mask = 0x40)
		uint8_t m_bInnate : 1(offset 0x24f, mask = 0x80)
		uint8_t m_bIsSpeciallyAllowedInNeutralSlot : 1(offset 0x250, mask = 0x1)
		uint8_t m_bIsSpeciallyBannedFromNeutralSlot : 1(offset 0x250, mask = 0x2)
		uint8_t m_bIsCooldownPausedOutOfInventory : 1(offset 0x250, mask = 0x4)
		uint8_t m_bAllowCombineFromGround : 1(offset 0x250, mask = 0x8)
		uint8_t m_bRestrictToMaxLevel : 1(offset 0x250, mask = 0x10)
		uint8_t m_bHasDynamicValue : 1(offset 0x250, mask = 0x20)
		uint8_t m_bBreakable : 1(offset 0x250, mask = 0x40)
	}
	uint8_t[7] unaccounted(offset 0x251)

